{"version":3,"sources":["Components/Location/SelectedHospitalSnapShot/SelectedHospitalSnapShot.component.jsx"],"names":["containerStyle","position","width","height","SelectedHospitalSnapShot","props","nextProps","nextState","this","searchText","selectedHospitalList","JSON","stringify","sort","selectedHospitalZoneTags","className","key","Date","getTime","google","zoom","initialCenter","lat","userCords","lng","map","loc","index","h_loc","name","h_name","id","length","React","Component","connect","state","selectedHospital","GoogleApiWrapper","apiKey","GoogleCredentials"],"mappings":"mNAOMA,EAAiB,CACrBC,SAAU,WACVC,MAAO,UACPC,OAAQ,WAGJC,E,kDACJ,WAAYC,GAAQ,uCACZA,G,kEAGcC,EAAWC,GAC/B,OAA8B,OAA1BC,KAAKH,MAAMI,aAE8B,MAAlCH,EAAUI,sBAAmE,MAAnCF,KAAKH,MAAMK,sBAAgCC,KAAKC,UAAUN,EAAUI,qBAAqBG,UAAYF,KAAKC,UAAUJ,KAAKH,MAAMK,qBAAqBG,UAGnMF,KAAKC,UAAUN,EAAUQ,4BAA8BH,KAAKC,UAAUJ,KAAKH,MAAMS,2BAC/EH,KAAKC,UAAUN,EAAUI,qBAAqBG,UAAYF,KAAKC,UAAUJ,KAAKH,MAAMK,qBAAqBG,Y,+BAWjH,OAA2C,OAApCL,KAAKH,MAAMK,qBAChB,yBAAKK,UAAU,6BACb,kBAAC,MAAD,CACEC,KAAK,IAAIC,MAAOC,UAChBC,OAAQX,KAAKH,MAAMc,OACnBC,KAAM,GACNpB,eAAgBA,EAChBqB,cAAe,CACbC,IAAKd,KAAKH,MAAMkB,UAAU,GAC1BC,IAAKhB,KAAKH,MAAMkB,UAAU,KAG3Bf,KAAKH,MAAMK,qBAAqBe,KAAI,SAACC,EAAKC,GAAN,OACnC,kBAAC,SAAD,CAAQX,IAAKW,EAAO1B,SAAU,CAAEqB,IAAKI,EAAIE,MAAMN,IAAKE,IAAKE,EAAIE,MAAMJ,KAAOK,KAAMH,EAAII,OAAQC,GAAI,QAGpG,yBAAKhB,UAAU,uBACb,gCAASP,KAAKH,MAAMK,qBAAqBsB,OAAzC,eADF,uCAEE,6BAFF,wDAMA,S,GA7C+BC,IAAMC,WAwD9BC,uBAPS,SAACC,GAAD,MAAY,CAClCb,UAAWa,EAAMb,UAAUA,UAC3Bb,qBAAsB0B,EAAM1B,qBAAqB2B,iBACjD5B,WAAY2B,EAAM3B,WAAWA,WAC7BK,yBAA0BsB,EAAMtB,yBAAyBA,4BAG5CqB,CACbG,2BAAiB,CACfC,OAAQC,IAAkBD,QAD5BD,CAEGlC","file":"static/js/3.ebe349d2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\r\nimport GoogleCredentials from \"./../../../Utils/GoogleCredentials\";\r\nimport \"./../SelectedHospitalSnapShot/SelectedHospitalSnapShot.style.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst containerStyle = {\r\n  position: \"relative\",\r\n  width: \"inherit\",\r\n  height: \"inherit\",\r\n};\r\n\r\nclass SelectedHospitalSnapShot extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.props.searchText !== null) {\r\n      return false;\r\n    } else if (nextProps.selectedHospitalList == null || this.props.selectedHospitalList == null || JSON.stringify(nextProps.selectedHospitalList.sort()) === JSON.stringify(this.props.selectedHospitalList.sort())) {\r\n      return false;\r\n    } else {\r\n      if (JSON.stringify(nextProps.selectedHospitalZoneTags) === JSON.stringify(this.props.selectedHospitalZoneTags)) {\r\n        if (JSON.stringify(nextProps.selectedHospitalList.sort()) !== JSON.stringify(this.props.selectedHospitalList.sort())) {\r\n          return true;\r\n        }\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.selectedHospitalList !== null ? (\r\n      <div className='mapHolderHospitalSnapshot'>\r\n        <Map\r\n          key={new Date().getTime()}\r\n          google={this.props.google}\r\n          zoom={10}\r\n          containerStyle={containerStyle}\r\n          initialCenter={{\r\n            lat: this.props.userCords[0],\r\n            lng: this.props.userCords[1],\r\n          }}\r\n        >\r\n          {this.props.selectedHospitalList.map((loc, index) => (\r\n            <Marker key={index} position={{ lat: loc.h_loc.lat, lng: loc.h_loc.lng }} name={loc.h_name} id={1}></Marker>\r\n          ))}\r\n        </Map>\r\n        <div className='instructionSnapShot'>\r\n          <strong>{this.props.selectedHospitalList.length} Hospitals </strong> found at your selected Areas/Zones.\r\n          <br />\r\n          Scroll down to view the detailed list of hospitals.\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userCords: state.userCords.userCords,\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n  searchText: state.searchText.searchText,\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n});\r\n\r\nexport default connect(mapStateToProps)(\r\n  GoogleApiWrapper({\r\n    apiKey: GoogleCredentials.apiKey,\r\n  })(SelectedHospitalSnapShot)\r\n);\r\n"],"sourceRoot":""}