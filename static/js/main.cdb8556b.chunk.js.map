{"version":3,"sources":["Modals/WelcomeModal/WelcomeModal.component.jsx","Utils/BackDropDefault/BackDropOrg.component.jsx","Components/ContactMe/ContactMe.component.jsx","Components/Header/Header.component.jsx","Components/Footer/Footer.component.jsx","Utils/Switch/CustomSwitch.component.jsx","Components/Location/AddressDisplay/AddressDisplay.component.jsx","redux/userAddress/commuteFlag.action.js","Utils/GoogleCredentials.js","redux/userAddress/userCords.action.js","redux/userAddress/cordChangeFlag.action.js","Components/Common/MapsDisplay/google-maps.component.jsx","Components/Common/MapsDisplay/MapsDisplay.component.jsx","Components/Common/TagsDisplay/TagsDisplay.component.jsx","redux/locationInput/locationInput.action.js","Components/Ambulance/DisplayAmbulance/DisplayAmbulanceModal.component.jsx","Utils/Communicator/Communicator.component.js","Utils/ApiUrls.data.js","Components/Ambulance/DisplayCoronaDetails/DisplayCoronaModal.component.jsx","Components/Ambulance/Ambulance.component.jsx","Components/Location/SelectedHospitalSnapShot/SelectedHospitalSnapShot.component.jsx","Components/Location/Location.component.jsx","redux/userAddress/locationTags.action.js","Components/Hospital/HospitalCountDisplay.component.jsx","redux/selectedHospital/selectedHospital.action.js","redux/search/search.action.js","Utils/Sort.component.js","Components/Hospital/SearchBox/SearchBox.component.jsx","redux/selectedHospital/selectedHospitalZoneTags.action.js","Components/Hospital/FilterDisplay/FilterModal/FilterAreaTags.component.jsx","Components/Hospital/FilterDisplay/FilterDisplay.component.jsx","Components/Hospital/SortDisplay/SortModal/SortModal.component.jsx","Components/Hospital/SortDisplay/SortDisplay.component.jsx","Components/Hospital/HostiptalZoneCountDisplay.component.jsx","Components/Hospital/HospitalListDisplay/HospitalItem/HospitalItem.component.jsx","Modals/HospitalDetailsModal/RoadDirectionHospital/gmapIframe.component.jsx","Modals/HospitalDetailsModal/HospitalModalDetailTemplate.component.jsx","Components/Hospital/HospitalListDisplay/HospitalListModal/HospitalListModal.component.js","Utils/BackDropCustom/BackDropCustom.component.jsx","firebase/firebase.util.js","Modals/ErrorModal/ErrorModal.component.jsx","redux/totalHospitalDetails/rawHospitalData.action.js","Components/Hospital/HospitalListDisplay/HospitalDisplay.component.jsx","Components/Hospital/Hospital.component.jsx","Modals/AddressDetailModal/LocationOptionInput.component.jsx","Utils/SideAlert/SideALert.component.jsx","Modals/PermissionDeniedModal/DisplayLocationModal.component.jsx","App.js","redux/totalHospitalDetails/totalHospital.action.js","redux/userAddress/addressComponents.action.js","redux/userAddress/formattedAddress.action.js","BootBase.js","serviceWorker.js","redux/selectedHospital/selectedHospital.reducer.js","redux/totalHospitalDetails/totalHospital.reducer.js","redux/userAddress/addressComponents.reducer.js","redux/userAddress/formattedAddress.reducer.js","redux/userAddress/locationTags.reducer.js","redux/userAddress/userCords.reducer.js","redux/selectedHospital/selectedHospitalZoneTags.reducer.js","redux/totalHospitalDetails/rawHospitalData.reducer.js","redux/search/search.reducer.js","redux/locationInput/locationInput.reducer.js","redux/userAddress/cordChangeFlag.reducer.js","redux/userAddress/commuteFlag.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["WelcomeModal","props","id","Dialog","fullWidth","open","style","backgroundColor","color","PaperProps","borderRadius","top","onClose","handleAlertClose","aria-labelledby","aria-describedby","DialogContent","paddingLeft","paddingRight","className","DialogActions","Button","onClick","variant","BackDropDefault","Backdrop","zIndex","opacity","CircularProgress","LinearProgress","ContactMe","handleSubmit","event","state","name","feedback","setState","errorMessage","onTransition","sendFeedback","message_html","from_name","reply_to","email","closeModal","snkBar","closeSnackBar","handleChange","bind","type","this","target","value","templateId","variables","window","emailjs","send","then","res","catch","err","fullScreen","onclose","Container","maxWidth","padding","fontSize","onChange","e","placeholder","required","rows","cols","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","React","Component","Header","openContactMe","contactMe","closeContactMe","AppBar","position","display","justifyContent","Typography","gutterBottom","IconButton","aria-label","Footer","BottomNavigation","showLabels","CustomSwitch","Switch","checked","checkedState","handleChangeSwitch","inputProps","connect","formattedAddress","dispatch","setCommuteFlag","commuteFlag","payload","accessPermission","useState","infoFlag","handleInfoClose","GoogleCredentials","apiKey","setUserCords","userCords","setCordChangeFlag","cordChangeFlag","containerStyle","width","height","GoogleMaps","onMarkerDragEnd","coord","draggable","latLng","lat","lng","setuserCordsFlag","key","Date","getTime","google","zoom","initialCenter","currentLat","currentLong","title","onDragend","t","map","flag","GoogleApiWrapper","commmuteFlag","Paper","locationTags","selectedHospitalZoneTags","tagtype","elem","index","setLocationModal","locationModal","Iframe","dangerouslySetInnerHTML","__html","iframe","pin","addressComponents","Divider","length","CommunicatorFetch","urlName","params","proxyNeed","url","console","log","undefined","fetch","response","json","ApiUrls","getUserCurrentLocation","getPlaceDetails","getHospitalCompleteDetails","getCoronaUpdate","getHospitalCodes","getHospitalDetails","StyledTableCell","withStyles","theme","head","palette","common","white","body","TableCell","StyledTableRow","root","TableRow","useStyles","makeStyles","table","background","boxShadow","margin","DisplayCoronaDetails","classes","c_data","TableContainer","component","Table","TableHead","align","TableBody","Object","keys","el","Ambulance","totalData","getCoronaDetails","APiUrls","data","infected","recovered","dead","forEach","dst_name","deceased","error","handleScroll","leftPosition","scrollY","myRef","current","offsetTop","myRef2","left","ambulanceTravelNode","classList","add","remove","handleCloseAmbulanceModal","displayambulance","openAmbulanceModal","openCoronaModal","displayCorona","closeCoronaModal","createRef","addEventListener","ref","onScroll","SelectedHospitalSnapShot","nextProps","nextState","searchText","JSON","stringify","selectedHospitalList","sort","loc","h_loc","h_name","selectedHospital","exclusiveKeywords","Location","renderCount","prepareLocationTags","finalTags","filter","dataElem","types","some","includes","setLocationTags","Set","handleOpenLocationModal","prevProps","prevState","elevation","fontWeight","letterSpacing","textTransform","size","setSelectedHospitalList","setSearchText","customSort","hospitalList","temp","a","b","Number","lastIndex","remArr","hospital","splice","concat","capitalletter","str","i","x","split","toUpperCase","substr","join","SearchBox","org_selectedHospital","prepareSearchEngine","tempResult","hospitalDetails","push","completeHospitalData","searchEngine","getSearchResults","finalKeys","finalResult","ob","toLowerCase","hptl","hosp","setSelectedlList","preparePostSearchSelectedZoneHospitalList","tempHptlList","selectedHospitalLocationTags","handleSearchEngine","trim","TextField","label","totalHospitalDetails","rawHospitalData","search","setSelectedHospitalZoneTags","FilterTags","loc_selectedTags","loc_leftTags","updateLocateStates","selectedTags","leftTags","handleCancel","handleFilterChange","findIndex","handleDelete","prevprops","Chip","onDelete","deleteIcon","FilterDisplay","handleCloseAreaTags","opt","areaTagsOption","handleOpenAreaTags","selectedZoneTags","SortModal","initialVal","setValue","useTheme","useMediaQuery","breakpoints","down","RadioGroup","handleRadioChange","FormControlLabel","control","Radio","autoFocus","SortDisplay","sortOptions","sortData","handleSwitchChange","val","handleOpenFilter","openFilteralert","handleCloseAlert","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","scope","textDecoration","format","geolib","latitude","longitude","Fab","hospitalCord","smallGreen","spacing","green","HospitalModalDetailTemplate","rating","Avatar","c_bed","Box","fontStyle","m","formatted_address","href","formatted_phone_number","international_phone_number","website","geometry","location","h_dist","reviews","rv","Card","CardHeader","avatar","src","profile_photo_url","author_name","subheader","relative_time_description","CardContent","text","HospitalListModal","handleClose","headerTitle","BackDropCustom","createHospitalProfile","h_data","hospRef","firestore","doc","get","exists","set","getHospitalProfileAll","firebase","collection","snapshot","initializeApp","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ErrorModal","BackdropProps","setRawHospitalData","HospitalListDisplay","proxyNeedFlagFirstCall","proxyNeedFlagSecondCall","googleFetchTryCountFirstCall","googleFetchTryCountSecondCall","errorBodyMessage","modalContent","createHospitalDetailModayBody","tempHtml","handleOpenModal","openModal","openZoneBackDrop","handleHospitalDetailsPre","h_zone","handleHospitalDetails","viewErrorModal","prms","handleCloseModal","handleErrorClose","CardMedia","Hospital","loc_selectedHospitalCount","pendingChange","prepareSelectedZoneHospitalList","hospitalZoneTags","loc_hospitalZoneTags","square","LocationOptionInput","handleInputChange","nam","locality","district","errorMssg","country","multiline","defaultValue","InputProps","readOnly","TransitionLeft","Slide","direction","SideAlert","TransitionComponent","SnackbarContent","border","Transition","forwardRef","DisplayLocationModal","App","loc_PermissionAccess","geoLocationMove","locChangeAlertCount","proxyNeedFlag","googleFetchTryCount","temp_alert_data","loc_locationCoordinates_lat","loc_locationCoordinates_long","loc_cordChangeFlag","prepareHospitalData","tempArr","assign","Array","isArray","arrangeHospitalKeyMap","getLocationWhenCordsChangedByUser","openBackDrop","getFormattedAddress","getLocationTrack","navigator","geolocation","watchPosition","pos","parseFloat","toFixed","coords","alertBar","handleBackDropClose","openPermissionDeniedAlert","timeout","Infinity","maximumAge","enableHighAccuracy","getCurrentPosition","long","results","setFormattedAddress","setAddressComponents","address_components","TransitionDown","searchGoogleForUserDetails","tempAddr","pop","long_name","short_name","tmmpAddr","snackBar","snackBarMessage","reload","handleCloseWelcomeAlert","openWelcomeAlert","handleCloseLocationOptionAlert","handleCloseSnackBar","handleCloseDeniedPermissionAlert","clearWatch","showLocation","userCordChangeFlag","hospitalDetailsData","tempMap","j","find","elm","setTotalHospitalDetails","Fragment","CssBaseline","action","locationModalOpen","Bootbase","enableAppModule","Boolean","hostname","match","INITIAL_STATE","selectedHospitalReducer","totalHospitalDetailReducer","addressComponentsReducer","formattedAddressReducer","locationTagsReducer","userCordsReducer","selectedHospitalZoneTagsReducer","rawHospitalDataReducer","searchReducer","locationInputReducer","cordChangeFlagReducer","commuteFlagReducer","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cdb8556b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./../WelcomeModal/WelcomeModal.style.scss\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function WelcomeModal(props) {\r\n  return (\r\n    <div id='welcomeDialogue'>\r\n      <Dialog\r\n        fullWidth={true}\r\n        open={props.open}\r\n        style={{\r\n          backgroundColor: \"#5264ca\",\r\n          color: \"white\",\r\n        }}\r\n        PaperProps={{\r\n          style: {\r\n            borderRadius: \"5px\",\r\n            top: \"30px\",\r\n          },\r\n        }}\r\n        onClose={props.handleAlertClose}\r\n        aria-labelledby='alert-dialog-title'\r\n        aria-describedby='alert-dialog-description'\r\n      >\r\n        <DialogContent style={{ backgroundColor: \"#3b87ff\", paddingLeft: \"5px\", paddingRight: \"5px\" }} id='welcomeContent'>\r\n          <div className='headerImageContainer'>\r\n            <div className='headerImageHolder'></div>\r\n            <div className='animatorTest'>\r\n              <div className='headerImageFiller'>\r\n                <div className='headerImageFillerInner'></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='welcomeNote'> Hello !</div>\r\n          </div>\r\n          <div className='welcomeContent'>\r\n            <div className='welcomeBodyContent'>\r\n              <div className='div_0'>\r\n                <strong>Lets Stand Strong Together. </strong>\r\n              </div>\r\n              <div className='div_1'>\r\n                <strong>\r\n                  <span className='NameHolder'>COVID19 HospitalTracker</span>\r\n                </strong>\r\n                is a mobile-friendly web app designed specifically to help you tackle the tough times of COVID19.\r\n                <br />\r\n                <br />\r\n                This web-app helps you in tracking hospitals providing care for COVID19 patients based on your location.\r\n              </div>\r\n              <br />\r\n              <div className='div_2'> To aid you in the best way,enable permission to access your device location when asked next.</div>\r\n              Stay safe.\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions style={{ backgroundColor: \"#3b87ff\" }}>\r\n          <div className='btn_Container'>\r\n            <Button onClick={() => props.onClose(true)} color='primary' variant='contained'>\r\n              Proceed\r\n            </Button>\r\n          </div>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nexport const BackDropDefault = ({ open }) => {\r\n  return open ? (\r\n    <Backdrop open style={{ backgroundColor: \"#183259\", zIndex: \"1\", opacity: \"0.95\" }}>\r\n      <div className='loadTrackerWelcome'>\r\n        <div className='loaderContainer'>\r\n          <CircularProgress />\r\n        </div>\r\n        <div className='loaderTextContainer'>Please wait while we try to trace your current location..</div>\r\n        <LinearProgress />\r\n      </div>\r\n    </Backdrop>\r\n  ) : null;\r\n};\r\n","import React from \"react\";\r\n\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport \"./../ContactMe/ContactMe.style.scss\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nexport default class ContactMe extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { feedback: \"\", name: \"\", email: \"joydas1611@gmail.com\", errorMessage: \"\", snkBar: false, onTransition: false };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(event, type) {\r\n    if (type === \"feedbackDesc\") {\r\n      this.setState({ feedback: event.target.value });\r\n    } else {\r\n      this.setState({ name: event.target.value });\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    const templateId = \"template_lddOxOX0\";\r\n    if (this.state.name !== \"\" && this.state.feedback !== \"\") {\r\n      this.setState(\r\n        {\r\n          errorMessage: \"\",\r\n          onTransition: true,\r\n        },\r\n        () => this.sendFeedback(templateId, { message_html: this.state.feedback, from_name: this.state.name, reply_to: this.state.email })\r\n      );\r\n    } else if (this.state.name === \"\") {\r\n      this.setState({\r\n        errorMessage: \"Opps ! You missed out your name.\",\r\n      });\r\n    } else if (this.state.feedback === \"\") {\r\n      this.setState({\r\n        errorMessage: \"Please dont send me blank messages !\",\r\n      });\r\n    }\r\n  };\r\n  sendFeedback(templateId, variables) {\r\n    window.emailjs\r\n      .send(\"gmail\", templateId, variables)\r\n      .then((res) => {\r\n        this.setState({\r\n          errorMessage: \"\",\r\n          feedback: \"\",\r\n          name: \"\",\r\n          snkBar: true,\r\n          onTransition: false,\r\n        });\r\n      })\r\n      // Handle errors here however you like, or use a React error boundary\r\n      .catch((err) =>\r\n        this.setState({\r\n          onTransition: false,\r\n          errorMessage: \"Message sending failed.Please try again in sometime.\",\r\n        })\r\n      );\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState(\r\n      {\r\n        snkBar: false,\r\n        errorMessage: \"\",\r\n      },\r\n      () => this.props.onClose()\r\n    );\r\n  };\r\n\r\n  closeSnackBar = () => {\r\n    this.setState({\r\n      snkBar: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog fullScreen open={this.props.open} onClose={this.props.onclose} aria-labelledby='Contact Me' aria-describedby='About Me'>\r\n          <div\r\n            className='bod_Skeleton'\r\n            style={{\r\n              backgroundColor: \"##ebecf0\",\r\n            }}\r\n          >\r\n            <DialogContent\r\n              style={{\r\n                backgroundColor: \"##ebecf0\",\r\n              }}\r\n            >\r\n              <Container maxWidth='xs' style={{ padding: \"0\" }}>\r\n                <div onClick={() => this.closeModal()}>\r\n                  <CloseIcon fontSize='large' />\r\n                </div>\r\n                <div className='bod_Container'>\r\n                  <div className='bod_ImageHolder'>\r\n                    <div className='div_Welcome'>\r\n                      <h2>Insights</h2>\r\n                    </div>\r\n                    <div className='div_avatar'>\r\n                      <div className='div_Avatar_ImgContainer'>\r\n                        <div className='avt_inner'></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='bod_FormHolder'>\r\n                    <div className='desContainer'>\r\n                      Hi! I am <strong>Joy</strong> and I develop web applications and websites as part of my livelihood. COVID19 HospitalTracker is a pet-project of mine and is intended as a giveaway to the community during tough times.\r\n                      <br />\r\n                      If you find it useful, drop a message to show your love and appreciation ! <br />\r\n                      <br />\r\n                      Cheers !\r\n                    </div>\r\n                    <div className='formContainer'>\r\n                      <label>\r\n                        <input id='userName' name='userName' onChange={(e) => this.handleChange(e, \"userName\")} type='text' value={this.state.name} placeholder='Your Name' required />\r\n                      </label>\r\n                      <label>\r\n                        <textarea id='feedbackDesc' name='feedbackDesc' onChange={(e) => this.handleChange(e, \"feedbackDesc\")} required value={this.state.feedback} placeholder='Your Message To Me...' rows='4' cols='35' />\r\n                      </label>\r\n                    </div>\r\n                    {this.state.errorMessage !== \"\" ? <div className='errorHolder'>{this.state.errorMessage}</div> : null}\r\n                  </div>\r\n                  <div className='bod_ActionHolder'>\r\n                    <div className={this.state.onTransition ? \"btnContactMe disableDiv\" : \"btnContactMe\"} onClick={this.handleSubmit}>\r\n                      Send Message\r\n                    </div>\r\n                    <div className='btnContactMe' onClick={() => this.closeModal()}>\r\n                      No, maybe later\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Container>\r\n            </DialogContent>\r\n          </div>\r\n        </Dialog>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={this.state.snkBar}\r\n          onClose={() => this.closeSnackBar()}\r\n          autoHideDuration={2000}\r\n          message='Message delivered succesfully!'\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport ContactMe from \"./../ContactMe/ContactMe.component\";\r\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport \"./../Header/Header.style.scss\";\r\n\r\nexport class Header extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      contactMe: false,\r\n    };\r\n  }\r\n\r\n  openContactMe = () => {\r\n    this.setState({\r\n      contactMe: true,\r\n    });\r\n  };\r\n\r\n  closeContactMe = () => {\r\n    this.setState({\r\n      contactMe: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar position='static' className='Header'>\r\n          <Container maxWidth='md' style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div id='back-to-top-anchor'>\r\n              <Typography variant='h6' gutterBottom>\r\n                <span className='logoHolderText2 '>COVID19</span>\r\n                <span className='logoHolderText'>HospitalTracker</span>\r\n              </Typography>\r\n            </div>\r\n            <div onClick={() => this.openContactMe()}>\r\n              <IconButton aria-label='delete' style={{ padding: \"5px 0\", color: \"#00fff9\" }}>\r\n                <MenuIcon />\r\n              </IconButton>\r\n            </div>\r\n          </Container>\r\n        </AppBar>\r\n        <ContactMe open={this.state.contactMe} onClose={() => this.closeContactMe()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./../Footer/Footer.style.scss\";\r\n\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\n\r\nimport ContactMe from \"./../ContactMe/ContactMe.component\";\r\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport class Footer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contactMe: false,\r\n    };\r\n  }\r\n\r\n  openContactMe = () => {\r\n    this.setState({\r\n      contactMe: true,\r\n    });\r\n  };\r\n\r\n  closeContactMe = () => {\r\n    this.setState({\r\n      contactMe: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BottomNavigation showLabels className='Footer'>\r\n          <div className='cpDiv'>\r\n            <div>&copy; Copyright 2020, COVID19HospitalTracker.</div>\r\n            <div>All rights reserved.</div>\r\n          </div>\r\n          <div className='authorAvatar' onClick={() => this.openContactMe()}>\r\n            <IconButton aria-label='delete' style={{ padding: \"5px 0\", color: \"#00fff9\" }}>\r\n              <ContactMailIcon />\r\n            </IconButton>\r\n          </div>\r\n        </BottomNavigation>\r\n        <ContactMe open={this.state.contactMe} onClose={() => this.closeContactMe()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst CustomSwitch = (props) => {\r\n  return <Switch checked={props.checkedState} onChange={(e) => props.handleChangeSwitch(e)} color='primary' inputProps={{ \"aria-label\": \"primary checkbox\" }} />;\r\n};\r\n\r\nexport default CustomSwitch;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport PersonPinIcon from \"@material-ui/icons/PersonPin\";\r\n\r\nimport CustomSwitch from \"./../../../Utils/Switch/CustomSwitch.component\";\r\nimport { setCommuteFlag } from \"./../../../redux/userAddress/commuteFlag.action\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport \"./../AddressDisplay/AddressDisplay.style.scss\";\r\n\r\nconst AddressDisplay = ({ accessPermission, formattedAddress, setCommuteFlag }) => {\r\n  const [state, setState] = React.useState({\r\n    commuteFlag: false,\r\n    infoFlag: false,\r\n  });\r\n\r\n  let loc_commuteFlag = false;\r\n  const handleChangeSwitch = (event) => {\r\n    // console.log(event.target.checked);\r\n    setState({\r\n      commuteFlag: event.target.checked,\r\n    });\r\n    loc_commuteFlag = event.target.checked ? \"labelSwitchActive\" : \"labelSwitchDefault\";\r\n    setCommuteFlag(event.target.checked);\r\n  };\r\n\r\n  const handleInfoClose = () => {\r\n    setState({\r\n      infoFlag: false,\r\n    });\r\n  };\r\n\r\n  const openInfoFlag = () => {\r\n    setState({\r\n      infoFlag: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='locationTitleContainer'>\r\n        <div className={state.commuteFlag ? \"locationIconholder locationIconholderGlow\" : \"locationIconholder\"}>\r\n          <LocationOnIcon fontSize='large' color='primary'></LocationOnIcon>\r\n        </div>\r\n        <div className='locationDesc'>\r\n          <div>\r\n            <PersonPinIcon />\r\n          </div>\r\n          <div> Your current location :</div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='AddressContainer'>\r\n          <div className='addressHolder'>\r\n            <address>{formattedAddress}</address>\r\n            {accessPermission ? (\r\n              <div className='commuterHolder'>\r\n                <CustomSwitch handleChangeSwitch={(e) => handleChangeSwitch(e)} />\r\n                <div className={state.commuteFlag ? \"labelSwitchActive\" : \"labelSwitchDefault\"}>\r\n                  <div className='textSpan'> I am commuting/travelling right now.</div>\r\n                  <div className='enbContainer'>\r\n                    <span className='EnableDisable'>{state.commuteFlag ? \"Enabled\" : \"Disabled\"}</span>\r\n                    <span onClick={() => openInfoFlag()}>\r\n                      <InfoIcon style={{ color: \"#a3cccb\" }} fontSize='medium' />\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Dialog onClose={() => handleInfoClose()} aria-labelledby='Commute Description' open={state.infoFlag}>\r\n        <div className='InfoCloseDiv'>\r\n          <CloseIcon onClick={() => handleInfoClose()} />\r\n        </div>\r\n        <div className='infoBody'>\r\n          Enabling <strong>\"I am commuting/travelling right now\" </strong> indicates that you are not at a particular position/home but travelling to someplece right now. Once enabled, we will track your current changing location details and update available hospitals nearby to you automatically in a periodic manner as you travel.\r\n          <br />\r\n          <br />\r\n          Note: If you need to search a particular hospital details,check available hospitals of different zones/areas or custom-change your present location, we suggest you to <strong>disable this option</strong> so that the location updates doesn't disrupt your activity.\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  formattedAddress: state.formattedAddress.formattedAddress,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCommuteFlag: (commuteFlag) => dispatch(setCommuteFlag(commuteFlag)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddressDisplay);\r\n","export const setCommuteFlag = (commuteFlag) => ({\r\n  type: \"SET_COMMUTE_FLAG\",\r\n  payload: commuteFlag,\r\n});\r\n","const GoogleCredentials = {\r\n  apiKey: \"AIzaSyArulgFkLD1tIDxd0ia5YDtjMd53J8Zuwc\",\r\n};\r\n\r\nexport default GoogleCredentials;\r\n\r\n/*\r\ndev use - AIzaSyAyesbQMyKVVbBgKVi2g6VX7mop2z96jBo\r\nprod use - AIzaSyArulgFkLD1tIDxd0ia5YDtjMd53J8Zuwc\r\n*/\r\n","export const setUserCords = (userCords) => ({\r\n  type: \"SET_USER_CORDS\",\r\n  payload: userCords,\r\n});\r\n","export const setCordChangeFlag = (cordChangeFlag) => ({\r\n  type: \"SET_CORD_CHANGE\",\r\n  payload: cordChangeFlag,\r\n});\r\n","import React from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\r\nimport GoogleCredentials from \"./../../../Utils/GoogleCredentials\";\r\nimport \"./../MapsDisplay/google-maps.style.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setUserCords } from \"./../../../redux/userAddress/userCords.action\";\r\nimport { setCordChangeFlag } from \"./../../../redux/userAddress/cordChangeFlag.action\";\r\n\r\nconst containerStyle = {\r\n  position: \"relative\",\r\n  width: \"inherit\",\r\n  height: \"inherit\",\r\n};\r\n\r\nclass GoogleMaps extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  onMarkerDragEnd = (coord) => {\r\n    if (this.props.draggable) {\r\n      const { latLng } = coord;\r\n      const lat = latLng.lat();\r\n      const lng = latLng.lng();\r\n      this.props.setUserCords([lat, lng]);\r\n      this.props.setuserCordsFlag(true);\r\n    }\r\n\r\n    //console.log(lat + \",\" + lng);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className='mapHolder'>\r\n        <Map\r\n          key={new Date().getTime()}\r\n          google={this.props.google}\r\n          zoom={14}\r\n          containerStyle={containerStyle}\r\n          initialCenter={{\r\n            lat: this.props.currentLat,\r\n            lng: this.props.currentLong,\r\n          }}\r\n        >\r\n          <Marker title='Your current location' position={{ lat: this.props.currentLat, lng: this.props.currentLong }} name={\"Your position\"} id={1} draggable={this.props.draggable} onDragend={(t, map, coord) => this.onMarkerDragEnd(coord)}></Marker>\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setUserCords: (userCords) => dispatch(setUserCords(userCords)),\r\n  setuserCordsFlag: (flag) => dispatch(setCordChangeFlag(flag)),\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(\r\n  GoogleApiWrapper({\r\n    apiKey: GoogleCredentials.apiKey,\r\n  })(GoogleMaps)\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"./../MapsDisplay/MapsDisplay.style.scss\";\r\n\r\nimport GoogleMaps from \"./google-maps.component\";\r\n\r\nconst MapsDisplay = ({ userCords, commuteFlag }) => {\r\n  return userCords !== null ? (\r\n    <div className='mapcontainer'>\r\n      <Paper variant='outlined' className='shadowCustom'>\r\n        <div className='mapcontainer'>\r\n          <GoogleMaps currentLat={userCords[0]} currentLong={userCords[1]} draggable={!commuteFlag}></GoogleMaps>\r\n          {!commuteFlag ? <div className='instruction'>Drag the Locator to change your present location.</div> : null}\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userCords: state.userCords.userCords,\r\n  commuteFlag: state.commmuteFlag.commuteFlag,\r\n});\r\n\r\nexport default connect(mapStateToProps)(MapsDisplay);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./../TagsDisplay/TagsDisplay.style.scss\";\r\n\r\nconst TagsDisplay = (props) => {\r\n  return props.locationTags !== null && props.selectedHospitalZoneTags !== null ? (\r\n    props.tagtype === \"userTag\" ? (\r\n      <div className='staticTagHolderContainer'>\r\n        {props.locationTags.map((elem, index) => (\r\n          <div key={index} className='staticKeyTags'>\r\n            {elem}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    ) : (\r\n      <div className='staticTagHolderContainer'>\r\n        {props.selectedHospitalZoneTags.map((elem, index) => (\r\n          <div key={index} className='staticKeyTags'>\r\n            {elem}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  ) : null;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  locationTags: state.locationTags.locationTags,\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n});\r\n\r\nexport default connect(mapStateToProps)(TagsDisplay);\r\n","export const setLocationModal = (locationModal) => ({\r\n  type: \"SET_LOCATION_MODAL\",\r\n  payload: locationModal,\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Header } from \"./../../../Components/Header/Header.component\";\r\nimport \"./../DisplayAmbulance/DisplayAmbulanceModal.style.scss\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport GoogleCredentials from \"./../../../Utils/GoogleCredentials\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst iframe = \"<iframe width='100%' height='450px' frameborder='0' style='border:0' src='https://www.google.com/maps/embed/v1/search?key=\";\r\n\r\nconst Iframe = (props) => {\r\n  //props.iframe = props.iframe + props.pin + \"' allowfullscreen></iframe>\";\r\n  return <div className='iframe-container' dangerouslySetInnerHTML={{ __html: props.iframe ? props.iframe + GoogleCredentials.apiKey + \"&center=\" + props.userCords[0] + \",\" + props.userCords[1] + \"&zoom=11&q=health+ambulance+service+medical+near+\" + props.pin + \"' allowfullscreen></iframe>\" : \"\" }} />;\r\n};\r\n\r\nconst DisplayAmbulance = (props) => {\r\n  return (\r\n    <Dialog fullScreen open={props.open} onClose={props.onclose} aria-labelledby='Display Ambulances' aria-describedby='Display Ambulances'>\r\n      <Header />\r\n      <div className='filterTagsHeader'>Check Ambulance Services Near You</div>\r\n      <div className='filterTagsBodySortAmbulance'>\r\n        <div className='SortTitleDesc'>View available ambulance services near you.We strongly suggest to call and book an appointment.</div>\r\n        <div className='dividerHolder'>\r\n          <Divider />\r\n        </div>\r\n        <div className='iframeContainer'>\r\n          <Iframe iframe={iframe} pin={props.addressComponents[props.addressComponents.length - 1][\"long_name\"]} userCords={props.userCords} />\r\n        </div>\r\n        <div className='actionHolder'>\r\n          <Button variant='contained' color='primary' onClick={() => props.onclose()}>\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  addressComponents: state.addressComponents.addressComponents,\r\n  userCords: state.userCords.userCords,\r\n});\r\nexport default connect(mapStateToProps)(DisplayAmbulance);\r\n","import GoogleCredentials from \"./../GoogleCredentials\";\r\n\r\nconst apiKey = \"&key=\" + GoogleCredentials.apiKey;\r\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\nexport const CommunicatorFetch = (urlName, params, proxyNeed) => {\r\n  console.log(\"Communication fetched==\" + urlName);\r\n  let url;\r\n  if (params !== undefined) {\r\n    if (proxyNeed !== undefined) {\r\n      url = proxyurl + urlName + params + apiKey;\r\n    } else {\r\n      url = urlName + params + apiKey;\r\n    }\r\n  } else {\r\n    url = urlName;\r\n  }\r\n  //url =  url;\r\n  return fetch(url).then((response) => response.json());\r\n};\r\n","const ApiUrls = {\r\n  getUserCurrentLocation: \"https://maps.googleapis.com/maps/api/geocode/json?latlng=\",\r\n  getPlaceDetails: \"https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input=\",\r\n  getHospitalCompleteDetails: \"https://maps.googleapis.com/maps/api/place/details/json?place_id=\",\r\n  getCoronaUpdate: \"https://api.covid19india.org/state_district_wise.json\",\r\n  getHospitalCodes: \"https://joyjd.github.io/cv19api/hospitalCodes.json\",\r\n  getHospitalDetails: \"https://joyjd.github.io/cv19api/hospitalDetails.json\",\r\n};\r\n\r\nexport default ApiUrls;\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Header } from \"./../../../Components/Header/Header.component\";\r\nimport \"./../DisplayAmbulance/DisplayAmbulanceModal.style.scss\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport \"./../DisplayCoronaDetails/DisplayCoronaModal.style.scss\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#1a355c\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: \"#639ab626\",\r\n    },\r\n  },\r\n}))(TableRow);\r\nconst useStyles = makeStyles({\r\n  table: {},\r\n  root: {\r\n    borderRadius: \"205px\",\r\n    background: \"#e9e2e2\",\r\n    boxShadow: \"3px 3px 7px #c6c0c0,  -3px -3px 7px #ffffff\",\r\n    color: \"#1a355c9e\",\r\n    margin: \"0 5px 2px 0\",\r\n  },\r\n});\r\n\r\nconst DisplayCoronaDetails = (props) => {\r\n  const classes = useStyles();\r\n  return props.c_data !== null ? (\r\n    <Dialog fullScreen open={props.open} onClose={props.onclose} aria-labelledby='Display Corona Details' aria-describedby='Display Corona Details'>\r\n      <Header />\r\n      <div className='filterTagsHeader'>View COVID19 Information</div>\r\n      <div className='filterTagsBodyCoronaTable'>\r\n        <div className='SortTitleDesc'>District-wise data of COVID19 pandemic in West Bengal.</div>\r\n        <div className='dividerHolder'>\r\n          <Divider />\r\n        </div>\r\n        <div>\r\n          <TableContainer component={Paper} id='hospitalDetailTable'>\r\n            <Table className={classes.table} aria-label='customized table'>\r\n              <TableHead>\r\n                <TableRow style={{ backgroundColor: \"red\", color: \"white\" }}>\r\n                  <StyledTableCell>District</StyledTableCell>\r\n                  <StyledTableCell align='right'>Infected</StyledTableCell>\r\n                  <StyledTableCell align='right'>Active</StyledTableCell>\r\n                  <StyledTableCell align='right'>Recovered</StyledTableCell>\r\n                  <StyledTableCell align='right'>Dead</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {Object.keys(props.c_data).map((el, index) => (\r\n                  <StyledTableRow key={index}>\r\n                    <StyledTableCell align='right'>{el}</StyledTableCell>\r\n                    <StyledTableCell align='right'>{props.c_data[el][\"confirmed\"]}</StyledTableCell>\r\n                    <StyledTableCell align='right'>{props.c_data[el][\"active\"]}</StyledTableCell>\r\n                    <StyledTableCell align='right'>{props.c_data[el][\"recovered\"]}</StyledTableCell>\r\n                    <StyledTableCell align='right'>{props.c_data[el][\"deceased\"]}</StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n\r\n        <div className='actionHolder'>\r\n          <Button variant='contained' color='primary' onClick={() => props.onClose()}>\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  ) : null;\r\n};\r\n\r\nexport default DisplayCoronaDetails;\r\n","import React from \"react\";\r\n\r\nimport \"./../Ambulance/Ambulance.style.scss\";\r\n\r\nimport DisplayAmbulance from \"./DisplayAmbulance/DisplayAmbulanceModal.component\";\r\n\r\nimport { CommunicatorFetch } from \"./../../Utils/Communicator/Communicator.component\";\r\nimport APiUrls from \"./../../Utils/ApiUrls.data\";\r\n\r\nimport DisplayCoronaDetails from \"./DisplayCoronaDetails/DisplayCoronaModal.component\";\r\n\r\nclass Ambulance extends React.Component {\r\n  totalData = null;\r\n  constructor() {\r\n    super();\r\n    this.myRef = React.createRef();\r\n    this.myRef2 = React.createRef();\r\n    this.state = {\r\n      infected: 0,\r\n      recovered: 0,\r\n      deceased: 0,\r\n      displayambulance: false,\r\n      displayCorona: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n    this.getCoronaDetails();\r\n  }\r\n\r\n  getCoronaDetails = () => {\r\n    CommunicatorFetch(APiUrls.getCoronaUpdate).then(\r\n      (data) => {\r\n        console.log(data);\r\n        this.totalData = data[\"West Bengal\"][\"districtData\"];\r\n        let infected = 0;\r\n        let recovered = 0;\r\n        let dead = 0;\r\n        Object.keys(this.totalData).forEach((dst_name) => {\r\n          infected += this.totalData[dst_name][\"confirmed\"];\r\n          recovered += this.totalData[dst_name][\"recovered\"];\r\n          dead += this.totalData[dst_name][\"deceased\"];\r\n        });\r\n        this.setState({\r\n          infected: infected,\r\n          recovered: recovered,\r\n          deceased: dead,\r\n        });\r\n      },\r\n      (error) => {}\r\n    );\r\n  };\r\n  handleScroll = () => {\r\n    const scrollY = window.scrollY;\r\n    const offsetTop = this.myRef.current.offsetTop;\r\n    let leftPosition = scrollY - offsetTop;\r\n    leftPosition = leftPosition + 250;\r\n    //console.log(leftPosition);\r\n    this.myRef2.current.style.left = leftPosition + \"px\";\r\n    //this.myRef2.current.style.transition = \"left 1s\";\r\n\r\n    if (this.ambulanceTravelNode !== null && this.ambulanceTravelNode > leftPosition) {\r\n      this.myRef2.current.classList.add(\"displayAmb2\");\r\n      this.myRef2.current.classList.remove(\"displayAmb1\");\r\n    } else if (this.ambulanceTravelNode !== null && leftPosition < 0) {\r\n      this.myRef2.current.classList.remove(\"displayAmb2\");\r\n      this.myRef2.current.classList.add(\"displayAmb1\");\r\n    }\r\n    this.ambulanceTravelNode = leftPosition;\r\n  };\r\n\r\n  handleCloseAmbulanceModal = () => {\r\n    this.setState({\r\n      displayambulance: false,\r\n    });\r\n  };\r\n  openAmbulanceModal = () => {\r\n    this.setState({\r\n      displayambulance: true,\r\n    });\r\n  };\r\n\r\n  openCoronaModal = () => {\r\n    this.setState({\r\n      displayCorona: true,\r\n    });\r\n  };\r\n\r\n  closeCoronaModal = () => {\r\n    this.setState({\r\n      displayCorona: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='amb' ref={this.myRef} onScroll={this.handleScroll}>\r\n          <div className='bg-move displayAmb1' ref={this.myRef2}>\r\n            <div className='coronaDataHolderTitle '>COVID19 Updates(WB)</div>\r\n\r\n            <div className='dataHolder'>\r\n              <div>\r\n                <div className='dataDiv'>Infected</div>\r\n                <div>{this.state.infected}</div>\r\n              </div>\r\n              <div>\r\n                <div className='dataDiv'>Recovered</div>\r\n                <div>{this.state.recovered}</div>\r\n              </div>\r\n              <div>\r\n                <div className='dataDiv'>Death</div>\r\n                <div>{this.state.deceased}</div>\r\n              </div>\r\n            </div>\r\n            <div className='coronaDetailsPromptHolder' onClick={() => this.openCoronaModal()}>\r\n              <mark>\r\n                <em>View District-wise</em>\r\n              </mark>\r\n            </div>\r\n            {/*  <div className='coronaDetailsPromptHolder'>\r\n              <div onClick={() => this.openCoronaModal()}>\r\n                <em>View District-wise</em>\r\n              </div>\r\n            </div>\r\n            <div className='ambulancePromptHolder'>\r\n              <label onClick={() => this.openAmbulanceModal()}>Find Ambulances</label>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <div className='ambLight light--flash'></div>\r\n        <div className='ambulanceContainer' onClick={() => this.openAmbulanceModal()}>\r\n          <div className='ambulancePromptHolder'>Find Ambulances Near You</div>\r\n        </div>\r\n\r\n        <DisplayAmbulance onclose={() => this.handleCloseAmbulanceModal()} open={this.state.displayambulance} />\r\n        <DisplayCoronaDetails c_data={this.totalData} open={this.state.displayCorona} onClose={() => this.closeCoronaModal()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ambulance;\r\n","import React from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\r\nimport GoogleCredentials from \"./../../../Utils/GoogleCredentials\";\r\nimport \"./../SelectedHospitalSnapShot/SelectedHospitalSnapShot.style.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst containerStyle = {\r\n  position: \"relative\",\r\n  width: \"inherit\",\r\n  height: \"inherit\",\r\n};\r\n\r\nclass SelectedHospitalSnapShot extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.props.searchText !== null) {\r\n      return false;\r\n    } else if (JSON.stringify(nextProps.selectedHospitalList.sort()) === JSON.stringify(this.props.selectedHospitalList.sort())) {\r\n      return false;\r\n    } else {\r\n      if (JSON.stringify(nextProps.selectedHospitalZoneTags) === JSON.stringify(this.props.selectedHospitalZoneTags)) {\r\n        if (JSON.stringify(nextProps.selectedHospitalList.sort()) !== JSON.stringify(this.props.selectedHospitalList.sort())) {\r\n          return true;\r\n        }\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.selectedHospitalList !== null ? (\r\n      <div className='mapHolderHospitalSnapshot'>\r\n        <Map\r\n          key={new Date().getTime()}\r\n          google={this.props.google}\r\n          zoom={10}\r\n          containerStyle={containerStyle}\r\n          initialCenter={{\r\n            lat: this.props.userCords[0],\r\n            lng: this.props.userCords[1],\r\n          }}\r\n        >\r\n          {this.props.selectedHospitalList.map((loc, index) => (\r\n            <Marker key={index} position={{ lat: loc.h_loc.lat, lng: loc.h_loc.lng }} name={loc.h_name} id={1}></Marker>\r\n          ))}\r\n        </Map>\r\n        <div className='instructionSnapShot'>\r\n          <strong>{this.props.selectedHospitalList.length} Hospitals </strong> found at your selected Areas/Zones.\r\n          <br />\r\n          Scroll down to view the detailed list of hospitals.\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userCords: state.userCords.userCords,\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n  searchText: state.searchText.searchText,\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n});\r\n\r\nexport default connect(mapStateToProps)(\r\n  GoogleApiWrapper({\r\n    apiKey: GoogleCredentials.apiKey,\r\n  })(SelectedHospitalSnapShot)\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./../Location/Location.style.scss\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport AddressDisplay from \"./AddressDisplay/AddressDisplay.component\";\r\nimport MapsDisplay from \"./../Common/MapsDisplay/MapsDisplay.component\";\r\nimport TagsDisplay from \"./../Common/TagsDisplay/TagsDisplay.component\";\r\nimport { setLocationTags } from \"./../../redux/userAddress/locationTags.action\";\r\nimport { setLocationModal } from \"./../../redux/locationInput/locationInput.action\";\r\nimport Ambulance from \"./../Ambulance/Ambulance.component\";\r\nimport SelectedHospitalSnapShot from \"./SelectedHospitalSnapShot/SelectedHospitalSnapShot.component\";\r\n\r\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\r\nconst exclusiveKeywords = [\"country\"];\r\n\r\nclass Location extends React.Component {\r\n  renderCount = 0;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.addressComponents !== null) {\r\n      this.prepareLocationTags();\r\n    }\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    // console.log(\"getDerivedStateFromProps executed\");\r\n    return null;\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    // console.log(\"shouldComponentUpdate executed\");\r\n    return true;\r\n  }\r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    // console.log(\"getSnapshotBeforeUpdate executed\");\r\n    return null;\r\n  }\r\n\r\n  prepareLocationTags = () => {\r\n    let finalTags = this.props.addressComponents.filter((dataElem) => {\r\n      return !dataElem.types.some((el) => exclusiveKeywords.includes(el));\r\n    });\r\n\r\n    this.props.setLocationTags([...new Set(finalTags.map((el) => el[\"long_name\"]).filter((el) => el !== \"West Bengal\"))]);\r\n  };\r\n\r\n  handleOpenLocationModal = () => {\r\n    this.props.setLocationModal(true);\r\n  };\r\n\r\n  render() {\r\n    return this.props.addressComponents !== null ? (\r\n      <div>\r\n        <div className='locationCardContainer'>\r\n          <Paper elevation={3} className='transparentBorder'>\r\n            <AddressDisplay accessPermission={this.props.accessPermission} />\r\n            <MapsDisplay />\r\n\r\n            {!this.props.commuteFlag ? (\r\n              <div className='addressInputHolder'>\r\n                <div className='addressInputIconHolder'>\r\n                  <BorderColorIcon fontSize='small' />\r\n                </div>\r\n                <Button\r\n                  style={{\r\n                    fontWeight: \"500\",\r\n                    letterSpacing: \"0\",\r\n                    textTransform: \"none\",\r\n                  }}\r\n                  size='small'\r\n                  onClick={() => this.handleOpenLocationModal()}\r\n                >\r\n                  Not Correct? Type your current address\r\n                </Button>\r\n              </div>\r\n            ) : null}\r\n\r\n            <TagsDisplay tagtype='userTag' />\r\n            <SelectedHospitalSnapShot />\r\n          </Paper>\r\n        </div>\r\n        <Ambulance />\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setLocationTags: (locationTags) => dispatch(setLocationTags(locationTags)),\r\n  setLocationModal: (locationModal) => dispatch(setLocationModal(locationModal)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  addressComponents: state.addressComponents.addressComponents,\r\n  commuteFlag: state.commmuteFlag.commuteFlag,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Location);\r\n","export const setLocationTags = (locationTags) => ({\r\n  type: \"SET_LOCATION_TAGS\",\r\n  payload: locationTags,\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HospitalCountDisplay = ({ selectedHospitalList, searchText }) => {\r\n  return selectedHospitalList !== null ? (\r\n    <div>\r\n      <div>Hospitals Found ({selectedHospitalList.length})*</div>\r\n      {searchText === null ? <div className='listNature'>* based on your current location areas</div> : <div className='listNature'>* based on Search Results</div>}\r\n    </div>\r\n  ) : null;\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n  searchText: state.searchText.searchText,\r\n});\r\nexport default connect(mapStateToProps)(HospitalCountDisplay);\r\n","export const setSelectedHospitalList = (selectedHospitalList) => ({\r\n  type: \"SET_SELECTED_HOSPITAL_LIST\",\r\n  payload: selectedHospitalList,\r\n});\r\n","export const setSearchText = (searchText) => ({\r\n  type: \"SET_SEARCH_TEXT\",\r\n  payload: searchText,\r\n});\r\n","export const customSort = (hospitalList) => {\r\n  let temp = hospitalList.sort((a, b) => Number(a[\"h_dist\"]) - Number(b[\"h_dist\"]));\r\n  let lastIndex = null;\r\n  let remArr = [];\r\n  temp.forEach((hospital, index) => {\r\n    if (hospital[\"h_dist\"] === \"\") {\r\n      lastIndex = index;\r\n    }\r\n  });\r\n\r\n  if (lastIndex !== null) {\r\n    remArr = temp.splice(0, lastIndex + 1);\r\n  }\r\n  //console.log(remArr);\r\n  temp = temp.concat(remArr);\r\n\r\n  return temp;\r\n};\r\n\r\nexport const capitalletter = (str) => {\r\n  str = str.split(\" \");\r\n\r\n  for (let i = 0, x = str.length; i < x; i++) {\r\n    str[i] = str[i][0].toUpperCase() + str[i].substr(1);\r\n  }\r\n\r\n  return str.join(\" \");\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setSelectedHospitalList } from \"./../../../redux/selectedHospital/selectedHospital.action\";\r\nimport { setSearchText } from \"./../../../redux/search/search.action\";\r\n\r\nimport \"./../SearchBox/SearchBox.style.scss\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { customSort } from \"./../../../Utils/Sort.component\";\r\n\r\nclass SearchBox extends React.Component {\r\n  org_selectedHospital = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchEngine: null,\r\n      searchText: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.hospitalDetails !== null) {\r\n      this.prepareSearchEngine();\r\n    }\r\n  }\r\n\r\n  prepareSearchEngine = () => {\r\n    let tempResult = [];\r\n\r\n    Object.keys(this.props.hospitalDetails).forEach((elem) => {\r\n      this.props.hospitalDetails[elem].forEach((el) => {\r\n        //prepare entire list\r\n        this.org_selectedHospital.push(el);\r\n\r\n        //lookup in detailslist\r\n        if (this.props.completeHospitalData[el[\"h_name\"]]) {\r\n          if (this.props.completeHospitalData[el[\"h_name\"]][\"name\"] !== el[\"h_name\"]) {\r\n            tempResult.push({\r\n              [el[\"h_name\"]]: [el[\"h_name\"], this.props.completeHospitalData[el[\"h_name\"]][\"name\"]],\r\n            });\r\n          } else {\r\n            tempResult.push({\r\n              [el[\"h_name\"]]: [el[\"h_name\"]],\r\n            });\r\n          }\r\n        } else {\r\n          tempResult.push({\r\n            [el[\"h_name\"]]: [el[\"h_name\"]],\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({\r\n      searchEngine: tempResult,\r\n    });\r\n    //console.log(tempResult);\r\n  };\r\n\r\n  getSearchResults = () => {\r\n    let finalKeys = [];\r\n    let finalResult = [];\r\n    let res = this.state.searchEngine.filter((ob) => {\r\n      return ob[Object.keys(ob)[0]].filter((e) => e.toLowerCase().includes(this.state.searchText.toLowerCase())).length !== 0;\r\n    });\r\n\r\n    res.forEach((el) => finalKeys.push(Object.keys(el)[0]));\r\n    finalKeys.forEach((hptl) => {\r\n      finalResult.push(this.org_selectedHospital.filter((hosp) => hosp.h_name.includes(hptl))[0]);\r\n    });\r\n    finalResult = [...new Set(finalResult)];\r\n    /* this.setState({\r\n      selectedHospitalList: finalResult,\r\n    }); */\r\n    this.props.setSelectedlList(customSort(finalResult));\r\n  };\r\n\r\n  preparePostSearchSelectedZoneHospitalList = () => {\r\n    let tempHptlList = [];\r\n    this.props.selectedHospitalLocationTags.forEach((elem) => {\r\n      if (this.props.hospitalDetails[elem]) {\r\n        this.props.hospitalDetails[elem].forEach((el) => tempHptlList.push(el));\r\n      }\r\n    });\r\n    this.props.setSelectedlList(customSort(tempHptlList));\r\n    /* this.setState({\r\n      selectedHospitalList: tempHptlList,\r\n    }); */\r\n  };\r\n\r\n  handleSearchEngine = (el) => {\r\n    if (el.target.value.trim() !== \"\") {\r\n      this.props.setSearchText(el.target.value);\r\n      this.setState({ searchText: el.target.value }, () => this.getSearchResults());\r\n    } else {\r\n      this.props.setSearchText(null);\r\n      this.setState(\r\n        {\r\n          searchText: \"\",\r\n        },\r\n        () => this.preparePostSearchSelectedZoneHospitalList()\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='displayFlex searchBoxHospitalContainer shadowCustom'>\r\n        <div className='searchIconHolder'>\r\n          <SearchIcon />\r\n        </div>\r\n        <div className='w_100'>\r\n          <TextField type='search' id='outlined-textarea' value={this.state.searchText} className='w_100' label='Search Hospitals By Name' placeholder='Find any COVID19 hospital ..' variant='filled' onChange={(el) => this.handleSearchEngine(el)} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSelectedlList: (selectedHospitalList) => dispatch(setSelectedHospitalList(selectedHospitalList)),\r\n  setSearchText: (search) => dispatch(setSearchText(search)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  hospitalDetails: state.totalHospitalDetails.totalHospitalDetails,\r\n  selectedHospitalLocationTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n  completeHospitalData: state.rawHospitalData.rawHospitalData,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBox);\r\n","export const setSelectedHospitalZoneTags = (selectedHospitalZoneTags) => ({\r\n  type: \"SET_SELECTED_HOSPITAL_ZONE_TAGS\",\r\n  payload: selectedHospitalZoneTags,\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./../FilterModal/FilterAreaTags.style.scss\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Header } from \"./../../../Header/Header.component\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\n\r\nclass FilterTags extends React.Component {\r\n  loc_selectedTags = null;\r\n  loc_leftTags = null;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedTags: [],\r\n      leftTags: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.selectedHospitalZoneTags !== null && this.props.hospitalDetails !== null) {\r\n      this.setState({\r\n        selectedTags: this.props.selectedHospitalZoneTags,\r\n        leftTags: Object.keys(this.props.hospitalDetails).filter((el) => !this.props.selectedHospitalZoneTags.includes(el)),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevprops) {\r\n    if (prevprops.selectedHospitalZoneTags !== this.props.selectedHospitalZoneTags) {\r\n      console.log(this.props.selectedHospitalZoneTags);\r\n      console.log(this.state.selectedTags);\r\n\r\n      this.loc_selectedTags = this.props.selectedHospitalZoneTags;\r\n      this.loc_leftTags = Object.keys(this.props.hospitalDetails).filter((el) => !this.props.selectedHospitalZoneTags.includes(el));\r\n      if (this.loc_selectedTags !== this.state.selectedTags) {\r\n        this.updateLocateStates();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateLocateStates = () => {\r\n    this.setState({\r\n      selectedTags: this.loc_selectedTags,\r\n      leftTags: this.loc_leftTags,\r\n    });\r\n  };\r\n  handleCancel = () => {\r\n    this.setState(\r\n      {\r\n        selectedTags: this.props.selectedHospitalZoneTags,\r\n        leftTags: Object.keys(this.props.hospitalDetails).filter((el) => !this.props.selectedHospitalZoneTags.includes(el)),\r\n      },\r\n      () => this.props.onClose(\"\", \"cancel\")\r\n    );\r\n  };\r\n\r\n  handleFilterChange = (type, el) => {\r\n    if (type === \"del\") {\r\n      let temp = this.state.selectedTags;\r\n      temp.splice(\r\n        temp.findIndex((e) => e === el),\r\n        1\r\n      );\r\n\r\n      this.setState({\r\n        selectedTags: temp,\r\n        leftTags: this.state.leftTags.concat(el).sort(),\r\n      });\r\n    } else {\r\n      let temp = this.state.leftTags;\r\n      temp.splice(\r\n        temp.findIndex((e) => e === el),\r\n        1\r\n      );\r\n      this.setState({\r\n        selectedTags: this.state.selectedTags.concat(el).sort(),\r\n        leftTags: temp,\r\n      });\r\n    }\r\n  };\r\n  handleDelete = (type, el) => this.handleFilterChange(type, el);\r\n\r\n  render() {\r\n    return this.props.open ? (\r\n      <Dialog fullScreen open={this.props.open} onClose={this.props.onclose} aria-labelledby='Select Hospital Zones' aria-describedby='Option to select Hospital Area Tags'>\r\n        <Header />\r\n        <div className='filterTagsHeader'>Select Areas/ Zones</div>\r\n        <div className='filterTagsBody'>\r\n          <div>You can select areas/zones to view COVID19 treatment providing hospitals of that area.</div>\r\n          <div className='dividerHolder'>\r\n            <Divider />\r\n          </div>\r\n          <div className='displayFlex headerTagLineDesc'>\r\n            <div>\r\n              <LocalOfferIcon fontSize='small' />\r\n            </div>\r\n            <div>\r\n              Selected {this.state.selectedTags.length} out of {this.state.selectedTags.length + this.state.leftTags.length} Areas/Zones.\r\n            </div>\r\n          </div>\r\n          <div className='chipsHolder'>\r\n            {this.state.selectedTags.sort().map((el, index) => {\r\n              return (\r\n                <div key={index} className='chipsKey'>\r\n                  <Chip key={index} size='small' label={el} color='primary' onClick={() => this.handleFilterChange(\"del\", el)} onDelete={() => this.handleDelete(\"del\", el)} deleteIcon={<DoneIcon />} />\r\n                </div>\r\n              );\r\n            })}\r\n            {this.state.leftTags.sort().map((el, index) => {\r\n              return (\r\n                <div key={index} className='chipsKey'>\r\n                  <Chip key={index} size='small' label={el} color='default' onClick={() => this.handleFilterChange(\"add\", el)} onDelete={() => this.handleDelete(\"add\", el)} deleteIcon={<AddIcon />} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className='dividerHolder displayEqual'>\r\n            <Button variant='contained' color='primary' onClick={() => this.handleCancel()}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant='contained' color='primary' onClick={() => this.props.onClose(this.state.selectedTags, \"\")}>\r\n              Apply Selection\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n  hospitalDetails: state.totalHospitalDetails.totalHospitalDetails,\r\n});\r\nexport default connect(mapStateToProps)(FilterTags);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./../FilterDisplay/FilterDisplay.style.scss\";\r\n\r\nimport { setSelectedHospitalList } from \"./../../../redux/selectedHospital/selectedHospital.action\";\r\nimport { setSearchText } from \"./../../../redux/search/search.action\";\r\nimport { setSelectedHospitalZoneTags } from \"./../../../redux/selectedHospital/selectedHospitalZoneTags.action\";\r\nimport { customSort } from \"./../../../Utils/Sort.component\";\r\nimport FilterTags from \"./FilterModal/FilterAreaTags.component\";\r\n\r\nclass FilterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      areaTagsOption: false,\r\n    };\r\n  }\r\n\r\n  handleCloseAreaTags = (el, opt) => {\r\n    if (opt === \"\") {\r\n      let temp = [];\r\n      el.forEach((e) => {\r\n        if (this.props.hospitalDetails[e]) {\r\n          temp = temp.concat(this.props.hospitalDetails[e]);\r\n        }\r\n      });\r\n      this.props.setSelectedHospitalZoneTags(el);\r\n      this.props.setSelectedlList(customSort(temp));\r\n    }\r\n    this.setState(\r\n      {\r\n        areaTagsOption: false,\r\n      },\r\n      () => this.props.setSearchText(null)\r\n    );\r\n  };\r\n\r\n  handleOpenAreaTags = () => {\r\n    this.setState({\r\n      areaTagsOption: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.props.selectedHospitalZoneTags !== null && this.props.hospitalDetails !== null ? (\r\n      <div className='filterDiv'>\r\n        <Button variant='contained' color='primary' onClick={() => this.handleOpenAreaTags()}>\r\n          Filter by Area / Zones\r\n        </Button>\r\n        <FilterTags open={this.state.areaTagsOption} onClose={(el, opt) => this.handleCloseAreaTags(el, opt)} />\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n  hospitalDetails: state.totalHospitalDetails.totalHospitalDetails,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSelectedlList: (selectedHospitalList) => dispatch(setSelectedHospitalList(selectedHospitalList)),\r\n  setSearchText: (search) => dispatch(setSearchText(search)),\r\n  setSelectedHospitalZoneTags: (selectedZoneTags) => dispatch(setSelectedHospitalZoneTags(selectedZoneTags)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterDisplay);\r\n","import React from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Header } from \"./../../../Header/Header.component\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport \"./../SortModal/SortModal.style.scss\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default function SortModal(props) {\r\n  const [value, setValue] = React.useState(props.initialVal === \"\" ? \"isChecked_op_hospital\" : props.initialVal);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    props.handleRadioChange(event.target.value);\r\n  };\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  return (\r\n    <Dialog fullScreen={fullScreen} open={props.open} onClose={props.onclose} aria-labelledby='Sort Hospitals' aria-describedby='Option to sort Hospitals'>\r\n      <Header />\r\n      <div className='filterTagsHeader'>Sort Hospitals</div>\r\n      <div className='filterTagsBodySort'>\r\n        <div className='SortTitleDesc'>You can sort list of hospitals according to your view</div>\r\n        <div className='dividerHolder'>\r\n          <Divider />\r\n        </div>\r\n        <div className='displayFlex headerTagLineDesc'></div>\r\n        <div className='chipsHolder'>\r\n          <RadioGroup aria-label='gender' name='gender1' value={value} onChange={handleChange}>\r\n            <FormControlLabel value='isChecked_op_bed' control={<Radio color='primary' />} label='More vacancy of COVID beds' />\r\n            <FormControlLabel value='isChecked_op_hospital' control={<Radio color='primary' />} label='Hospitals nearer to your current location' />\r\n          </RadioGroup>\r\n        </div>\r\n        <div className='dividerHolder displayEqual'>\r\n          <Button variant='contained' color='primary' onClick={() => props.onClose(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant='contained' color='primary' onClick={() => props.onClose(true)} autoFocus>\r\n            Sort\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./../SortDisplay/SortDisplay.style.scss\";\r\n\r\nimport { setSelectedHospitalList } from \"./../../../redux/selectedHospital/selectedHospital.action\";\r\n\r\nimport SortModal from \"./SortModal/SortModal.component\";\r\n\r\nclass SortDisplay extends React.Component {\r\n  sortOptions = \"\";\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openFilteralert: false,\r\n    };\r\n  }\r\n\r\n  sortData = () => {\r\n    if (this.sortOptions === \"isChecked_op_hospital\") {\r\n      let temp = this.props.selectedHospitalList.sort((a, b) => Number(a[\"h_dist\"]) - Number(b[\"h_dist\"]));\r\n      let lastIndex = null;\r\n      let remArr = [];\r\n      temp.forEach((hospital, index) => {\r\n        if (hospital[\"h_dist\"] === \"\") {\r\n          lastIndex = index;\r\n        }\r\n      });\r\n\r\n      if (lastIndex !== null) {\r\n        remArr = temp.splice(0, lastIndex + 1);\r\n      }\r\n      console.log(remArr);\r\n      temp = temp.concat(remArr);\r\n\r\n      this.props.setSelectedlList(temp);\r\n    } else {\r\n      this.props.setSelectedlList(this.props.selectedHospitalList.sort((a, b) => b[\"c_bed\"] - a[\"c_bed\"]));\r\n    }\r\n  };\r\n  handleSwitchChange = (val) => {\r\n    this.sortOptions = val;\r\n  };\r\n\r\n  handleOpenFilter = () => {\r\n    this.setState({\r\n      openFilteralert: true,\r\n    });\r\n  };\r\n  handleCloseAlert = (el) => {\r\n    this.setState({\r\n      openFilteralert: false,\r\n    });\r\n    if (el) {\r\n      this.sortData();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='sortDiv'>\r\n        <Button variant='contained' color='primary' onClick={() => this.handleOpenFilter()}>\r\n          Manage View\r\n        </Button>\r\n        <SortModal open={this.state.openFilteralert} onClose={(el) => this.handleCloseAlert(el)} initialVal={this.sortOptions} handleRadioChange={(val) => this.handleSwitchChange(val)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSelectedlList: (selectedHospitalList) => dispatch(setSelectedHospitalList(selectedHospitalList)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortDisplay);\r\n","import { connect } from \"react-redux\";\r\n\r\nconst HostiptalZoneCountDisplay = ({ selectedHospitalZoneTags }) => {\r\n  return selectedHospitalZoneTags !== null ? selectedHospitalZoneTags.length : null;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n});\r\nexport default connect(mapStateToProps)(HostiptalZoneCountDisplay);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\n\r\nimport FindInPageIcon from \"@material-ui/icons/FindInPage\";\r\nimport \"./../HospitalItem/HospitalItem.style.scss\";\r\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\r\nimport * as geolib from \"geolib\";\r\nimport PriorityHighIcon from \"@material-ui/icons/PriorityHigh\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#1a355c\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: \"#639ab626\",\r\n    },\r\n  },\r\n}))(TableRow);\r\nconst useStyles = makeStyles({\r\n  table: {},\r\n  root: {\r\n    borderRadius: \"205px\",\r\n    background: \"#e9e2e2\",\r\n    boxShadow: \"3px 3px 7px #c6c0c0,  -3px -3px 7px #ffffff\",\r\n    color: \"#1a355c9e\",\r\n    margin: \"0 5px 2px 0\",\r\n  },\r\n});\r\nconst formatter = new Intl.NumberFormat(\"en-US\", {\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\nconst HospitalItem = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return props.userCords !== null ? (\r\n    <TableContainer component={Paper} id='hospitalDetailTable'>\r\n      <Table className={classes.table} aria-label='customized table'>\r\n        <TableHead>\r\n          <TableRow style={{ backgroundColor: \"red\", color: \"white\" }}>\r\n            <StyledTableCell>Covid19 Hospital({props.selectedHospitalList.length})</StyledTableCell>\r\n            <StyledTableCell align='right'>Area</StyledTableCell>\r\n            <StyledTableCell align='right'>Vacant Beds*</StyledTableCell>\r\n            <StyledTableCell align='right'></StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {props.selectedHospitalList.map((el) => (\r\n            <StyledTableRow key={el[\"h_name\"]}>\r\n              <StyledTableCell component='th' scope='row'>\r\n                <div style={{ textDecoration: \"underline\" }} onClick={() => props.onClick(el[\"h_name\"], el[\"h_zone\"], el[\"c_bed\"], el[\"h_dist\"])}>\r\n                  <strong> {el[\"h_name\"]}</strong>\r\n                </div>\r\n                <div className='distanceIndicator'>\r\n                  {el[\"h_loc\"] !== \"\" ? (\r\n                    <span className='distanceData'>\r\n                      <DirectionsRunIcon />\r\n                    </span>\r\n                  ) : (\r\n                    <span className='errorData'>\r\n                      <PriorityHighIcon />\r\n                    </span>\r\n                  )}\r\n                  <span>{el[\"h_loc\"] !== \"\" ? (el[\"h_dist\"] = formatter.format(geolib.getPreciseDistance({ latitude: props.userCords[0], longitude: props.userCords[1] }, { latitude: el[\"h_loc\"][\"lat\"], longitude: el[\"h_loc\"][\"lng\"] }) / 1000)) : \"\"}</span>\r\n                  {el[\"h_loc\"] !== \"\" ? <span>Km away*</span> : <span>Data not known</span>}\r\n                </div>\r\n              </StyledTableCell>\r\n              <StyledTableCell align='right'>{el[\"h_zone\"]}</StyledTableCell>\r\n              <StyledTableCell align='right'>\r\n                <div className='displayFlex'>\r\n                  {el[\"c_bed\"] > 2 ? (\r\n                    <div className='icon-green'>\r\n                      <i></i>\r\n                    </div>\r\n                  ) : (\r\n                    <div className='icon-orange'>\r\n                      <i></i>\r\n                    </div>\r\n                  )}\r\n\r\n                  <strong>{el[\"c_bed\"]}</strong>\r\n                </div>\r\n              </StyledTableCell>\r\n              <StyledTableCell align='right'>\r\n                <Fab classes={{ root: classes.root }} size='small' color='primary' aria-label='add' onClick={() => props.onClick(el[\"h_name\"], el[\"h_zone\"], el[\"c_bed\"], el[\"h_dist\"])}>\r\n                  <FindInPageIcon fontSize='small' />\r\n                </Fab>\r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      {props.selectedHospitalList.length === 0 ? <div className='noResultFoundcontainer'>No hospitals found.</div> : <span></span>}\r\n    </TableContainer>\r\n  ) : null;\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  userCords: state.userCords.userCords,\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n});\r\nexport default connect(mapStateToProps)(HospitalItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport GoogleCredentials from \"./../../../Utils/GoogleCredentials\";\r\n\r\nconst iframe = \"<iframe   width='100%' height='300px' frameborder='0' style='border:0' src='https://www.google.com/maps/embed/v1/directions?key=\";\r\n\r\nconst GmapIframe = (props) => {\r\n  return <div className='iframe-container' dangerouslySetInnerHTML={{ __html: iframe ? iframe + GoogleCredentials.apiKey + \"&origin=\" + props.userCords[0] + \",\" + props.userCords[1] + \"&destination=\" + props.hospitalCord[0] + \",\" + props.hospitalCord[1] + \"&zoom=11&avoid=tolls|highways' allowfullscreen></iframe>\" : \"\" }} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userCords: state.userCords.userCords,\r\n});\r\nexport default connect(mapStateToProps)(GmapIframe);\r\n","import React from \"react\";\r\nimport \"./../HospitalDetailsModal/HospitalModalDetailTemplate.style.scss\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\n\r\nimport PhoneInTalkIcon from \"@material-ui/icons/PhoneInTalk\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport HotelIcon from \"@material-ui/icons/Hotel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\r\nimport CommuteIcon from \"@material-ui/icons/Commute\";\r\nimport DirectionsWalkIcon from \"@material-ui/icons/DirectionsWalk\";\r\nimport GmapIframe from \"./RoadDirectionHospital/gmapIframe.component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  smallGreen: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n    color: \"#fff\",\r\n    backgroundColor: green[500],\r\n  },\r\n}));\r\nexport const HospitalModalDetailTemplate = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      {props.data !== undefined ? (\r\n        <div className='ribbon'>\r\n          <span>\r\n            <StarIcon fontSize='small' />\r\n            {props.data.rating}\r\n          </span>\r\n        </div>\r\n      ) : null}\r\n      <Paper elevation={3}>\r\n        <div className='hosp_detailContainer'>\r\n          <div className='covidInfoBody'>\r\n            <div>\r\n              <Avatar variant='rounded' className={classes.smallGreen}>\r\n                <HotelIcon fontSize='small' />\r\n              </Avatar>\r\n            </div>\r\n            <div className='displayData displayFlex'>\r\n              <Typography>\r\n                <span className='covidNumberLabel'>{props.c_bed}</span>\r\n              </Typography>\r\n\r\n              <Typography color='textSecondary'> vacant COVID-19 beds *</Typography>\r\n            </div>\r\n          </div>\r\n          <Typography component='div' className='m_t_-5'>\r\n            <Box fontStyle='italic' m={1}>\r\n              <div className='disclaimerCovid'>*data displayed as per WB Government</div>\r\n            </Box>\r\n          </Typography>\r\n          <div className='hospInfoBody'>\r\n            {props.data !== undefined ? (\r\n              <div className='displayFlex '>\r\n                <div>\r\n                  <BusinessIcon fontSize='small' />\r\n                </div>\r\n                <div className='displayData'>{props.data.formatted_address}</div>\r\n              </div>\r\n            ) : null}\r\n\r\n            {props.data !== undefined ? (\r\n              <div className='displayFlex '>\r\n                <div>\r\n                  <PhoneInTalkIcon fontSize='small' />\r\n                </div>\r\n                <div className='displayData'>\r\n                  <a href='tel:{props.data.formatted_phone_number}'>{props.data.formatted_phone_number} </a> / <a href='tel:{props.data.international_phone_number}'> {props.data.international_phone_number}</a>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {props.data !== undefined ? (\r\n              <div className='displayFlex '>\r\n                <div>\r\n                  <LanguageIcon fontSize='small' />\r\n                </div>\r\n                <div className='displayData'>{props.data.website ? <a href='{props.data.website}'>{props.data.website} </a> : \"Not Known\"}</div>\r\n              </div>\r\n            ) : null}\r\n            {props.data !== undefined ? (\r\n              <div className='mapcontainerHospital'>\r\n                {/* <GoogleMaps draggable={false} currentLat={props.data.geometry.location.lat} currentLong={props.data.geometry.location.lng}></GoogleMaps> */}\r\n                <GmapIframe hospitalCord={[props.data.geometry.location.lat, props.data.geometry.location.lng]} />\r\n              </div>\r\n            ) : null}\r\n            {props.h_dist !== \"\" ? (\r\n              <div className='displayFlex m_tb_5'>\r\n                <div className='displayFlex'>\r\n                  <CommuteIcon />\r\n                  <DirectionsWalkIcon fontSize='small' />\r\n                </div>\r\n                {/* <div className='displayData'>Tentatively {props.h_dist} Km away from you</div> */}\r\n                <div className='displayData'>Tentative road-map shown, does not display present traffic conditions.Zoom in to check detils.</div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n      <div className='dividerCont'>\r\n        <Divider />\r\n      </div>\r\n      {props.data !== undefined && props.data.reviews !== undefined ? (\r\n        <div>\r\n          <div className='displayFlex m_tb_10'>\r\n            <div>\r\n              <RateReviewIcon fontSize='small' />\r\n            </div>\r\n            <div className='displayData fontBold'>User Reviews</div>\r\n          </div>\r\n          <div className='reviewContainer'>\r\n            {props.data.reviews.map((rv, index) => (\r\n              <Card key={index} className='m_b_6 cardReviews'>\r\n                <CardHeader avatar={<Avatar src={rv.profile_photo_url}></Avatar>} title={rv.author_name} subheader={rv.relative_time_description} />\r\n                <CardContent>\r\n                  <Typography variant='body2' color='textSecondary' component='p'>\r\n                    {rv.text}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport \"./../HospitalListModal/HospitalListModal.style.scss\";\r\n\r\nexport default function HospitalListModal(props) {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen={fullScreen} open={props.open} onClose={props.handleClose} aria-labelledby='responsive-dialog-title'>\r\n        <div className='hospitalImageContainer'>\r\n          <div className='hosp_headerTitleContainer'>{props.headerTitle}</div>\r\n        </div>\r\n\r\n        <DialogContent>{props.body}</DialogContent>\r\n        <DialogActions>\r\n          <Button style={{ margin: \"10px 20px 10px 0\" }} autoFocus onClick={() => props.onClose()} variant='contained' color='primary'>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nexport default function BackDropCustom(props) {\r\n  return props.open === true ? (\r\n    <Dialog open={props.open} onClose={props.handleAlertClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\r\n      <DialogContent>\r\n        <CircularProgress></CircularProgress>\r\n      </DialogContent>\r\n    </Dialog>\r\n  ) : null;\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBuRtnSpkl16_gayi7CkRj3xh98BNzWGKM\",\r\n  authDomain: \"cv19ht.firebaseapp.com\",\r\n  databaseURL: \"https://cv19ht.firebaseio.com\",\r\n  projectId: \"cv19ht\",\r\n  storageBucket: \"cv19ht.appspot.com\",\r\n  messagingSenderId: \"848826688923\",\r\n  appId: \"1:848826688923:web:2f264f379c627668fb2d3e\",\r\n  measurementId: \"G-JLY08JDRW4\",\r\n};\r\n\r\nexport const createHospitalProfile = async (h_name, h_data) => {\r\n  const hospRef = firestore.doc(`hospitals/${h_name}`);\r\n\r\n  const snapShot = await hospRef.get();\r\n\r\n  //console.log(firestore.doc(\"hospitals/abc\"));\r\n  if (!snapShot.exists && (h_data !== null || h_data !== undefined || h_data !== \"\" || h_data !== {})) {\r\n    try {\r\n      await hospRef.set({\r\n        ...h_data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  return hospRef;\r\n};\r\n\r\nexport const getHospitalProfileAll = async () => {\r\n  const snapshot = await firebase.firestore().collection(\"hospitals\").get();\r\n  const collection = {};\r\n  snapshot.forEach((doc) => {\r\n    collection[doc.id] = doc.data();\r\n  });\r\n  return collection;\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport \"./../ErrorModal/ErrorModal.style.scss\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const ErrorModal = ({ open, onclose, body }) => {\r\n  return (\r\n    <Dialog\r\n      BackdropProps={{\r\n        style: {\r\n          background: \"#b0c1cf\",\r\n          opacity: \"0.97\",\r\n        },\r\n      }}\r\n      PaperProps={{\r\n        style: {\r\n          borderRadius: \"5px\",\r\n          height: \"400px\",\r\n          width: \"400px\",\r\n          backgroundColor: \"#b0c1cf\",\r\n\r\n          boxShadow: \"6px 6px 12px #96a4b0,-6px -6px 12px #cadeee\",\r\n        },\r\n      }}\r\n      onClose={onclose}\r\n      aria-labelledby='simple-dialog-title'\r\n      open={open}\r\n    >\r\n      <DialogContent>\r\n        <div className='ErrorBody'>\r\n          <div className='ErrorHeader'>\r\n            <div className='contentdiv'>\r\n              <NewReleasesIcon fontSize='large' />\r\n            </div>\r\n            <div className='contentdiv'>\r\n              <BuildIcon fontSize='large' />\r\n            </div>\r\n            <div className='contentdiv textHeader'> OOPS !</div>\r\n          </div>\r\n          <div className='ErrorDesc'>{body}</div>\r\n          <div className='ErrorAction'>\r\n            <div>\r\n              <Button variant='contained' color='primary' onClick={() => onclose(true)}>\r\n                Okay\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","export const setRawHospitalData = (rawHospitalData) => ({\r\n  type: \"SET_RAW_HOSPITAL_DATA\",\r\n  payload: rawHospitalData,\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nimport \"./../HospitalListDisplay/HospitalDisplay.style.scss\";\r\n\r\nimport { CommunicatorFetch } from \"./../../../Utils/Communicator/Communicator.component\";\r\nimport ApiUrls from \"./../../../Utils/ApiUrls.data\";\r\n\r\nimport HospitalItem from \"./HospitalItem/HospitalItem.component\";\r\nimport { HospitalModalDetailTemplate } from \"./../../../Modals/HospitalDetailsModal/HospitalModalDetailTemplate.component\";\r\nimport HospitalListModal from \"./HospitalListModal/HospitalListModal.component\";\r\nimport BackDropCustom from \"./../../../Utils/BackDropCustom/BackDropCustom.component\";\r\nimport { createHospitalProfile } from \"./../../../firebase/firebase.util\";\r\nimport { ErrorModal } from \"./../../../Modals/ErrorModal/ErrorModal.component\";\r\n\r\nimport { setRawHospitalData } from \"./../../../redux/totalHospitalDetails/rawHospitalData.action\";\r\nimport { setSelectedHospitalList } from \"./../../../redux/selectedHospital/selectedHospital.action\";\r\n\r\nimport { customSort } from \"./../../../Utils/Sort.component\";\r\n\r\nclass HospitalListDisplay extends React.Component {\r\n  proxyNeedFlagFirstCall = false;\r\n  proxyNeedFlagSecondCall = false;\r\n  googleFetchTryCountFirstCall = 0;\r\n  googleFetchTryCountSecondCall = 0;\r\n\r\n  completeHospitalData = [];\r\n  errorBodyMessage = \"\";\r\n  modalContent = {\r\n    body: \"\",\r\n    headerTitle: \"\",\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      openZoneBackDrop: false,\r\n      openModal: false,\r\n      viewErrorModal: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.completeHospitalData !== null) {\r\n      this.completeHospitalData = this.props.completeHospitalData;\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.completeHospitalData !== null) {\r\n      this.completeHospitalData = this.props.completeHospitalData;\r\n    }\r\n  }\r\n\r\n  createHospitalDetailModayBody = (data, c_bed, h_dist) => {\r\n    let tempHtml;\r\n    if (typeof data === \"string\") {\r\n      tempHtml = <HospitalModalDetailTemplate c_bed={c_bed} h_dist={h_dist} />;\r\n      this.modalContent.headerTitle = data;\r\n    } else {\r\n      tempHtml = <HospitalModalDetailTemplate data={data} c_bed={c_bed} h_dist={h_dist} />;\r\n      this.modalContent.headerTitle = data[\"name\"];\r\n    }\r\n\r\n    this.modalContent.body = tempHtml;\r\n  };\r\n  handleOpenModal = () => {\r\n    this.setState({ openModal: true, openZoneBackDrop: false });\r\n  };\r\n  handleHospitalDetailsPre = (h_name, h_zone, c_bed, h_dist) => {\r\n    this.setState(\r\n      {\r\n        openZoneBackDrop: true,\r\n      },\r\n      () => this.handleHospitalDetails(h_name, h_zone, c_bed, h_dist)\r\n    );\r\n  };\r\n\r\n  handleHospitalDetails = (h_name, h_zone, c_bed, h_dist) => {\r\n    if (this.completeHospitalData[h_name]) {\r\n      this.createHospitalDetailModayBody(this.completeHospitalData[h_name], c_bed, h_dist);\r\n      this.handleOpenModal();\r\n    } /* else if(){\r\n           // For satellite cases\r\n    }  */ else {\r\n      let temp_hname;\r\n\r\n      if (h_name.split(\"\").includes(\"[\")) {\r\n        temp_hname = h_name.split(\"[\")[0];\r\n      }\r\n      if (h_name.split(\"\").includes(\"{\")) {\r\n        temp_hname = h_name.split(\"{\")[0];\r\n      } else {\r\n        temp_hname = h_name;\r\n      }\r\n      let searchText = \"\" + temp_hname + \" Hospital Medical,\" + h_zone + \",West Bengal,India\";\r\n      let params = searchText + \"&inputtype=textquery&fields=place_id\";\r\n      let firstCall;\r\n\r\n      if (this.proxyNeedFlagFirstCall) {\r\n        firstCall = CommunicatorFetch(ApiUrls.getPlaceDetails, params, \"proxyNeeded\");\r\n      } else {\r\n        firstCall = CommunicatorFetch(ApiUrls.getPlaceDetails, params);\r\n      }\r\n\r\n      firstCall\r\n        .then(\r\n          (data) => {\r\n            if (data[\"candidates\"].length !== 0 && data[\"status\"] === \"OK\") {\r\n              let place_id = data[\"candidates\"][0][\"place_id\"];\r\n              let prms = place_id + \"&fields=name,geometry,photos,rating,adr_address,business_status,formatted_address,formatted_phone_number,international_phone_number,opening_hours,website,price_level,rating,review,user_ratings_total\";\r\n              return prms;\r\n              //return CommunicatorFetch(ApiUrls.getHospitalCompleteDetails, prms);\r\n            } else {\r\n              return \"\";\r\n            }\r\n          },\r\n          (error) => {\r\n            //handle error scenerio for first call\r\n            ++this.googleFetchTryCountFirstCall;\r\n            if (this.googleFetchTryCountFirstCall === 1) {\r\n              this.proxyNeedFlagFirstCall = true;\r\n              this.handleHospitalDetails(h_name, h_zone, c_bed, h_dist);\r\n            }\r\n            if (this.googleFetchTryCountFirstCall > 1) {\r\n              this.googleFetchTryCountFirstCall = 0;\r\n              this.proxyNeedFlagFirstCall = false;\r\n\r\n              console.log(\"HospitalZoneComponent+ First call====p_id-=====ERROR !!!!!!\");\r\n              this.errorBodyMessage = \"It seems Google API failed to retrieve details for \" + h_name + \".Either there is no details data available for this particular hospital over internet or Google failed to retrieve data at the moment.Please try again in sometime.\";\r\n              this.setState({\r\n                openZoneBackDrop: false,\r\n                viewErrorModal: true,\r\n              });\r\n            }\r\n          }\r\n        )\r\n        .then((prms) => (this.proxyNeedFlagSecondCall ? CommunicatorFetch(ApiUrls.getHospitalCompleteDetails, prms, \"proxyNeeded\") : CommunicatorFetch(ApiUrls.getHospitalCompleteDetails, prms)))\r\n        .then(\r\n          (data) => {\r\n            if (data !== \"\") {\r\n              //get the new data\r\n              if (data[\"status\"] === \"OK\") {\r\n                // this.completeHospitalData[h_name] = data[\"result\"];\r\n\r\n                createHospitalProfile(h_name, data[\"result\"]);\r\n                this.completeHospitalData[h_name] = data[\"result\"];\r\n                this.props.setRawHospitalData(this.completeHospitalData);\r\n                //UPDATE h_dist\r\n                this.props.selectedHospitalList[this.props.selectedHospitalList.findIndex((el) => el.h_name === h_name)][\"h_loc\"] = data[\"result\"][\"geometry\"][\"location\"];\r\n                this.props.setSelectedlList(customSort(this.props.selectedHospitalList));\r\n                //Call function to form body\r\n                this.createHospitalDetailModayBody(this.completeHospitalData[h_name], c_bed, h_dist);\r\n                this.handleOpenModal();\r\n              } else {\r\n                this.createHospitalDetailModayBody(h_name, c_bed, h_dist);\r\n                this.handleOpenModal();\r\n              }\r\n            } else {\r\n              this.createHospitalDetailModayBody(h_name, c_bed, h_dist);\r\n              this.handleOpenModal();\r\n            }\r\n          },\r\n          (error) => {\r\n            // handle error scenerio for second call\r\n            ++this.googleFetchTryCountSecondCall;\r\n            if (this.googleFetchTryCountSecondCall === 1) {\r\n              this.proxyNeedFlagSecondCall = true;\r\n              //this.handleHospitalDetails(h_name, h_zone, c_bed, h_dist);\r\n            }\r\n\r\n            if (this.googleFetchTryCountSecondCall > 1) {\r\n              this.googleFetchTryCountSecondCall = 0;\r\n              this.proxyNeedFlagSecondCall = false;\r\n\r\n              console.log(\"HospitalZoneComponent+ Second call====details-=====ERROR !!!!!!\");\r\n              if (!this.state.viewErrorModal) {\r\n                this.errorBodyMessage = \"It seems Google API failed to retrieve details for \" + h_name + \".Either there is no details data available for this particular hospital over internet or Google failed to retrieve data at the moment.Please try again in sometime.\";\r\n                this.setState({\r\n                  openZoneBackDrop: false,\r\n                  viewErrorModal: true,\r\n                });\r\n              }\r\n            }\r\n          }\r\n        );\r\n    }\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({ openModal: false });\r\n    this.modalContent.headerTitle = \"\";\r\n    this.modalContent.body = \"\";\r\n  };\r\n  handleErrorClose = () => {\r\n    this.setState({\r\n      viewErrorModal: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.props.selectedHospitalList !== null ? (\r\n      <CardMedia>\r\n        <div className='hospitalListHoldContainer'>\r\n          <HospitalItem onClick={(h_name, h_zone, c_bed, h_dist) => this.handleHospitalDetailsPre(h_name, h_zone, c_bed, h_dist)} />\r\n        </div>\r\n        <div className='disclaimerHospital'>\r\n          <div>* Data displayed is as per WB Government website</div>\r\n          <div>* Distances shown are tentative and may not be exactly accurate</div>\r\n        </div>\r\n        <HospitalListModal open={this.state.openModal} onClose={this.handleCloseModal} headerTitle={this.modalContent.headerTitle} body={this.modalContent.body} />\r\n        <BackDropCustom open={this.state.openZoneBackDrop} />\r\n        <ErrorModal open={this.state.viewErrorModal} onclose={() => this.handleErrorClose()} body={this.errorBodyMessage} />\r\n      </CardMedia>\r\n    ) : null;\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setRawHospitalData: (rawHospitalData) => dispatch(setRawHospitalData(rawHospitalData)),\r\n  setSelectedlList: (selectedHospitalList) => dispatch(setSelectedHospitalList(selectedHospitalList)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n  completeHospitalData: state.rawHospitalData.rawHospitalData,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HospitalListDisplay);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./../Hospital/Hospital.style.scss\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\r\nimport DomainTwoToneIcon from \"@material-ui/icons/DomainTwoTone\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExposureIcon from \"@material-ui/icons/Exposure\";\r\n\r\nimport HospitalCountDisplay from \"./../Hospital/HospitalCountDisplay.component\";\r\nimport SearchBox from \"./../Hospital/SearchBox/SearchBox.component\";\r\nimport FilterDisplay from \"./FilterDisplay/FilterDisplay.component\";\r\nimport SortDisplay from \"./SortDisplay/SortDisplay.component\";\r\nimport TagsDisplay from \"./../Common/TagsDisplay/TagsDisplay.component\";\r\nimport HostiptalZoneCountDisplay from \"./HostiptalZoneCountDisplay.component\";\r\nimport HospitalListDisplay from \"./HospitalListDisplay/HospitalDisplay.component\";\r\nimport * as geolib from \"geolib\";\r\n\r\nimport { customSort, capitalletter } from \"./../../Utils/Sort.component\";\r\n\r\nimport { setSelectedHospitalList } from \"./../../redux/selectedHospital/selectedHospital.action\";\r\nimport { setSelectedHospitalZoneTags } from \"./../../redux/selectedHospital/selectedHospitalZoneTags.action\";\r\n\r\nclass Hospital extends React.Component {\r\n  loc_selectedHospitalCount = 0;\r\n  pendingChange = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loc_hospitalZoneTags: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n  componentDidUpdate() {\r\n    if (this.props.locationTags !== null && this.props.hospitalDetails !== null && this.props.userCords !== null && this.props.searchText === null) {\r\n      this.prepareSelectedZoneHospitalList();\r\n    } else if (this.props.locationTags !== null && this.props.hospitalDetails !== null && this.props.userCords !== null && this.props.searchText !== null) {\r\n      this.pendingChange = true; //********** IMPLEMENT LATER */\r\n    }\r\n  }\r\n\r\n  prepareSelectedZoneHospitalList = () => {\r\n    let tempHptlList = [];\r\n    let hospitalZoneTags = [];\r\n\r\n    this.props.locationTags.forEach((elem) => {\r\n      if (this.props.hospitalDetails[capitalletter(elem)]) {\r\n        this.props.hospitalDetails[capitalletter(elem)].forEach((el) => {\r\n          if (el[\"h_loc\"][\"lat\"] !== undefined || el[\"h_loc\"][\"lng\"] !== undefined) {\r\n            el[\"h_dist\"] = Number(geolib.getPreciseDistance({ latitude: this.props.userCords[0], longitude: this.props.userCords[1] }, { latitude: el[\"h_loc\"][\"lat\"], longitude: el[\"h_loc\"][\"lng\"] }) / 1000);\r\n          }\r\n          // console.log(el[\"h_dist\"]);\r\n          tempHptlList.push(el);\r\n        });\r\n        hospitalZoneTags.push(capitalletter(elem));\r\n      }\r\n    });\r\n    //By default Show Kolkata zone- if nothing matches\r\n    if (hospitalZoneTags.length === 0) {\r\n      this.props.hospitalDetails[\"Kolkata\"].forEach((elem) => {\r\n        tempHptlList.push(elem);\r\n      });\r\n      hospitalZoneTags.push(\"Kolkata\");\r\n    }\r\n\r\n    this.props.setSelectedlList(customSort(tempHptlList));\r\n    this.props.setSelectedHospitalZoneTags(hospitalZoneTags);\r\n    this.loc_selectedHospitalCount = tempHptlList.length;\r\n    this.pendingChange = false;\r\n  };\r\n\r\n  render() {\r\n    return this.props.locationTags !== null ? (\r\n      <Paper elevation={3} className='transparentBorder' id='containerHospitalList'>\r\n        <div className='hospitalTitleContainer'>\r\n          <div className='hospitalIconholder transparentBorder'>\r\n            <DomainTwoToneIcon fontSize='large' color='primary'></DomainTwoToneIcon>\r\n          </div>\r\n          <div className='hospitalTitleHolderContainer'>\r\n            <div className='hospitalAvatar'>\r\n              <LocalHospitalIcon color='secondary' />\r\n            </div>\r\n            <HospitalCountDisplay />\r\n          </div>\r\n        </div>\r\n        <SearchBox />\r\n        <div className='customButtonGroup'>\r\n          <Paper variant='outlined' square>\r\n            {this.props.searchText === null ? (\r\n              <div className='btnCol'>\r\n                <FilterDisplay />\r\n                <SortDisplay />\r\n              </div>\r\n            ) : null}\r\n            {this.props.searchText === null ? (\r\n              <div>\r\n                <div className='tagHeaderTitle'>\r\n                  <Typography color='textSecondary'>\r\n                    <ExposureIcon fontSize='small' />\r\n                  </Typography>\r\n                  <Typography color='textSecondary'>\r\n                    Selected Areas / Zones (<HostiptalZoneCountDisplay />)\r\n                  </Typography>\r\n                </div>\r\n                <div>\r\n                  <TagsDisplay tagtype='hospitalTag' />\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </Paper>\r\n        </div>\r\n        <HospitalListDisplay />\r\n      </Paper>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSelectedlList: (selectedHospitalList) => dispatch(setSelectedHospitalList(selectedHospitalList)),\r\n  setSelectedHospitalZoneTags: (selectedZoneTags) => dispatch(setSelectedHospitalZoneTags(selectedZoneTags)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  hospitalDetails: state.totalHospitalDetails.totalHospitalDetails,\r\n  locationTags: state.locationTags.locationTags,\r\n  searchText: state.searchText.searchText,\r\n  userCords: state.userCords.userCords,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Hospital);\r\n","import React from \"react\";\r\nimport { Header } from \"./../../Components/Header/Header.component\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"./../AddressDetailModal/LocationOptionInput.style.scss\";\r\n\r\nexport default class LocationOptionInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      locality: \"\",\r\n      district: \"\",\r\n      pin: \"\",\r\n      errorMssg: \"\",\r\n      state: \"West Bengal\",\r\n      country: \"India\",\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({ [nam]: val });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    if (this.state.locality === \"\" || this.state.district === \"\" || this.state.pin === \"\") {\r\n      this.setState({ errorMssg: \"All fields must be filled\" });\r\n    } else {\r\n      this.setState({ errorMssg: \"\" }, () => this.props.onClose(this.state));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        BackdropProps={{\r\n          style: {\r\n            background: \"#495aa0cc\",\r\n          },\r\n        }}\r\n        PaperProps={{\r\n          style: {\r\n            background: \"#495aa0cc\",\r\n          },\r\n        }}\r\n        fullScreen\r\n        open={this.props.open}\r\n        onClose={this.props.handleAlertClose}\r\n        aria-labelledby='Location prompt'\r\n        aria-describedby='Get user Location'\r\n      >\r\n        <Header />\r\n        <Container>\r\n          <div className='shadowCustom locBodyHolder'>\r\n            <Paper elevation={3}>\r\n              <div className='locPromptheader'>Provide Address Details</div>\r\n              <div className='locPromptbody'>\r\n                <div>We can trace your current location based on the address details you provide.</div>\r\n                <div className='textFieldContainer'>\r\n                  <TextField className='w_100' id='standard-multiline-static' name='locality' value={this.state.locality} onChange={(e) => this.handleInputChange(e)} label='Your locality' multiline rows={4} />\r\n                </div>\r\n                <div className='textFieldContainer'>\r\n                  <TextField className='w_100' id='standard-basic' name='district' value={this.state.district} onChange={(e) => this.handleInputChange(e)} label='District' />\r\n                </div>\r\n                <div className='textFieldContainer'>\r\n                  <TextField className='w_100' id='standard-basic' name='pin' value={this.state.pin} onChange={(e) => this.handleInputChange(e)} type='number' label='Pin Code' />\r\n                </div>\r\n                <div className='textFieldContainer'>\r\n                  <TextField\r\n                    className='w_100'\r\n                    id='standard-read-only-input'\r\n                    label='State'\r\n                    defaultValue='West Bengal'\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='textFieldContainer'>* Currently we are only supporting this application within West Bengal</div>\r\n                <div className='errorContainer'>{this.state.errorMssg}</div>\r\n                <div className='textFieldContainer'>\r\n                  <Button variant='contained' color='primary' onClick={() => this.handleSubmit()}>\r\n                    Submit Location Details\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Paper>\r\n          </div>\r\n        </Container>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction='left' />;\r\n}\r\n\r\nconst SideAlert = (props) => {\r\n  const [state] = React.useState({\r\n    vertical: \"top\",\r\n    horizontal: \"left\",\r\n  });\r\n  const { vertical, horizontal } = state;\r\n\r\n  return props.c_data !== null ? (\r\n    <Snackbar autoHideDuration={4000} TransitionComponent={TransitionLeft} anchorOrigin={{ vertical, horizontal }} open={props.open} onClose={props.handleAlertClose} key={vertical + horizontal}>\r\n      <SnackbarContent\r\n        style={{\r\n          backgroundColor: \"#000000eb\",\r\n          padding: \"0px 0 0 20px\",\r\n          borderRadius: \"15px\",\r\n          color: \"#c4fff4\",\r\n          border: \"3px solid #284065ba\",\r\n        }}\r\n        message={<span id='client-snackbar'>Updating your current location ..</span>}\r\n      />\r\n    </Snackbar>\r\n  ) : null;\r\n};\r\n\r\nexport default SideAlert;\r\n","import React from \"react\";\r\nimport \"./../PermissionDeniedModal/DisplayLocationModal.style.scss\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nimport ReportProblemIcon from \"@material-ui/icons/ReportProblem\";\r\nimport PermDeviceInformationIcon from \"@material-ui/icons/PermDeviceInformation\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='up' ref={ref} {...props} />;\r\n});\r\nexport default function DisplayLocationModal(props) {\r\n  return (\r\n    <div id='welcomeDialogue'>\r\n      <Dialog fullScreen open={props.open} TransitionComponent={Transition} onClose={props.handleAlertClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\r\n        <div className='LocationblockedContainer'>\r\n          <Container maxWidth='xs'>\r\n            <div className='LocationBlockBody'>\r\n              <div className='displayFlex justifyCenter'>\r\n                <div className='IconContainer'>\r\n                  <ReportProblemIcon fontSize='large' />\r\n                  <PermDeviceInformationIcon fontSize='large' />\r\n                </div>\r\n                <h2>OOPS !</h2>\r\n              </div>\r\n              <div className='displayFlex justifyCenter'>It appears you have denied permission for accessing your device location or somehow COVID19HospitalTracker has been added to denied-Permission list in your browser.</div>\r\n              <br />\r\n              <div>To change this, you can enable permission from your \"Settings - Location Access\"</div>\r\n              <br />\r\n              <div>Alternatively, if you do not wish to disclose your device location, you can type in your desired location address,and proceed along.</div>\r\n              <div>\r\n                <Button variant='contained' color='primary' onClick={() => props.onClose()}>\r\n                  Okay, I Understand\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { BackDropDefault } from \"./Utils/BackDropDefault/BackDropOrg.component\";\n\nimport { connect } from \"react-redux\";\n\nimport { Header } from \"./Components/Header/Header.component\";\nimport { Footer } from \"./Components/Footer/Footer.component\";\nimport Location from \"./Components/Location/Location.component\";\nimport Hospital from \"./Components/Hospital/Hospital.component\";\n\nimport { CommunicatorFetch } from \"./Utils/Communicator/Communicator.component\";\nimport ApiUrls from \"./Utils/ApiUrls.data\";\n\nimport { ErrorModal } from \"./Modals/ErrorModal/ErrorModal.component\";\n\nimport LocationOptionInput from \"./Modals/AddressDetailModal/LocationOptionInput.component\";\n\nimport { setTotalHospitalDetails } from \"./redux/totalHospitalDetails/totalHospital.action\";\nimport { setAddressComponents } from \"./redux/userAddress/addressComponents.action\";\nimport { setFormattedAddress } from \"./redux/userAddress/formattedAddress.action\";\nimport { setUserCords } from \"./redux/userAddress/userCords.action\";\nimport { setRawHospitalData } from \"./redux/totalHospitalDetails/rawHospitalData.action\";\nimport { setLocationModal } from \"./redux/locationInput/locationInput.action\";\nimport { setCordChangeFlag } from \"./redux/userAddress/cordChangeFlag.action\";\n\nimport { dummyLoc } from \"./assets/dummyLoc\";\n\nimport { getHospitalProfileAll } from \"./firebase/firebase.util\";\n\nimport SideAlert from \"./Utils/SideAlert/SideALert.component\";\nimport DisplayLocationModal from \"./Modals/PermissionDeniedModal/DisplayLocationModal.component\";\n\nconst env = \"prod\"; // prod -  dev\n\nclass App extends React.Component {\n  loc_PermissionAccess = true;\n  geoLocationMove = null;\n  locChangeAlertCount = 0;\n  proxyNeedFlag = false;\n  googleFetchTryCount = 0;\n\n  errorBodyMessage = \"\";\n  hospitalList = [];\n\n  temp_alert_data = null;\n  loc_locationCoordinates_lat = null;\n  loc_locationCoordinates_long = null;\n  loc_cordChangeFlag = null;\n  constructor() {\n    super();\n    this.state = {\n      openWelcomeAlert: false,\n      viewErrorModal: false,\n      openBackDrop: false,\n      snackBar: false,\n      alertBar: false,\n      snackBarMessage: \"\",\n      openPermissionDeniedAlert: false,\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"App mounted\");\n    this.setState(\n      {\n        openWelcomeAlert: true,\n      },\n      () => this.prepareHospitalData()\n    );\n  }\n\n  componentWillUnmount() {\n    navigator.geolocation.clearWatch(this.geoLocationMove);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.showLocation !== this.props.showLocation) {\n      this.handleCloseWelcomeAlert();\n    }\n    if (this.loc_cordChangeFlag !== this.props.userCordChangeFlag) {\n      console.log(\"inside app update\");\n      this.loc_cordChangeFlag = !this.props.userCordChangeFlag;\n      this.getLocationWhenCordsChangedByUser();\n      this.props.setuserCordsFlag(this.loc_cordChangeFlag);\n    }\n    console.log(\"prevProps\" + prevProps);\n    console.log(\"CurrentProps\" + this.props);\n    if (prevProps.commuteFlag !== this.props.commuteFlag) {\n      ++this.locChangeAlertCount;\n      //console.log(\"locChangeAlertCount====================================\" + this.locChangeAlertCount);\n      if (this.props.commuteFlag !== undefined && !this.props.commuteFlag && this.geoLocationMove !== null) {\n        navigator.geolocation.clearWatch(this.geoLocationMove);\n      }\n      this.getLocationTrack();\n    }\n  }\n\n  prepareHospitalData = () => {\n    CommunicatorFetch(ApiUrls.getHospitalCodes)\n      .then((data) => {\n        let tempArr = data.filter((elem) => Object.keys(elem).length >= 4).filter((el) => el[\"vacant\"] !== 0 && typeof el[\"vacant\"] !== \"string\");\n        this.hospitalList = Object.assign([], tempArr);\n      })\n      .then(() => getHospitalProfileAll())\n      .then(\n        (data) => {\n          console.log(\"App firebase===========================================================================\" + data);\n          if (data === undefined || data === \"\" || Array.isArray(data) || typeof data !== \"object\") {\n            CommunicatorFetch(ApiUrls.getHospitalDetails).then((data) => {\n              this.arrangeHospitalKeyMap(data);\n            });\n          } else {\n            this.arrangeHospitalKeyMap(data);\n          }\n        },\n        (error) => {\n          CommunicatorFetch(ApiUrls.getHospitalDetails).then((data) => {\n            this.arrangeHospitalKeyMap(data);\n          });\n        }\n      );\n  };\n\n  arrangeHospitalKeyMap(data) {\n    let hospitalDetailsData = data;\n    let tempMap = {};\n    for (let i = 0, j = this.hospitalList.length - 1; i <= this.hospitalList.length / 2, j >= this.hospitalList.length / 2; i++, j--) {\n      if (tempMap[this.hospitalList[i][\"district\"]]) {\n        if (tempMap[this.hospitalList[i][\"district\"]].find((el) => el[\"name\"] === this.hospitalList[i][\"name\"]) === undefined) {\n          tempMap[this.hospitalList[i][\"district\"]].push({\n            h_name: this.hospitalList[i][\"name\"],\n            c_bed: this.hospitalList[i][\"vacant\"],\n            h_zone: this.hospitalList[i][\"district\"],\n            h_loc: hospitalDetailsData[this.hospitalList[i][\"name\"]] ? (hospitalDetailsData[this.hospitalList[i][\"name\"]][\"geometry\"] ? hospitalDetailsData[this.hospitalList[i][\"name\"]][\"geometry\"][\"location\"] : \"\") : \"\",\n            h_dist: \"\",\n          });\n        }\n      } else {\n        tempMap[this.hospitalList[i][\"district\"]] = [\n          {\n            h_name: this.hospitalList[i][\"name\"],\n            c_bed: this.hospitalList[i][\"vacant\"],\n            h_zone: this.hospitalList[i][\"district\"],\n            h_loc: hospitalDetailsData[this.hospitalList[i][\"name\"]] ? (hospitalDetailsData[this.hospitalList[i][\"name\"]][\"geometry\"] ? hospitalDetailsData[this.hospitalList[i][\"name\"]][\"geometry\"][\"location\"] : \"\") : \"\",\n            h_dist: \"\",\n          },\n        ];\n      }\n\n      if (tempMap[this.hospitalList[j][\"district\"]]) {\n        if (tempMap[this.hospitalList[j][\"district\"]].find((el) => el[\"name\"] === this.hospitalList[j][\"name\"]) === undefined) {\n          tempMap[this.hospitalList[j][\"district\"]].push({\n            h_name: this.hospitalList[j][\"name\"],\n            c_bed: this.hospitalList[j][\"vacant\"],\n            h_zone: this.hospitalList[j][\"district\"],\n            h_loc: hospitalDetailsData[this.hospitalList[j][\"name\"]] ? (hospitalDetailsData[this.hospitalList[j][\"name\"]][\"geometry\"] ? hospitalDetailsData[this.hospitalList[j][\"name\"]][\"geometry\"][\"location\"] : \"\") : \"\",\n            h_dist: \"\",\n          });\n        }\n      } else {\n        tempMap[this.hospitalList[j][\"district\"]] = [\n          {\n            h_name: this.hospitalList[j][\"name\"],\n            c_bed: this.hospitalList[j][\"vacant\"],\n            h_zone: this.hospitalList[j][\"district\"],\n            h_loc: hospitalDetailsData[this.hospitalList[j][\"name\"]] ? (hospitalDetailsData[this.hospitalList[j][\"name\"]][\"geometry\"] ? hospitalDetailsData[this.hospitalList[j][\"name\"]][\"geometry\"][\"location\"] : \"\") : \"\",\n            h_dist: \"\",\n          },\n        ];\n      }\n    }\n    //Fix for 24-parganas\n    tempMap[\"North 24 Parganas\"] = Object.assign([], tempMap[\"N-24 Pgs\"].concat(tempMap[\"North 24 Pgs\"]));\n    delete tempMap[\"N-24 Pgs\"];\n    delete tempMap[\"North 24 Pgs\"];\n    tempMap[\"North 24 Parganas\"].forEach((elm) => (elm[\"h_zone\"] = \"North 24 Parganas\"));\n\n    this.props.setTotalHospitalDetails(tempMap);\n    this.props.setRawHospitalData(data);\n  }\n\n  getLocationWhenCordsChangedByUser = () => {\n    this.setState(\n      {\n        openBackDrop: true,\n      },\n      () => this.getFormattedAddress(this.props.userCords[0], this.props.userCords[1])\n    );\n  };\n\n  getLocationTrack = () => {\n    if (navigator.geolocation) {\n      if (this.props.commuteFlag) {\n        /* if (this.geoLocationStatic !== null) {\n          navigator.geolocation.clearWatch(this.geoLocationStatic);\n        } */\n\n        this.geoLocationMove = navigator.geolocation.watchPosition(\n          //watchPosition(  // need to implement getPosition logic with timeout for movement\n          (pos) => {\n            // if (this.loc_locationCoordinates_lat !== pos.coords.latitude && this.loc_locationCoordinates_long !== pos.coords.longitude) {\n\n            if (Number.parseFloat(this.loc_locationCoordinates_lat).toFixed(3) !== Number.parseFloat(pos.coords.latitude).toFixed(3) || Number.parseFloat(this.loc_locationCoordinates_long).toFixed(3) !== Number.parseFloat(pos.coords.longitude).toFixed(3)) {\n              this.temp_alert_data = null;\n              this.temp_alert_data = [pos.coords.latitude, pos.coords.longitude];\n              this.setState({\n                alertBar: true,\n              });\n              console.log(pos.coords.latitude);\n              console.log(pos.coords.longitude);\n              this.getFormattedAddress(pos.coords.latitude, pos.coords.longitude);\n            } else {\n              this.setState({\n                openBackDrop: false,\n              });\n            }\n          },\n          (error) => {\n            //ifgeolocation failed\n            if (error.message === \"Timeout expired\") {\n              this.handleBackDropClose();\n              this.errorBodyMessage = \"Geo location timed out\";\n              this.setState(\n                {\n                  viewErrorModal: true,\n                },\n                () => this.getLocationTrack()\n              );\n\n              //temporary for DEV\n              //this.getFormattedAddress(22.5815353, 88.466984);\n            } else {\n              //show pop up if denied\n              this.handleBackDropClose();\n              this.loc_PermissionAccess = false;\n              this.setState({\n                openPermissionDeniedAlert: true,\n              });\n\n              //this.props.setLocationModal(true);\n            }\n          },\n          {\n            timeout: Infinity,\n            maximumAge: 10000,\n            enableHighAccuracy: true,\n          }\n        );\n      } else {\n        /* if (this.geoLocationMove !== null) {\n          navigator.geolocation.clearWatch(this.geoLocationMove);\n        } */\n        navigator.geolocation.getCurrentPosition(\n          //watchPosition(  // need to implement getPosition logic with timeout for movement\n          (pos) => {\n            if (this.loc_locationCoordinates_lat !== pos.coords.latitude && this.loc_locationCoordinates_long !== pos.coords.longitude) {\n              if (this.locChangeAlertCount > 1) {\n                this.setState({\n                  alertBar: true,\n                });\n              }\n\n              console.log(pos.coords.latitude);\n              console.log(pos.coords.longitude);\n              this.getFormattedAddress(pos.coords.latitude, pos.coords.longitude);\n            } else {\n              this.setState({\n                openBackDrop: false,\n              });\n            }\n          },\n          (error) => {\n            //ifgeolocation failed\n            if (error.message === \"Timeout expired\") {\n              this.handleBackDropClose();\n              this.errorBodyMessage = \"Geo location timed out\";\n              this.setState(\n                {\n                  viewErrorModal: true,\n                },\n                () => this.getLocationTrack()\n              );\n\n              //temporary for DEV\n              //this.getFormattedAddress(22.5815353, 88.466984);\n            } else {\n              //show pop up if denied\n              this.handleBackDropClose();\n              this.loc_PermissionAccess = false;\n              this.setState({\n                openPermissionDeniedAlert: true,\n              });\n\n              //this.props.setLocationModal(true);\n            }\n          }\n        );\n      }\n    }\n  };\n\n  getFormattedAddress = (lat, long) => {\n    this.loc_locationCoordinates_lat = lat; //for local check\n    this.loc_locationCoordinates_long = long; //for local check\n    CommunicatorFetch(ApiUrls.getUserCurrentLocation, lat + \",\" + long).then(\n      (data) => {\n        if (data.results.length !== 0) {\n          this.props.setFormattedAddress(data.results[0].formatted_address);\n          this.props.setUserCords([data.results[0].geometry.location.lat, data.results[0].geometry.location.lng]);\n          this.props.setAddressComponents(data.results[0].address_components);\n\n          this.setState({\n            openBackDrop: false,\n          });\n        } else {\n          // Google denied Map, hence need to show proper error messages\n          if (env === \"prod\") {\n            this.errorBodyMessage = \"Well, it seems Google MAP API is denied at the moment. This is something unusual. Please refresh the page or try again in sometime.\";\n            this.setState(\n              {\n                openBackDrop: false,\n                viewErrorModal: true,\n              },\n              () => this.props.setUserCords([lat, long])\n            );\n          }\n          //current implementation for DEV purposes start\n          else if (env === \"dev\") {\n            let data = dummyLoc;\n            this.props.setFormattedAddress(data.results[0].formatted_address);\n\n            this.props.setAddressComponents(data.results[0].address_components);\n            this.props.setUserCords([data.results[0].geometry.location.lat, data.results[0].geometry.location.lng]);\n            this.setState({\n              openBackDrop: false,\n            });\n          }\n\n          //current implementation for DEV purposes end\n        }\n      },\n      (error) => {\n        // Google Web api failed, hence need to show proper error messages\n        if (env === \"prod\") {\n          this.errorBodyMessage = \"Well, it seems Google MAP API failed at the moment. This is something unusual. Please refresh the page or try again in sometime.\";\n          this.setState(\n            {\n              openBackDrop: false,\n              viewErrorModal: true,\n            }\n            //() => this.getFormattedAddress(lat, long)\n          );\n        }\n        //current implementation for DEV purposesstart\n        else if (env === \"dev\") {\n          let data = dummyLoc;\n          this.props.setFormattedAddress(data.results[0].formatted_address);\n          this.props.setUserCords([data.results[0].geometry.location.lat, data.results[0].geometry.location.lng]);\n          this.props.setAddressComponents(data.results[0].address_components);\n\n          this.setState({\n            openBackDrop: false,\n          });\n        }\n\n        //current implementation for DEV purposes end\n      }\n    );\n  };\n\n  TransitionDown = (props) => {\n    return <Slide {...props} direction='down' />;\n  };\n\n  searchGoogleForUserDetails = (el) => {\n    let searchText = \"\" + el.locality + \",\" + el.district + \",\" + el.pin + \",West Bengal,India\";\n    let params = searchText + \"&inputtype=textquery&fields=formatted_address,geometry\";\n    let googleFetchCall;\n    if (this.proxyNeedFlag) {\n      googleFetchCall = CommunicatorFetch(ApiUrls.getPlaceDetails, params, \"proxyNeeded\");\n    } else {\n      googleFetchCall = CommunicatorFetch(ApiUrls.getPlaceDetails, params);\n    }\n\n    googleFetchCall.then(\n      (data) => {\n        if (data[\"candidates\"].length !== 0) {\n          this.props.setUserCords([data[\"candidates\"][0].geometry.location.lat, data[\"candidates\"][0].geometry.location.lng]);\n          if (this.props.commuteFlag) {\n            this.props.setuserCordsFlag(true);\n          }\n\n          //make custom address componnets\n          let address_components = [];\n          let tempAddr = data[\"candidates\"][0][\"formatted_address\"].split(\",\");\n          tempAddr.pop();\n\n          tempAddr = tempAddr.forEach((elem) => {\n            address_components.push({\n              long_name: elem.trim(),\n              short_name: elem.trim(),\n              types: [\"political\", \"sublocality\", \"sublocality_level_1\"],\n            });\n          });\n\n          this.props.setFormattedAddress(data[\"candidates\"][0][\"formatted_address\"]);\n          this.props.setAddressComponents(address_components);\n\n          this.setState({\n            openBackDrop: false,\n          });\n        } else {\n          //show pop up for google denial\n          ++this.googleFetchTryCount;\n          if (this.googleFetchTryCount === 1) {\n            this.proxyNeedFlag = true;\n            this.searchGoogleForUserDetails(el);\n          }\n\n          if (this.googleFetchTryCount > 1) {\n            this.googleFetchTryCount = 0;\n            this.proxyNeedFlag = false;\n\n            //custom create address_format\n\n            let address_components = [];\n            let tempAddr = el.locality.split(\" \");\n            tempAddr.push(el.district);\n            tempAddr = tempAddr.forEach((elem) => {\n              address_components.push({\n                long_name: elem.trim(),\n                short_name: elem.trim(),\n                types: [\"political\", \"sublocality\", \"sublocality_level_1\"],\n              });\n            });\n            let tmmpAddr = el.locality + \",\" + el.district + \", pin -\" + el.pin;\n\n            this.props.setUserCords([22.5726, 88.3639]);\n            if (this.props.commuteFlag) {\n              this.props.setuserCordsFlag(true);\n            }\n            this.props.setFormattedAddress(tmmpAddr);\n            this.props.setAddressComponents(address_components);\n\n            this.setState({\n              openBackDrop: false,\n              snackBar: true,\n              snackBarMessage: \"The location obtained seems a non-valid address or a place outside West Bengal.Since currently we are only supporting within West Bengal, hence your default area is set as Kolkata.\",\n            });\n          }\n        }\n      },\n      (error) => {\n        //show pop up for google denial\n        ++this.googleFetchTryCount;\n        if (this.googleFetchTryCount === 1) {\n          this.proxyNeedFlag = true;\n          this.searchGoogleForUserDetails(el);\n        }\n        if (this.googleFetchTryCount > 1) {\n          this.googleFetchTryCount = 0;\n          this.proxyNeedFlag = false;\n\n          //custom create address_format\n          let address_components = [];\n          let tempAddr = el.locality.split(\" \");\n          tempAddr.push(el.district);\n          tempAddr = tempAddr.forEach((elem) => {\n            address_components.push({\n              long_name: elem.trim(),\n              short_name: elem.trim(),\n              types: [\"political\", \"sublocality\", \"sublocality_level_1\"],\n            });\n          });\n\n          let tmmpAddr = el.locality + \",\" + el.district + \", pin -\" + el.pin;\n\n          this.props.setUserCords([22.5726, 88.3639]);\n          if (this.props.commuteFlag) {\n            this.props.setuserCordsFlag(true);\n          }\n          this.props.setFormattedAddress(tmmpAddr);\n          this.props.setAddressComponents(address_components);\n\n          this.setState({\n            openBackDrop: false,\n            snackBar: true,\n            snackBarMessage: \"The location obtained seems a non-valid address or a place outside West Bengal.Since currently we are supporting only within West Bengal, hence your default area is set as Kolkata.\",\n          });\n        }\n      }\n    );\n  };\n\n  handleErrorClose = () => {\n    this.setState(\n      {\n        viewErrorModal: false,\n      },\n      () => window.location.reload()\n    );\n  };\n  handleCloseWelcomeAlert = (el) => {\n    this.setState(\n      {\n        openWelcomeAlert: false,\n        openBackDrop: true,\n      },\n\n      () => this.getLocationTrack()\n    );\n  };\n\n  handleBackDropClose = () => {\n    this.setState({\n      openBackDrop: false,\n    });\n  };\n  handleCloseLocationOptionAlert = (el) => {\n    this.props.setLocationModal(false);\n    this.setState(\n      {\n        openBackDrop: true,\n      },\n      () => this.searchGoogleForUserDetails(el)\n    );\n  };\n\n  handleCloseSnackBar = () => {\n    this.setState({\n      snackBar: false,\n    });\n  };\n  handleAlertClose = () => {\n    this.setState({\n      alertBar: false,\n    });\n  };\n\n  handleCloseDeniedPermissionAlert = () => {\n    this.setState(\n      {\n        openPermissionDeniedAlert: false,\n      },\n      () => this.props.setLocationModal(true)\n    );\n  };\n  render() {\n    console.log(\"App Component rendered\");\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Header />\n        <Container maxWidth='md' className='containerApp'>\n          <Location accessPermission={this.loc_PermissionAccess} />\n          <Hospital />\n          <BackDropDefault open={this.state.openBackDrop} />\n          <Snackbar\n            open={this.state.snackBar}\n            autoHideDuration={10000}\n            TransitionComponent={this.TransitionDown}\n            message={this.state.snackBarMessage}\n            action={\n              <React.Fragment>\n                <IconButton size='small' aria-label='close' color='inherit' onClick={() => this.handleCloseSnackBar()}>\n                  <CloseIcon fontSize='small' />\n                </IconButton>\n              </React.Fragment>\n            }\n          />\n          <SideAlert c_data={this.temp_alert_data} open={this.state.alertBar} handleAlertClose={() => this.handleAlertClose()} />\n        </Container>\n\n        {!this.state.openBackDrop ? <Footer /> : null}\n        <DisplayLocationModal open={this.state.openPermissionDeniedAlert} onClose={(el) => this.handleCloseDeniedPermissionAlert(el)} />\n        {/*  <WelcomeModal open={this.state.openWelcomeAlert} onClose={(el) => this.handleCloseWelcomeAlert(el)} /> */}\n        <LocationOptionInput open={this.props.locationModal} onClose={(el) => this.handleCloseLocationOptionAlert(el)} />\n        <ErrorModal open={this.state.viewErrorModal} onclose={() => this.handleErrorClose()} body={this.errorBodyMessage} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locationModal: state.locationModal.locationModalOpen,\n  userCords: state.userCords.userCords,\n  userCordChangeFlag: state.userCordChangeFlag.cordChangeFlag,\n  commuteFlag: state.commmuteFlag.commuteFlag,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setTotalHospitalDetails: (hospitalDetails) => dispatch(setTotalHospitalDetails(hospitalDetails)),\n  setAddressComponents: (addressComponents) => dispatch(setAddressComponents(addressComponents)),\n  setFormattedAddress: (formattedAddress) => dispatch(setFormattedAddress(formattedAddress)),\n  setUserCords: (userCords) => dispatch(setUserCords(userCords)),\n  setRawHospitalData: (rawHospitalData) => dispatch(setRawHospitalData(rawHospitalData)),\n  setLocationModal: (locationModal) => dispatch(setLocationModal(locationModal)),\n  setuserCordsFlag: (flag) => dispatch(setCordChangeFlag(flag)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const setTotalHospitalDetails = (totalHospitalDetails) => ({\r\n  type: \"SET_TOTAL_HOSPITAL_DETAIL\",\r\n  payload: totalHospitalDetails,\r\n});\r\n","export const setAddressComponents = (addressComponents) => ({\r\n  type: \"SET_ADDRESS_COMPONENTS\",\r\n  payload: addressComponents,\r\n});\r\n","export const setFormattedAddress = (formatedAddress) => ({\r\n  type: \"SET_FORMATTED_ADDRESS\",\r\n  payload: formatedAddress,\r\n});\r\n","import React from \"react\";\r\nimport WelcomeModal from \"./Modals/WelcomeModal/WelcomeModal.component\";\r\nimport App from \"./App\";\r\n\r\nclass Bootbase extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      openWelcomeAlert: false,\r\n      enableAppModule: false,\r\n      showLocation: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      enableAppModule: true,\r\n      openWelcomeAlert: true,\r\n    });\r\n  }\r\n\r\n  handleCloseWelcomeAlert = (el) => {\r\n    this.setState({\r\n      showLocation: true,\r\n      openWelcomeAlert: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.enableAppModule ? <App showLocation={this.state.showLocation} /> : null}\r\n        <WelcomeModal open={this.state.openWelcomeAlert} onClose={(el) => this.handleCloseWelcomeAlert(el)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Bootbase;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\"This web app is being served cache-first by a service \" + \"worker. To learn more, visit https://bit.ly/CRA-PWA\");\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\"New content is available and will be used when all \" + \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\");\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType !== null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const INITIAL_STATE = {\r\n  selectedHospital: null,\r\n};\r\n\r\nconst selectedHospitalReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SELECTED_HOSPITAL_LIST\": {\r\n      return {\r\n        ...state,\r\n        selectedHospital: Object.assign([], action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default selectedHospitalReducer;\r\n","const INITIAL_STATE = {\r\n  totalHospitalDetails: null,\r\n};\r\n\r\nconst totalHospitalDetailReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_TOTAL_HOSPITAL_DETAIL\": {\r\n      return {\r\n        ...state,\r\n        totalHospitalDetails: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default totalHospitalDetailReducer;\r\n","const INITIAL_STATE = {\r\n  addressComponents: null,\r\n};\r\n\r\nconst addressComponentsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_ADDRESS_COMPONENTS\": {\r\n      return {\r\n        ...state,\r\n        addressComponents: Object.assign([], action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default addressComponentsReducer;\r\n","const INITIAL_STATE = {\r\n  formattedAddress: null,\r\n};\r\n\r\nconst formattedAddressReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_FORMATTED_ADDRESS\": {\r\n      return {\r\n        ...state,\r\n        formattedAddress: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default formattedAddressReducer;\r\n","const INITIAL_STATE = {\r\n  locationTags: null,\r\n};\r\n\r\nconst locationTagsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_LOCATION_TAGS\": {\r\n      return {\r\n        ...state,\r\n        locationTags: Object.assign([], action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default locationTagsReducer;\r\n","const INITIAL_STATE = {\r\n  userCords: null,\r\n};\r\n\r\nconst userCordsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER_CORDS\": {\r\n      return {\r\n        ...state,\r\n        userCords: Object.assign([], action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userCordsReducer;\r\n","const INITIAL_STATE = {\r\n  selectedHospitalZoneTags: null,\r\n};\r\n\r\nconst selectedHospitalZoneTagsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SELECTED_HOSPITAL_ZONE_TAGS\": {\r\n      return {\r\n        ...state,\r\n        selectedHospitalZoneTags: Object.assign([], action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default selectedHospitalZoneTagsReducer;\r\n","const INITIAL_STATE = {\r\n  rawHospitalData: null,\r\n};\r\n\r\nconst rawHospitalDataReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_RAW_HOSPITAL_DATA\": {\r\n      return {\r\n        ...state,\r\n        rawHospitalData: Object.assign({}, action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rawHospitalDataReducer;\r\n","const INITIAL_STATE = {\r\n  searchText: null,\r\n};\r\n\r\nconst searchReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SEARCH_TEXT\": {\r\n      return {\r\n        ...state,\r\n        searchText: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","const INITIAL_STATE = {\r\n  locationModalOpen: false,\r\n};\r\n\r\nconst locationInputReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_LOCATION_MODAL\": {\r\n      return {\r\n        ...state,\r\n        locationModalOpen: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default locationInputReducer;\r\n","const INITIAL_STATE = {\r\n  cordChangeFlag: null,\r\n};\r\n\r\nconst cordChangeFlagReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_CORD_CHANGE\": {\r\n      return {\r\n        ...state,\r\n        cordChangeFlag: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cordChangeFlagReducer;\r\n","const INITIAL_STATE = {\r\n  commuteFlag: false,\r\n};\r\n\r\nconst commuteFlagReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_COMMUTE_FLAG\": {\r\n      return {\r\n        ...state,\r\n        commuteFlag: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default commuteFlagReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport selectedHospitalReducer from \"./selectedHospital/selectedHospital.reducer\";\r\nimport totalHospitalDetailReducer from \"./totalHospitalDetails/totalHospital.reducer\";\r\nimport addressComponentsReducer from \"./userAddress/addressComponents.reducer\";\r\nimport formattedAddressReducer from \"./userAddress/formattedAddress.reducer\";\r\nimport locationTagsReducer from \"./userAddress/locationTags.reducer\";\r\nimport userCordsReducer from \"./userAddress/userCords.reducer\";\r\nimport selectedHospitalZoneTagsReducer from \"./selectedHospital/selectedHospitalZoneTags.reducer\";\r\nimport rawHospitalDataReducer from \"./totalHospitalDetails/rawHospitalData.reducer\";\r\nimport searchReducer from \"./search/search.reducer\";\r\nimport locationInputReducer from \"./locationInput/locationInput.reducer\";\r\nimport cordChangeFlagReducer from \"./userAddress/cordChangeFlag.reducer\";\r\nimport commuteFlagReducer from \"./userAddress/commuteFlag.reducer\";\r\n\r\nexport default combineReducers({\r\n  selectedHospitalList: selectedHospitalReducer,\r\n  totalHospitalDetails: totalHospitalDetailReducer,\r\n  addressComponents: addressComponentsReducer,\r\n  formattedAddress: formattedAddressReducer,\r\n  locationTags: locationTagsReducer,\r\n  userCords: userCordsReducer,\r\n  selectedHospitalZoneTags: selectedHospitalZoneTagsReducer,\r\n  rawHospitalData: rawHospitalDataReducer,\r\n  searchText: searchReducer,\r\n  locationModal: locationInputReducer,\r\n  userCordChangeFlag: cordChangeFlagReducer,\r\n  commmuteFlag: commuteFlagReducer,\r\n});\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\n\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n//import App from \"./App\";\nimport Bootbase from \"./BootBase\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <App /> */}\n      <Bootbase />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}