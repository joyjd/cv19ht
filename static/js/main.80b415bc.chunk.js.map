{"version":3,"sources":["Modals/WelcomeModal/WelcomeModal.component.jsx","Utils/BackDropDefault/BackDropOrg.component.jsx","Components/ContactMe/ContactMe.component.jsx","Components/Header/Header.component.jsx","Components/Footer/Footer.component.jsx","Utils/Switch/CustomSwitch.component.jsx","Components/Location/AddressDisplay/AddressDisplay.component.jsx","redux/userAddress/commuteFlag.action.js","Utils/GoogleCredentials.js","redux/userAddress/userCords.action.js","redux/userAddress/cordChangeFlag.action.js","Components/Common/MapsDisplay/google-maps.component.jsx","Components/Common/MapsDisplay/MapsDisplay.component.jsx","Components/Common/TagsDisplay/TagsDisplay.component.jsx","redux/locationInput/locationInput.action.js","Components/Ambulance/DisplayAmbulance/DisplayAmbulanceModal.component.jsx","Utils/Communicator/Communicator.component.js","Utils/ApiUrls.data.js","Components/Ambulance/DisplayCoronaDetails/DisplayCoronaModal.component.jsx","Components/Ambulance/Ambulance.component.jsx","Components/Location/SelectedHospitalSnapShot/SelectedHospitalSnapShot.component.jsx","Components/Location/Location.component.jsx","redux/userAddress/locationTags.action.js","Components/Hospital/HospitalCountDisplay.component.jsx","redux/selectedHospital/selectedHospital.action.js","redux/search/search.action.js","Utils/Sort.component.js","Components/Hospital/SearchBox/SearchBox.component.jsx","redux/selectedHospital/selectedHospitalZoneTags.action.js","Components/Hospital/FilterDisplay/FilterModal/FilterAreaTags.component.jsx","Components/Hospital/FilterDisplay/FilterDisplay.component.jsx","Components/Hospital/SortDisplay/SortModal/SortModal.component.jsx","Components/Hospital/SortDisplay/SortDisplay.component.jsx","Components/Hospital/HostiptalZoneCountDisplay.component.jsx","Components/Hospital/HospitalListDisplay/HospitalItem/HospitalItem.component.jsx","Modals/HospitalDetailsModal/RoadDirectionHospital/gmapIframe.component.jsx","Modals/HospitalDetailsModal/HospitalModalDetailTemplate.component.jsx","Components/Hospital/HospitalListDisplay/HospitalListModal/HospitalListModal.component.js","Utils/BackDropCustom/BackDropCustom.component.jsx","firebase/firebase.util.js","Modals/ErrorModal/ErrorModal.component.jsx","redux/totalHospitalDetails/rawHospitalData.action.js","Components/Hospital/HospitalListDisplay/HospitalDisplay.component.jsx","Components/Hospital/Hospital.component.jsx","Modals/AddressDetailModal/LocationOptionInput.component.jsx","Utils/SideAlert/SideALert.component.jsx","App.js","redux/totalHospitalDetails/totalHospital.action.js","redux/userAddress/addressComponents.action.js","redux/userAddress/formattedAddress.action.js","BootBase.js","serviceWorker.js","redux/selectedHospital/selectedHospital.reducer.js","redux/totalHospitalDetails/totalHospital.reducer.js","redux/userAddress/addressComponents.reducer.js","redux/userAddress/formattedAddress.reducer.js","redux/userAddress/locationTags.reducer.js","redux/userAddress/userCords.reducer.js","redux/selectedHospital/selectedHospitalZoneTags.reducer.js","redux/totalHospitalDetails/rawHospitalData.reducer.js","redux/search/search.reducer.js","redux/locationInput/locationInput.reducer.js","redux/userAddress/cordChangeFlag.reducer.js","redux/userAddress/commuteFlag.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["WelcomeModal","props","id","Dialog","fullWidth","open","style","backgroundColor","color","PaperProps","borderRadius","top","onClose","handleAlertClose","aria-labelledby","aria-describedby","DialogContent","paddingLeft","paddingRight","className","DialogActions","Button","onClick","variant","BackDropDefault","Backdrop","zIndex","opacity","CircularProgress","LinearProgress","ContactMe","handleSubmit","event","state","name","feedback","setState","errorMessage","sendFeedback","message_html","from_name","reply_to","email","closeModal","snkBar","handleChange","bind","type","this","target","value","templateId","variables","window","emailjs","send","then","res","catch","err","fullScreen","onclose","Container","maxWidth","padding","fontSize","onChange","e","placeholder","required","rows","cols","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","React","Component","Header","openContactMe","contactMe","closeContactMe","AppBar","position","display","justifyContent","Typography","gutterBottom","IconButton","aria-label","Footer","BottomNavigation","showLabels","CustomSwitch","Switch","checked","checkedState","handleChangeSwitch","inputProps","connect","formattedAddress","dispatch","setCommuteFlag","commuteFlag","payload","useState","GoogleCredentials","apiKey","setUserCords","userCords","setCordChangeFlag","cordChangeFlag","containerStyle","width","height","GoogleMaps","onMarkerDragEnd","coord","draggable","latLng","lat","lng","setuserCordsFlag","key","Date","getTime","google","zoom","initialCenter","currentLat","currentLong","title","onDragend","t","map","flag","GoogleApiWrapper","Paper","locationTags","selectedHospitalZoneTags","tagtype","elem","index","setLocationModal","locationModal","Iframe","dangerouslySetInnerHTML","__html","iframe","pin","addressComponents","Divider","length","CommunicatorFetch","urlName","params","proxyNeed","url","console","log","undefined","fetch","response","json","ApiUrls","getUserCurrentLocation","getPlaceDetails","getHospitalCompleteDetails","getCoronaUpdate","getHospitalCodes","getHospitalDetails","StyledTableCell","withStyles","theme","head","palette","common","white","body","TableCell","StyledTableRow","root","TableRow","useStyles","makeStyles","table","background","boxShadow","margin","DisplayCoronaDetails","classes","c_data","TableContainer","component","Table","TableHead","align","TableBody","Object","keys","el","Ambulance","totalData","getCoronaDetails","APiUrls","data","infected","recovered","dead","forEach","dst_name","deceased","error","handleScroll","scrollY","leftPosition","myRef","current","scrollTop","offsetTop","myRef2","left","ambulanceTravelNode","classList","add","remove","handleCloseAmbulanceModal","displayambulance","openAmbulanceModal","openCoronaModal","displayCorona","closeCoronaModal","createRef","addEventListener","ref","onScroll","SelectedHospitalSnapShot","nextProps","nextState","searchText","selectedHospitalList","JSON","stringify","loc","h_loc","h_name","selectedHospital","exclusiveKeywords","Location","renderCount","prepareLocationTags","finalTags","filter","dataElem","types","some","includes","setLocationTags","Set","handleOpenLocationModal","prevProps","prevState","elevation","fontWeight","letterSpacing","textTransform","size","setSelectedHospitalList","setSearchText","customSort","hospitalList","temp","sort","a","b","Number","lastIndex","remArr","hospital","splice","concat","capitalletter","str","i","x","split","toUpperCase","substr","join","SearchBox","org_selectedHospital","prepareSearchEngine","tempResult","hospitalDetails","push","completeHospitalData","searchEngine","getSearchResults","finalKeys","finalResult","ob","toLowerCase","hptl","hosp","setSelectedlList","preparePostSearchSelectedZoneHospitalList","tempHptlList","selectedHospitalLocationTags","handleSearchEngine","trim","TextField","label","totalHospitalDetails","rawHospitalData","search","setSelectedHospitalZoneTags","FilterTags","loc_selectedTags","loc_leftTags","updateLocateStates","selectedTags","leftTags","handleCancel","handleFilterChange","findIndex","handleDelete","prevprops","Chip","onDelete","deleteIcon","FilterDisplay","handleCloseAreaTags","opt","areaTagsOption","handleOpenAreaTags","selectedZoneTags","SortModal","initialVal","setValue","useTheme","useMediaQuery","breakpoints","down","RadioGroup","handleRadioChange","FormControlLabel","control","Radio","SortDisplay","sortOptions","sortData","handleSwitchChange","val","handleOpenFilter","openFilteralert","handleCloseAlert","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","scope","textDecoration","format","geolib","latitude","longitude","Fab","hospitalCord","smallGreen","spacing","green","HospitalModalDetailTemplate","rating","Avatar","c_bed","Box","fontStyle","m","formatted_address","href","formatted_phone_number","international_phone_number","website","geometry","location","h_dist","reviews","rv","Card","CardHeader","avatar","src","profile_photo_url","author_name","subheader","relative_time_description","CardContent","text","HospitalListModal","handleClose","headerTitle","autoFocus","BackDropCustom","createHospitalProfile","h_data","hospRef","firestore","doc","get","exists","set","getHospitalProfileAll","firebase","collection","snapshot","initializeApp","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ErrorModal","BackdropProps","setRawHospitalData","HospitalListDisplay","proxyNeedFlagFirstCall","proxyNeedFlagSecondCall","googleFetchTryCountFirstCall","googleFetchTryCountSecondCall","errorBodyMessage","modalContent","createHospitalDetailModayBody","tempHtml","handleOpenModal","openModal","openZoneBackDrop","handleHospitalDetailsPre","h_zone","handleHospitalDetails","viewErrorModal","prms","handleCloseModal","handleErrorClose","CardMedia","Hospital","loc_selectedHospitalCount","pendingChange","prepareSelectedZoneHospitalList","hospitalZoneTags","loc_hospitalZoneTags","square","LocationOptionInput","handleInputChange","nam","locality","district","country","multiline","defaultValue","InputProps","readOnly","TransitionLeft","Slide","direction","SideAlert","Grow","TransitionComponent","SnackbarContent","border","App","geoLocationMove","locChangeAlertCount","proxyNeedFlag","googleFetchTryCount","loc_locationCoordinates_lat","loc_locationCoordinates_long","loc_cordChangeFlag","prepareHospitalData","tempArr","assign","arrangeHospitalKeyMap","getLocationWhenCordsChangedByUser","openBackDrop","getFormattedAddress","getLocationTrack","navigator","geolocation","watchPosition","pos","coords","alertBar","handleBackDropClose","openPermissionDeniedAlert","timeout","maximumAge","enableHighAccuracy","getCurrentPosition","long","results","setFormattedAddress","setAddressComponents","address_components","TransitionDown","searchGoogleForUserDetails","tempAddr","pop","long_name","short_name","tmmpAddr","snackBar","snackBarMessage","reload","handleCloseWelcomeAlert","openWelcomeAlert","handleCloseLocationOptionAlert","handleCloseSnackBar","clearWatch","showLocation","userCordChangeFlag","hospitalDetailsData","tempMap","j","find","elm","setTotalHospitalDetails","Fragment","CssBaseline","Fade","action","locationModalOpen","commmuteFlag","Bootbase","enableAppModule","Boolean","hostname","match","INITIAL_STATE","selectedHospitalReducer","totalHospitalDetailReducer","addressComponentsReducer","formattedAddressReducer","locationTagsReducer","userCordsReducer","selectedHospitalZoneTagsReducer","rawHospitalDataReducer","searchReducer","locationInputReducer","cordChangeFlagReducer","commuteFlagReducer","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80b415bc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./../WelcomeModal/WelcomeModal.style.scss\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function WelcomeModal(props) {\r\n  return (\r\n    <div id='welcomeDialogue'>\r\n      <Dialog\r\n        fullWidth={true}\r\n        open={props.open}\r\n        style={{\r\n          backgroundColor: \"#5264ca\",\r\n          color: \"white\",\r\n        }}\r\n        PaperProps={{\r\n          style: {\r\n            borderRadius: \"5px\",\r\n            top: \"30px\",\r\n          },\r\n        }}\r\n        onClose={props.handleAlertClose}\r\n        aria-labelledby='alert-dialog-title'\r\n        aria-describedby='alert-dialog-description'\r\n      >\r\n        <DialogContent style={{ backgroundColor: \"#3b87ff\", paddingLeft: \"5px\", paddingRight: \"5px\" }} id='welcomeContent'>\r\n          <div className='headerImageContainer'>\r\n            <div className='headerImageHolder'></div>\r\n            <div className='animatorTest'>\r\n              <div className='headerImageFiller'>\r\n                <div className='headerImageFillerInner'></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='welcomeNote'> Hello !</div>\r\n          </div>\r\n          <div className='welcomeContent'>\r\n            <div className='welcomeBodyContent'>\r\n              <div className='div_0'>\r\n                <strong>Lets Stand Strong Together. </strong>\r\n              </div>\r\n              <div className='div_1'>\r\n                <strong>\r\n                  <span className='NameHolder'>COVID19 HospitalTracker</span>\r\n                </strong>\r\n                is a mobile-friendly web app designed specifically to help you tackle the tough times of COVID19.\r\n                <br />\r\n                <br />\r\n                This web-app helps you in tracking hospitals providing care for COVID19 patients based on your location.\r\n              </div>\r\n              <br />\r\n              <div className='div_2'> To aid you in the best way,enable permission to access your device location when prompted.</div>\r\n              Stay safe.\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions style={{ backgroundColor: \"#3b87ff\" }}>\r\n          <div className='btn_Container'>\r\n            <Button onClick={() => props.onClose(true)} color='primary' variant='contained'>\r\n              Proceed\r\n            </Button>\r\n          </div>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nexport const BackDropDefault = ({ open }) => {\r\n  return open ? (\r\n    <Backdrop open style={{ backgroundColor: \"#183259\", zIndex: \"1\", opacity: \"0.95\" }}>\r\n      <div className='loadTrackerWelcome'>\r\n        <div className='loaderContainer'>\r\n          <CircularProgress />\r\n        </div>\r\n        <div className='loaderTextContainer'>Please wait while we try to trace your current location..</div>\r\n        <LinearProgress />\r\n      </div>\r\n    </Backdrop>\r\n  ) : null;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport \"./../ContactMe/ContactMe.style.scss\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nexport default class ContactMe extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { feedback: \"\", name: \"\", email: \"joydas1611@gmail.com\", errorMessage: \"\", snkBar: false };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(event, type) {\r\n    if (type == \"feedbackDesc\") {\r\n      this.setState({ feedback: event.target.value });\r\n    } else {\r\n      this.setState({ name: event.target.value });\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    const templateId = \"template_lddOxOX0\";\r\n    if (this.state.name != \"\" && this.state.feedback != \"\") {\r\n      this.setState(\r\n        {\r\n          errorMessage: \"\",\r\n        },\r\n        () => this.sendFeedback(templateId, { message_html: this.state.feedback, from_name: this.state.name, reply_to: this.state.email })\r\n      );\r\n    } else if (this.state.name == \"\") {\r\n      this.setState({\r\n        errorMessage: \"Opps ! You missed out your name.\",\r\n      });\r\n    } else if (this.state.feedback == \"\") {\r\n      this.setState({\r\n        errorMessage: \"Please dont send me blank messages !\",\r\n      });\r\n    }\r\n  };\r\n  sendFeedback(templateId, variables) {\r\n    window.emailjs\r\n      .send(\"gmail\", templateId, variables)\r\n      .then((res) => {\r\n        this.setState({\r\n          errorMessage: \"\",\r\n          feedback: \"\",\r\n          name: \"\",\r\n          snkBar: true,\r\n        });\r\n      })\r\n      // Handle errors here however you like, or use a React error boundary\r\n      .catch((err) =>\r\n        this.setState({\r\n          errorMessage: \"Message sending failed.Please try again in sometime.\",\r\n        })\r\n      );\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState(\r\n      {\r\n        snkBar: false,\r\n        errorMessage: \"\",\r\n      },\r\n      () => this.props.onClose()\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog fullScreen open={this.props.open} onClose={this.props.onclose} aria-labelledby='Contact Me' aria-describedby='About Me'>\r\n          <div\r\n            className='bod_Skeleton'\r\n            style={{\r\n              backgroundColor: \"##ebecf0\",\r\n            }}\r\n          >\r\n            <DialogContent\r\n              style={{\r\n                backgroundColor: \"##ebecf0\",\r\n              }}\r\n            >\r\n              <Container maxWidth='xs' style={{ padding: \"0\" }}>\r\n                <div onClick={() => this.closeModal()}>\r\n                  <CloseIcon fontSize='large' />\r\n                </div>\r\n                <div className='bod_Container'>\r\n                  <div className='bod_ImageHolder'>\r\n                    <div className='div_Welcome'>\r\n                      <h2>Insights</h2>\r\n                    </div>\r\n                    <div className='div_avatar'>\r\n                      <div className='div_Avatar_ImgContainer'>\r\n                        <div className='avt_inner'></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='bod_FormHolder'>\r\n                    <div className='desContainer'>\r\n                      Hi! I am <strong>Joy</strong> and I develop web applications and websites as part of my livelihood. COVID19 HospitalTracker is a pet-project of mine and is intended as a giveaway to the community during tough times.\r\n                      <br />\r\n                      If you find it useful, drop a message to show your love and appreciation ! <br />\r\n                      <br />\r\n                      Cheers !\r\n                    </div>\r\n                    <div className='formContainer'>\r\n                      <label>\r\n                        <input id='userName' name='userName' onChange={(e) => this.handleChange(e, \"userName\")} type='text' placeholder='Your Name' required />\r\n                      </label>\r\n                      <label>\r\n                        <textarea id='feedbackDesc' name='feedbackDesc' onChange={(e) => this.handleChange(e, \"feedbackDesc\")} required value={this.state.feedback} placeholder='Your Message To Me...' rows='4' cols='35' />\r\n                      </label>\r\n                    </div>\r\n                    {this.state.errorMessage != \"\" ? <div className='errorHolder'>{this.state.errorMessage}</div> : null}\r\n                  </div>\r\n                  <div className='bod_ActionHolder'>\r\n                    <div className='btnContactMe' onClick={this.handleSubmit}>\r\n                      Send Message\r\n                    </div>\r\n                    <div className='btnContactMe' onClick={() => this.closeModal()}>\r\n                      No, maybe later\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Container>\r\n            </DialogContent>\r\n          </div>\r\n        </Dialog>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={this.state.snkBar}\r\n          autoHideDuration={2000}\r\n          message='Message delivered succesfully!'\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport ContactMe from \"./../ContactMe/ContactMe.component\";\r\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport \"./../Header/Header.style.scss\";\r\n\r\nexport class Header extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      contactMe: false,\r\n    };\r\n  }\r\n\r\n  openContactMe = () => {\r\n    this.setState({\r\n      contactMe: true,\r\n    });\r\n  };\r\n\r\n  closeContactMe = () => {\r\n    this.setState({\r\n      contactMe: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar position='static' className='Header'>\r\n          <Container maxWidth='md' style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div id='back-to-top-anchor'>\r\n              <Typography variant='h6' gutterBottom>\r\n                <span className='logoHolderText2 '>COVID19</span>\r\n                <span className='logoHolderText'>HospitalTracker</span>\r\n              </Typography>\r\n            </div>\r\n            <div onClick={() => this.openContactMe()}>\r\n              <IconButton aria-label='delete' style={{ padding: \"5px 0\", color: \"#00fff9\" }}>\r\n                <ContactMailIcon />\r\n              </IconButton>\r\n            </div>\r\n          </Container>\r\n        </AppBar>\r\n        <ContactMe open={this.state.contactMe} onClose={() => this.closeContactMe()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport \"./../Footer/Footer.style.scss\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\n\r\nimport ContactMe from \"./../ContactMe/ContactMe.component\";\r\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport class Footer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contactMe: false,\r\n    };\r\n  }\r\n\r\n  openContactMe = () => {\r\n    this.setState({\r\n      contactMe: true,\r\n    });\r\n  };\r\n\r\n  closeContactMe = () => {\r\n    this.setState({\r\n      contactMe: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BottomNavigation showLabels className='Footer'>\r\n          <div className='cpDiv'>\r\n            <div>&copy; Copyright 2020, COVID19HospitalTracker.</div>\r\n            <div>All rights reserved.</div>\r\n          </div>\r\n          <div className='authorAvatar' onClick={() => this.openContactMe()}>\r\n            <IconButton aria-label='delete' style={{ padding: \"5px 0\", color: \"#00fff9\" }}>\r\n              <ContactMailIcon />\r\n            </IconButton>\r\n          </div>\r\n        </BottomNavigation>\r\n        <ContactMe open={this.state.contactMe} onClose={() => this.closeContactMe()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst CustomSwitch = (props) => {\r\n  return <Switch checked={props.checkedState} onChange={(e) => props.handleChangeSwitch(e)} color='primary' inputProps={{ \"aria-label\": \"primary checkbox\" }} />;\r\n};\r\n\r\nexport default CustomSwitch;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport PersonPinIcon from \"@material-ui/icons/PersonPin\";\r\n\r\nimport CustomSwitch from \"./../../../Utils/Switch/CustomSwitch.component\";\r\nimport { setCommuteFlag } from \"./../../../redux/userAddress/commuteFlag.action\";\r\n\r\nimport \"./../AddressDisplay/AddressDisplay.style.scss\";\r\n\r\nconst AddressDisplay = ({ formattedAddress, setCommuteFlag }) => {\r\n  const [state, setState] = React.useState({\r\n    commuteFlag: false,\r\n  });\r\n\r\n  let loc_commuteFlag = false;\r\n  const handleChangeSwitch = (event) => {\r\n    // console.log(event.target.checked);\r\n    setState({\r\n      commuteFlag: event.target.checked,\r\n    });\r\n    loc_commuteFlag = event.target.checked ? \"labelSwitchActive\" : \"labelSwitchDefault\";\r\n    setCommuteFlag(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='locationTitleContainer'>\r\n        <div className={state.commuteFlag ? \"locationIconholder locationIconholderGlow\" : \"locationIconholder\"}>\r\n          <LocationOnIcon fontSize='large' color='primary'></LocationOnIcon>\r\n        </div>\r\n        <div className='locationDesc'>\r\n          <div>\r\n            <PersonPinIcon />\r\n          </div>\r\n          <div> Your current location :</div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='AddressContainer'>\r\n          <div className='addressHolder'>\r\n            <address>{formattedAddress}</address>\r\n            <div className='commuterHolder'>\r\n              <CustomSwitch handleChangeSwitch={(e) => handleChangeSwitch(e)} /> <div className={state.commuteFlag ? \"labelSwitchActive\" : \"labelSwitchDefault\"}>I am commuting/travelling right now.</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  formattedAddress: state.formattedAddress.formattedAddress,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCommuteFlag: (commuteFlag) => dispatch(setCommuteFlag(commuteFlag)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddressDisplay);\r\n","export const setCommuteFlag = (commuteFlag) => ({\r\n  type: \"SET_COMMUTE_FLAG\",\r\n  payload: commuteFlag,\r\n});\r\n","const GoogleCredentials = {\r\n  apiKey: \"AIzaSyArulgFkLD1tIDxd0ia5YDtjMd53J8Zuwc\",\r\n};\r\n\r\nexport default GoogleCredentials;\r\n\r\n/*\r\ndev use - AIzaSyAyesbQMyKVVbBgKVi2g6VX7mop2z96jBo\r\nprod use - AIzaSyArulgFkLD1tIDxd0ia5YDtjMd53J8Zuwc\r\n*/\r\n","export const setUserCords = (userCords) => ({\r\n  type: \"SET_USER_CORDS\",\r\n  payload: userCords,\r\n});\r\n","export const setCordChangeFlag = (cordChangeFlag) => ({\r\n  type: \"SET_CORD_CHANGE\",\r\n  payload: cordChangeFlag,\r\n});\r\n","import React from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport GoogleCredentials from \"./../../../Utils/GoogleCredentials\";\r\nimport \"./../MapsDisplay/google-maps.style.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setUserCords } from \"./../../../redux/userAddress/userCords.action\";\r\nimport { setCordChangeFlag } from \"./../../../redux/userAddress/cordChangeFlag.action\";\r\n\r\nconst containerStyle = {\r\n  position: \"relative\",\r\n  width: \"inherit\",\r\n  height: \"inherit\",\r\n};\r\n\r\nclass GoogleMaps extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  onMarkerDragEnd = (coord) => {\r\n    if (this.props.draggable) {\r\n      const { latLng } = coord;\r\n      const lat = latLng.lat();\r\n      const lng = latLng.lng();\r\n      this.props.setUserCords([lat, lng]);\r\n      this.props.setuserCordsFlag(true);\r\n    }\r\n\r\n    //console.log(lat + \",\" + lng);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className='mapHolder'>\r\n        <Map\r\n          key={new Date().getTime()}\r\n          google={this.props.google}\r\n          zoom={14}\r\n          containerStyle={containerStyle}\r\n          initialCenter={{\r\n            lat: this.props.currentLat,\r\n            lng: this.props.currentLong,\r\n          }}\r\n        >\r\n          <Marker title='Your current location' position={{ lat: this.props.currentLat, lng: this.props.currentLong }} name={\"Your position\"} id={1} draggable={this.props.draggable} onDragend={(t, map, coord) => this.onMarkerDragEnd(coord)}></Marker>\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setUserCords: (userCords) => dispatch(setUserCords(userCords)),\r\n  setuserCordsFlag: (flag) => dispatch(setCordChangeFlag(flag)),\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(\r\n  GoogleApiWrapper({\r\n    apiKey: GoogleCredentials.apiKey,\r\n  })(GoogleMaps)\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"./../MapsDisplay/MapsDisplay.style.scss\";\r\n\r\nimport GoogleMaps from \"./google-maps.component\";\r\n\r\nconst MapsDisplay = ({ userCords }) => {\r\n  return userCords != null ? (\r\n    <div className='mapcontainer'>\r\n      <Paper variant='outlined' className='shadowCustom'>\r\n        <div className='mapcontainer'>\r\n          <GoogleMaps currentLat={userCords[0]} currentLong={userCords[1]} draggable={true}></GoogleMaps>\r\n          <div className='instruction'>Drag the Locator to change your present location.</div>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userCords: state.userCords.userCords,\r\n});\r\n\r\nexport default connect(mapStateToProps)(MapsDisplay);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./../TagsDisplay/TagsDisplay.style.scss\";\r\n\r\nconst TagsDisplay = (props) => {\r\n  return props.locationTags != null && props.selectedHospitalZoneTags != null ? (\r\n    props.tagtype == \"userTag\" ? (\r\n      <div className='staticTagHolderContainer'>\r\n        {props.locationTags.map((elem, index) => (\r\n          <div key={index} className='staticKeyTags'>\r\n            {elem}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    ) : (\r\n      <div className='staticTagHolderContainer'>\r\n        {props.selectedHospitalZoneTags.map((elem, index) => (\r\n          <div key={index} className='staticKeyTags'>\r\n            {elem}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  ) : null;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  locationTags: state.locationTags.locationTags,\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n});\r\n\r\nexport default connect(mapStateToProps)(TagsDisplay);\r\n","export const setLocationModal = (locationModal) => ({\r\n  type: \"SET_LOCATION_MODAL\",\r\n  payload: locationModal,\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Header } from \"./../../../Components/Header/Header.component\";\r\nimport \"./../DisplayAmbulance/DisplayAmbulanceModal.style.scss\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport GoogleCredentials from \"./../../../Utils/GoogleCredentials\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst iframe = \"<iframe width='100%' height='450px' frameborder='0' style='border:0' src='https://www.google.com/maps/embed/v1/search?key=\";\r\n\r\nconst Iframe = (props) => {\r\n  //props.iframe = props.iframe + props.pin + \"' allowfullscreen></iframe>\";\r\n  return <div className='iframe-container' dangerouslySetInnerHTML={{ __html: props.iframe ? props.iframe + GoogleCredentials.apiKey + \"&center=\" + props.userCords[0] + \",\" + props.userCords[1] + \"&zoom=11&q=health+ambulance+service+medical+near+\" + props.pin + \"' allowfullscreen></iframe>\" : \"\" }} />;\r\n};\r\n\r\nconst DisplayAmbulance = (props) => {\r\n  return (\r\n    <Dialog fullScreen open={props.open} onClose={props.onclose} aria-labelledby='Display Ambulances' aria-describedby='Display Ambulances'>\r\n      <Header />\r\n      <div className='filterTagsHeader'>Check Ambulance Services Near You</div>\r\n      <div className='filterTagsBodySortAmbulance'>\r\n        <div className='SortTitleDesc'>View available ambulance services near you.We strongly suggest to call and book an appointment.</div>\r\n        <div className='dividerHolder'>\r\n          <Divider />\r\n        </div>\r\n        <div className='iframeContainer'>\r\n          <Iframe iframe={iframe} pin={props.addressComponents[props.addressComponents.length - 1][\"long_name\"]} userCords={props.userCords} />\r\n        </div>\r\n        <div className='actionHolder'>\r\n          <Button variant='contained' color='primary' onClick={() => props.onclose()} color='primary'>\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  addressComponents: state.addressComponents.addressComponents,\r\n  userCords: state.userCords.userCords,\r\n});\r\nexport default connect(mapStateToProps)(DisplayAmbulance);\r\n","import React from \"react\";\r\nimport GoogleCredentials from \"./../GoogleCredentials\";\r\n\r\nconst apiKey = \"&key=\" + GoogleCredentials.apiKey;\r\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\nexport const CommunicatorFetch = (urlName, params, proxyNeed) => {\r\n  console.log(\"Communication fetched==\" + urlName);\r\n  let url;\r\n  if (params !== undefined) {\r\n    if (proxyNeed != undefined) {\r\n      url = proxyurl + urlName + params + apiKey;\r\n    } else {\r\n      url = urlName + params + apiKey;\r\n    }\r\n  } else {\r\n    url = urlName;\r\n  }\r\n  //url =  url;\r\n  return fetch(url).then((response) => response.json());\r\n};\r\n","const ApiUrls = {\r\n  getUserCurrentLocation: \"https://maps.googleapis.com/maps/api/geocode/json?latlng=\",\r\n  getPlaceDetails: \"https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input=\",\r\n  getHospitalCompleteDetails: \"https://maps.googleapis.com/maps/api/place/details/json?place_id=\",\r\n  getCoronaUpdate: \"https://api.covid19india.org/state_district_wise.json\",\r\n  getHospitalCodes: \"https://joyjd.github.io/cv19api/hospitalCodes.json\",\r\n  getHospitalDetails: \"https://joyjd.github.io/cv19api/hospitalDetails.json\",\r\n};\r\n\r\nexport default ApiUrls;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Header } from \"./../../../Components/Header/Header.component\";\r\nimport \"./../DisplayAmbulance/DisplayAmbulanceModal.style.scss\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport \"./../DisplayCoronaDetails/DisplayCoronaModal.style.scss\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#1a355c\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: \"#639ab626\",\r\n    },\r\n  },\r\n}))(TableRow);\r\nconst useStyles = makeStyles({\r\n  table: {},\r\n  root: {\r\n    borderRadius: \"205px\",\r\n    background: \"#e9e2e2\",\r\n    boxShadow: \"3px 3px 7px #c6c0c0,  -3px -3px 7px #ffffff\",\r\n    color: \"#1a355c9e\",\r\n    margin: \"0 5px 2px 0\",\r\n  },\r\n});\r\n\r\nconst DisplayCoronaDetails = (props) => {\r\n  const classes = useStyles();\r\n  return props.c_data != null ? (\r\n    <Dialog fullScreen open={props.open} onClose={props.onclose} aria-labelledby='Display Corona Details' aria-describedby='Display Corona Details'>\r\n      <Header />\r\n      <div className='filterTagsHeader'>View COVID19 Information</div>\r\n      <div className='filterTagsBodyCoronaTable'>\r\n        <div className='SortTitleDesc'>District-wise data of COVID19 pandemic in West Bengal.</div>\r\n        <div className='dividerHolder'>\r\n          <Divider />\r\n        </div>\r\n        <div>\r\n          <TableContainer component={Paper} id='hospitalDetailTable'>\r\n            <Table className={classes.table} aria-label='customized table'>\r\n              <TableHead>\r\n                <TableRow style={{ backgroundColor: \"red\", color: \"white\" }}>\r\n                  <StyledTableCell>District</StyledTableCell>\r\n                  <StyledTableCell align='right'>Infected</StyledTableCell>\r\n                  <StyledTableCell align='right'>Active</StyledTableCell>\r\n                  <StyledTableCell align='right'>Recovered</StyledTableCell>\r\n                  <StyledTableCell align='right'>Dead</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {Object.keys(props.c_data).map((el, index) => (\r\n                  <StyledTableRow key={index}>\r\n                    <StyledTableCell align='right'>{el}</StyledTableCell>\r\n                    <StyledTableCell align='right'>{props.c_data[el][\"confirmed\"]}</StyledTableCell>\r\n                    <StyledTableCell align='right'>{props.c_data[el][\"active\"]}</StyledTableCell>\r\n                    <StyledTableCell align='right'>{props.c_data[el][\"recovered\"]}</StyledTableCell>\r\n                    <StyledTableCell align='right'>{props.c_data[el][\"deceased\"]}</StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n\r\n        <div className='actionHolder'>\r\n          <Button variant='contained' color='primary' onClick={() => props.onClose()} color='primary'>\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  ) : null;\r\n};\r\n\r\nexport default DisplayCoronaDetails;\r\n","import React from \"react\";\r\n\r\nimport \"./../Ambulance/Ambulance.style.scss\";\r\n\r\nimport DisplayAmbulance from \"./DisplayAmbulance/DisplayAmbulanceModal.component\";\r\n\r\nimport { CommunicatorFetch } from \"./../../Utils/Communicator/Communicator.component\";\r\nimport APiUrls from \"./../../Utils/ApiUrls.data\";\r\n\r\nimport DisplayCoronaDetails from \"./DisplayCoronaDetails/DisplayCoronaModal.component\";\r\n\r\nclass Ambulance extends React.Component {\r\n  totalData = null;\r\n  constructor() {\r\n    super();\r\n    this.myRef = React.createRef();\r\n    this.myRef2 = React.createRef();\r\n    this.state = {\r\n      infected: 0,\r\n      recovered: 0,\r\n      deceased: 0,\r\n      displayambulance: false,\r\n      displayCorona: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n    this.getCoronaDetails();\r\n  }\r\n\r\n  getCoronaDetails = () => {\r\n    CommunicatorFetch(APiUrls.getCoronaUpdate).then(\r\n      (data) => {\r\n        console.log(data);\r\n        this.totalData = data[\"West Bengal\"][\"districtData\"];\r\n        let infected = 0;\r\n        let recovered = 0;\r\n        let dead = 0;\r\n        Object.keys(this.totalData).forEach((dst_name) => {\r\n          infected += this.totalData[dst_name][\"confirmed\"];\r\n          recovered += this.totalData[dst_name][\"recovered\"];\r\n          dead += this.totalData[dst_name][\"deceased\"];\r\n        });\r\n        this.setState({\r\n          infected: infected,\r\n          recovered: recovered,\r\n          deceased: dead,\r\n        });\r\n      },\r\n      (error) => {}\r\n    );\r\n  };\r\n  handleScroll = () => {\r\n    const scrollY = window.scrollY;\r\n    const scrollTop = this.myRef.current.scrollTop;\r\n    const offsetTop = this.myRef.current.offsetTop;\r\n    let leftPosition = scrollY - offsetTop;\r\n    leftPosition = leftPosition + 250;\r\n    //console.log(leftPosition);\r\n    this.myRef2.current.style.left = leftPosition + \"px\";\r\n    //this.myRef2.current.style.transition = \"left 1s\";\r\n\r\n    if (this.ambulanceTravelNode != null && this.ambulanceTravelNode > leftPosition) {\r\n      this.myRef2.current.classList.add(\"displayAmb2\");\r\n      this.myRef2.current.classList.remove(\"displayAmb1\");\r\n    } else if (this.ambulanceTravelNode != null && leftPosition < 0) {\r\n      this.myRef2.current.classList.remove(\"displayAmb2\");\r\n      this.myRef2.current.classList.add(\"displayAmb1\");\r\n    }\r\n    this.ambulanceTravelNode = leftPosition;\r\n  };\r\n\r\n  handleCloseAmbulanceModal = () => {\r\n    this.setState({\r\n      displayambulance: false,\r\n    });\r\n  };\r\n  openAmbulanceModal = () => {\r\n    this.setState({\r\n      displayambulance: true,\r\n    });\r\n  };\r\n\r\n  openCoronaModal = () => {\r\n    this.setState({\r\n      displayCorona: true,\r\n    });\r\n  };\r\n\r\n  closeCoronaModal = () => {\r\n    this.setState({\r\n      displayCorona: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='amb' ref={this.myRef} onScroll={this.handleScroll}>\r\n          <div className='bg-move displayAmb1' ref={this.myRef2}>\r\n            <div className='coronaDataHolderTitle '>COVID19 Updates(WB)</div>\r\n\r\n            <div className='dataHolder'>\r\n              <div>\r\n                <div className='dataDiv'>Infected</div>\r\n                <div>{this.state.infected}</div>\r\n              </div>\r\n              <div>\r\n                <div className='dataDiv'>Recovered</div>\r\n                <div>{this.state.recovered}</div>\r\n              </div>\r\n              <div>\r\n                <div className='dataDiv'>Death</div>\r\n                <div>{this.state.deceased}</div>\r\n              </div>\r\n            </div>\r\n            <div className='coronaDetailsPromptHolder' onClick={() => this.openCoronaModal()}>\r\n              <mark>\r\n                <em>View District-wise</em>\r\n              </mark>\r\n            </div>\r\n            {/*  <div className='coronaDetailsPromptHolder'>\r\n              <div onClick={() => this.openCoronaModal()}>\r\n                <em>View District-wise</em>\r\n              </div>\r\n            </div>\r\n            <div className='ambulancePromptHolder'>\r\n              <label onClick={() => this.openAmbulanceModal()}>Find Ambulances</label>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <div className='ambLight light--flash'></div>\r\n        <div className='ambulanceContainer' onClick={() => this.openAmbulanceModal()}>\r\n          <div className='ambulancePromptHolder'>Find Ambulances Near You</div>\r\n        </div>\r\n\r\n        <DisplayAmbulance onclose={() => this.handleCloseAmbulanceModal()} open={this.state.displayambulance} />\r\n        <DisplayCoronaDetails c_data={this.totalData} open={this.state.displayCorona} onClose={() => this.closeCoronaModal()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ambulance;\r\n","import React from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport GoogleCredentials from \"./../../../Utils/GoogleCredentials\";\r\nimport \"./../SelectedHospitalSnapShot/SelectedHospitalSnapShot.style.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst containerStyle = {\r\n  position: \"relative\",\r\n  width: \"inherit\",\r\n  height: \"inherit\",\r\n};\r\n\r\nclass SelectedHospitalSnapShot extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.props.searchText != null) {\r\n      return false;\r\n    } else if (nextProps.selectedHospitalList == this.props.selectedHospitalList) {\r\n      return false;\r\n    } else {\r\n      if (JSON.stringify(nextProps.selectedHospitalZoneTags) == JSON.stringify(this.props.selectedHospitalZoneTags)) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.selectedHospitalList != null ? (\r\n      <div className='mapHolderHospitalSnapshot'>\r\n        <Map\r\n          key={new Date().getTime()}\r\n          google={this.props.google}\r\n          zoom={10}\r\n          containerStyle={containerStyle}\r\n          initialCenter={{\r\n            lat: this.props.userCords[0],\r\n            lng: this.props.userCords[1],\r\n          }}\r\n        >\r\n          {this.props.selectedHospitalList.map((loc, index) => (\r\n            <Marker key={index} position={{ lat: loc.h_loc.lat, lng: loc.h_loc.lng }} name={loc.h_name} id={1}></Marker>\r\n          ))}\r\n        </Map>\r\n        <div className='instructionSnapShot'>\r\n          <strong>{this.props.selectedHospitalList.length} Hospitals </strong> found at your selected Areas/Zones.\r\n          <br />\r\n          Scroll down to view the detailed list of hospitals.\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userCords: state.userCords.userCords,\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n  searchText: state.searchText.searchText,\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n});\r\n\r\nexport default connect(mapStateToProps)(\r\n  GoogleApiWrapper({\r\n    apiKey: GoogleCredentials.apiKey,\r\n  })(SelectedHospitalSnapShot)\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./../Location/Location.style.scss\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport AddressDisplay from \"./AddressDisplay/AddressDisplay.component\";\r\nimport MapsDisplay from \"./../Common/MapsDisplay/MapsDisplay.component\";\r\nimport TagsDisplay from \"./../Common/TagsDisplay/TagsDisplay.component\";\r\nimport { setLocationTags } from \"./../../redux/userAddress/locationTags.action\";\r\nimport { setLocationModal } from \"./../../redux/locationInput/locationInput.action\";\r\nimport Ambulance from \"./../Ambulance/Ambulance.component\";\r\nimport SelectedHospitalSnapShot from \"./SelectedHospitalSnapShot/SelectedHospitalSnapShot.component\";\r\n\r\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\r\nconst exclusiveKeywords = [\"country\"];\r\n\r\nclass Location extends React.Component {\r\n  renderCount = 0;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.addressComponents != null) {\r\n      this.prepareLocationTags();\r\n    }\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    // console.log(\"getDerivedStateFromProps executed\");\r\n    return null;\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    // console.log(\"shouldComponentUpdate executed\");\r\n    return true;\r\n  }\r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    // console.log(\"getSnapshotBeforeUpdate executed\");\r\n    return null;\r\n  }\r\n\r\n  prepareLocationTags = () => {\r\n    let finalTags = this.props.addressComponents.filter((dataElem) => {\r\n      return !dataElem.types.some((el) => exclusiveKeywords.includes(el));\r\n    });\r\n\r\n    this.props.setLocationTags([...new Set(finalTags.map((el) => el[\"long_name\"]).filter((el) => el !== \"West Bengal\"))]);\r\n  };\r\n\r\n  handleOpenLocationModal = () => {\r\n    this.props.setLocationModal(true);\r\n  };\r\n\r\n  render() {\r\n    return this.props.addressComponents != null ? (\r\n      <div>\r\n        <div className='locationCardContainer'>\r\n          <Paper elevation={3} className='transparentBorder'>\r\n            <AddressDisplay />\r\n            <MapsDisplay />\r\n            <div className='addressInputHolder'>\r\n              <div className='addressInputIconHolder'>\r\n                <BorderColorIcon fontSize='small' />\r\n              </div>\r\n              <Button\r\n                style={{\r\n                  fontWeight: \"500\",\r\n                  letterSpacing: \"0\",\r\n                  textTransform: \"none\",\r\n                }}\r\n                size='small'\r\n                onClick={() => this.handleOpenLocationModal()}\r\n              >\r\n                Not Correct? Type your current address\r\n              </Button>\r\n            </div>\r\n\r\n            <TagsDisplay tagtype='userTag' />\r\n            <SelectedHospitalSnapShot />\r\n          </Paper>\r\n        </div>\r\n        <Ambulance />\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setLocationTags: (locationTags) => dispatch(setLocationTags(locationTags)),\r\n  setLocationModal: (locationModal) => dispatch(setLocationModal(locationModal)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  addressComponents: state.addressComponents.addressComponents,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Location);\r\n","export const setLocationTags = (locationTags) => ({\r\n  type: \"SET_LOCATION_TAGS\",\r\n  payload: locationTags,\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HospitalCountDisplay = ({ selectedHospitalList, searchText }) => {\r\n  return selectedHospitalList != null ? (\r\n    <div>\r\n      <div>Hospitals Found ({selectedHospitalList.length})*</div>\r\n      {searchText == null ? <div className='listNature'>* based on your current location areas</div> : <div className='listNature'>* based on Search Results</div>}\r\n    </div>\r\n  ) : null;\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n  searchText: state.searchText.searchText,\r\n});\r\nexport default connect(mapStateToProps)(HospitalCountDisplay);\r\n","export const setSelectedHospitalList = (selectedHospitalList) => ({\r\n  type: \"SET_SELECTED_HOSPITAL_LIST\",\r\n  payload: selectedHospitalList,\r\n});\r\n","export const setSearchText = (searchText) => ({\r\n  type: \"SET_SEARCH_TEXT\",\r\n  payload: searchText,\r\n});\r\n","export const customSort = (hospitalList) => {\r\n  let temp = hospitalList.sort((a, b) => Number(a[\"h_dist\"]) - Number(b[\"h_dist\"]));\r\n  let lastIndex = null;\r\n  let remArr = [];\r\n  temp.forEach((hospital, index) => {\r\n    if (hospital[\"h_dist\"] == \"\") {\r\n      lastIndex = index;\r\n    }\r\n  });\r\n\r\n  if (lastIndex != null) {\r\n    remArr = temp.splice(0, lastIndex + 1);\r\n  }\r\n  //console.log(remArr);\r\n  temp = temp.concat(remArr);\r\n\r\n  return temp;\r\n};\r\n\r\nexport const capitalletter = (str) => {\r\n  str = str.split(\" \");\r\n\r\n  for (let i = 0, x = str.length; i < x; i++) {\r\n    str[i] = str[i][0].toUpperCase() + str[i].substr(1);\r\n  }\r\n\r\n  return str.join(\" \");\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setSelectedHospitalList } from \"./../../../redux/selectedHospital/selectedHospital.action\";\r\nimport { setSearchText } from \"./../../../redux/search/search.action\";\r\n\r\nimport \"./../SearchBox/SearchBox.style.scss\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { customSort } from \"./../../../Utils/Sort.component\";\r\n\r\nclass SearchBox extends React.Component {\r\n  org_selectedHospital = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchEngine: null,\r\n      searchText: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.hospitalDetails != null) {\r\n      this.prepareSearchEngine();\r\n    }\r\n  }\r\n\r\n  prepareSearchEngine = () => {\r\n    let tempResult = [];\r\n\r\n    Object.keys(this.props.hospitalDetails).forEach((elem) => {\r\n      this.props.hospitalDetails[elem].forEach((el) => {\r\n        //prepare entire list\r\n        this.org_selectedHospital.push(el);\r\n\r\n        //lookup in detailslist\r\n        if (this.props.completeHospitalData[el[\"h_name\"]]) {\r\n          if (this.props.completeHospitalData[el[\"h_name\"]][\"name\"] != el[\"h_name\"]) {\r\n            tempResult.push({\r\n              [el[\"h_name\"]]: [el[\"h_name\"], this.props.completeHospitalData[el[\"h_name\"]][\"name\"]],\r\n            });\r\n          } else {\r\n            tempResult.push({\r\n              [el[\"h_name\"]]: [el[\"h_name\"]],\r\n            });\r\n          }\r\n        } else {\r\n          tempResult.push({\r\n            [el[\"h_name\"]]: [el[\"h_name\"]],\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({\r\n      searchEngine: tempResult,\r\n    });\r\n    //console.log(tempResult);\r\n  };\r\n\r\n  getSearchResults = () => {\r\n    let finalKeys = [];\r\n    let finalResult = [];\r\n    let res = this.state.searchEngine.filter((ob) => {\r\n      return ob[Object.keys(ob)[0]].filter((e) => e.toLowerCase().includes(this.state.searchText.toLowerCase())).length != 0;\r\n    });\r\n\r\n    res.forEach((el) => finalKeys.push(Object.keys(el)[0]));\r\n    finalKeys.forEach((hptl) => {\r\n      finalResult.push(this.org_selectedHospital.filter((hosp) => hosp.h_name.includes(hptl))[0]);\r\n    });\r\n    finalResult = [...new Set(finalResult)];\r\n    /* this.setState({\r\n      selectedHospitalList: finalResult,\r\n    }); */\r\n    this.props.setSelectedlList(customSort(finalResult));\r\n  };\r\n\r\n  preparePostSearchSelectedZoneHospitalList = () => {\r\n    let tempHptlList = [];\r\n    this.props.selectedHospitalLocationTags.forEach((elem) => {\r\n      if (this.props.hospitalDetails[elem]) {\r\n        this.props.hospitalDetails[elem].forEach((el) => tempHptlList.push(el));\r\n      }\r\n    });\r\n    this.props.setSelectedlList(customSort(tempHptlList));\r\n    /* this.setState({\r\n      selectedHospitalList: tempHptlList,\r\n    }); */\r\n  };\r\n\r\n  handleSearchEngine = (el) => {\r\n    if (el.target.value.trim() != \"\") {\r\n      this.props.setSearchText(el.target.value);\r\n      this.setState({ searchText: el.target.value }, () => this.getSearchResults());\r\n    } else {\r\n      this.props.setSearchText(null);\r\n      this.setState(\r\n        {\r\n          searchText: \"\",\r\n        },\r\n        () => this.preparePostSearchSelectedZoneHospitalList()\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='displayFlex searchBoxHospitalContainer shadowCustom'>\r\n        <div className='searchIconHolder'>\r\n          <SearchIcon />\r\n        </div>\r\n        <div className='w_100'>\r\n          <TextField type='search' id='outlined-textarea' value={this.state.searchText} className='w_100' label='Search Hospitals By Name' placeholder='Find any COVID19 hospital ..' variant='filled' onChange={(el) => this.handleSearchEngine(el)} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSelectedlList: (selectedHospitalList) => dispatch(setSelectedHospitalList(selectedHospitalList)),\r\n  setSearchText: (search) => dispatch(setSearchText(search)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  hospitalDetails: state.totalHospitalDetails.totalHospitalDetails,\r\n  selectedHospitalLocationTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n  completeHospitalData: state.rawHospitalData.rawHospitalData,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBox);\r\n","export const setSelectedHospitalZoneTags = (selectedHospitalZoneTags) => ({\r\n  type: \"SET_SELECTED_HOSPITAL_ZONE_TAGS\",\r\n  payload: selectedHospitalZoneTags,\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./../FilterModal/FilterAreaTags.style.scss\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Header } from \"./../../../Header/Header.component\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\n\r\nclass FilterTags extends React.Component {\r\n  loc_selectedTags = null;\r\n  loc_leftTags = null;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedTags: [],\r\n      leftTags: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.selectedHospitalZoneTags != null && this.props.hospitalDetails != null) {\r\n      this.setState({\r\n        selectedTags: this.props.selectedHospitalZoneTags,\r\n        leftTags: Object.keys(this.props.hospitalDetails).filter((el) => !this.props.selectedHospitalZoneTags.includes(el)),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevprops) {\r\n    if (prevprops.selectedHospitalZoneTags != this.props.selectedHospitalZoneTags) {\r\n      console.log(this.props.selectedHospitalZoneTags);\r\n      console.log(this.state.selectedTags);\r\n\r\n      this.loc_selectedTags = this.props.selectedHospitalZoneTags;\r\n      this.loc_leftTags = Object.keys(this.props.hospitalDetails).filter((el) => !this.props.selectedHospitalZoneTags.includes(el));\r\n      if (this.loc_selectedTags != this.state.selectedTags) {\r\n        this.updateLocateStates();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateLocateStates = () => {\r\n    this.setState({\r\n      selectedTags: this.loc_selectedTags,\r\n      leftTags: this.loc_leftTags,\r\n    });\r\n  };\r\n  handleCancel = () => {\r\n    this.setState(\r\n      {\r\n        selectedTags: this.props.selectedHospitalZoneTags,\r\n        leftTags: Object.keys(this.props.hospitalDetails).filter((el) => !this.props.selectedHospitalZoneTags.includes(el)),\r\n      },\r\n      () => this.props.onClose(\"\", \"cancel\")\r\n    );\r\n  };\r\n\r\n  handleFilterChange = (type, el) => {\r\n    if (type == \"del\") {\r\n      let temp = this.state.selectedTags;\r\n      temp.splice(\r\n        temp.findIndex((e) => e == el),\r\n        1\r\n      );\r\n\r\n      this.setState({\r\n        selectedTags: temp,\r\n        leftTags: this.state.leftTags.concat(el),\r\n      });\r\n    } else {\r\n      let temp = this.state.leftTags;\r\n      temp.splice(\r\n        temp.findIndex((e) => e == el),\r\n        1\r\n      );\r\n      this.setState({\r\n        selectedTags: this.state.selectedTags.concat(el),\r\n        leftTags: temp,\r\n      });\r\n    }\r\n  };\r\n  handleDelete = (type, el) => this.handleFilterChange(type, el);\r\n\r\n  render() {\r\n    return this.props.open ? (\r\n      <Dialog fullScreen open={this.props.open} onClose={this.props.onclose} aria-labelledby='Select Hospital Zones' aria-describedby='Option to select Hospital Area Tags'>\r\n        <Header />\r\n        <div className='filterTagsHeader'>Select Areas/ Zones</div>\r\n        <div className='filterTagsBody'>\r\n          <div>You can select areas/zones to view COVID19 treatment providing hospitals of that area.</div>\r\n          <div className='dividerHolder'>\r\n            <Divider />\r\n          </div>\r\n          <div className='displayFlex headerTagLineDesc'>\r\n            <div>\r\n              <LocalOfferIcon fontSize='small' />\r\n            </div>\r\n            <div>\r\n              Selected {this.state.selectedTags.length} out of {this.state.selectedTags.length + this.state.leftTags.length} Areas/Zones.\r\n            </div>\r\n          </div>\r\n          <div className='chipsHolder'>\r\n            {this.state.selectedTags.sort().map((el, index) => {\r\n              return (\r\n                <div key={index} className='chipsKey'>\r\n                  <Chip key={index} size='small' label={el} color='primary' onClick={() => this.handleFilterChange(\"del\", el)} onDelete={() => this.handleDelete(\"del\", el)} deleteIcon={<DoneIcon />} />\r\n                </div>\r\n              );\r\n            })}\r\n            {this.state.leftTags.sort().map((el, index) => {\r\n              return (\r\n                <div key={index} className='chipsKey'>\r\n                  <Chip key={index} size='small' label={el} color='default' onClick={() => this.handleFilterChange(\"add\", el)} onDelete={() => this.handleDelete(\"add\", el)} deleteIcon={<AddIcon />} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className='dividerHolder displayEqual'>\r\n            <Button variant='contained' color='primary' onClick={() => this.handleCancel()}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant='contained' color='primary' onClick={() => this.props.onClose(this.state.selectedTags, \"\")}>\r\n              Apply Selection\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n  hospitalDetails: state.totalHospitalDetails.totalHospitalDetails,\r\n});\r\nexport default connect(mapStateToProps)(FilterTags);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./../FilterDisplay/FilterDisplay.style.scss\";\r\n\r\nimport { setSelectedHospitalList } from \"./../../../redux/selectedHospital/selectedHospital.action\";\r\nimport { setSearchText } from \"./../../../redux/search/search.action\";\r\nimport { setSelectedHospitalZoneTags } from \"./../../../redux/selectedHospital/selectedHospitalZoneTags.action\";\r\nimport { customSort } from \"./../../../Utils/Sort.component\";\r\nimport FilterTags from \"./FilterModal/FilterAreaTags.component\";\r\n\r\nclass FilterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      areaTagsOption: false,\r\n    };\r\n  }\r\n\r\n  handleCloseAreaTags = (el, opt) => {\r\n    if (opt == \"\") {\r\n      let temp = [];\r\n      el.forEach((e) => {\r\n        if (this.props.hospitalDetails[e]) {\r\n          temp = temp.concat(this.props.hospitalDetails[e]);\r\n        }\r\n      });\r\n\r\n      this.props.setSelectedlList(customSort(temp));\r\n      this.props.setSelectedHospitalZoneTags(el);\r\n    }\r\n    this.setState(\r\n      {\r\n        areaTagsOption: false,\r\n      },\r\n      () => this.props.setSearchText(null)\r\n    );\r\n  };\r\n\r\n  handleOpenAreaTags = () => {\r\n    this.setState({\r\n      areaTagsOption: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.props.selectedHospitalZoneTags != null && this.props.hospitalDetails != null ? (\r\n      <div className='filterDiv'>\r\n        <Button variant='contained' color='primary' onClick={() => this.handleOpenAreaTags()}>\r\n          Filter by Area / Zones\r\n        </Button>\r\n        <FilterTags open={this.state.areaTagsOption} onClose={(el, opt) => this.handleCloseAreaTags(el, opt)} />\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n  hospitalDetails: state.totalHospitalDetails.totalHospitalDetails,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSelectedlList: (selectedHospitalList) => dispatch(setSelectedHospitalList(selectedHospitalList)),\r\n  setSearchText: (search) => dispatch(setSearchText(search)),\r\n  setSelectedHospitalZoneTags: (selectedZoneTags) => dispatch(setSelectedHospitalZoneTags(selectedZoneTags)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterDisplay);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Header } from \"./../../../Header/Header.component\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport \"./../SortModal/SortModal.style.scss\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default function SortModal(props) {\r\n  const [value, setValue] = React.useState(props.initialVal == \"\" ? \"isChecked_op_hospital\" : props.initialVal);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    props.handleRadioChange(event.target.value);\r\n  };\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  return (\r\n    <Dialog fullScreen={fullScreen} open={props.open} onClose={props.onclose} aria-labelledby='Sort Hospitals' aria-describedby='Option to sort Hospitals'>\r\n      <Header />\r\n      <div className='filterTagsHeader'>Sort Hospitals</div>\r\n      <div className='filterTagsBodySort'>\r\n        <div className='SortTitleDesc'>You can sort list of hospitals according to your view</div>\r\n        <div className='dividerHolder'>\r\n          <Divider />\r\n        </div>\r\n        <div className='displayFlex headerTagLineDesc'></div>\r\n        <div className='chipsHolder'>\r\n          <RadioGroup aria-label='gender' name='gender1' value={value} onChange={handleChange}>\r\n            <FormControlLabel value='isChecked_op_bed' control={<Radio color='primary' />} label='More vacancy of COVID beds' />\r\n            <FormControlLabel value='isChecked_op_hospital' control={<Radio color='primary' />} label='Hospitals nearer to your current location' />\r\n          </RadioGroup>\r\n        </div>\r\n        <div className='dividerHolder displayEqual'>\r\n          <Button variant='contained' color='primary' onClick={() => props.onClose(false)} color='primary'>\r\n            Cancel\r\n          </Button>\r\n          <Button variant='contained' color='primary' onClick={() => props.onClose(true)} color='primary' autoFocus>\r\n            Sort\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./../SortDisplay/SortDisplay.style.scss\";\r\n\r\nimport { setSelectedHospitalList } from \"./../../../redux/selectedHospital/selectedHospital.action\";\r\n\r\nimport SortModal from \"./SortModal/SortModal.component\";\r\n\r\nclass SortDisplay extends React.Component {\r\n  sortOptions = \"\";\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openFilteralert: false,\r\n    };\r\n  }\r\n\r\n  sortData = () => {\r\n    if (this.sortOptions == \"isChecked_op_hospital\") {\r\n      let temp = this.props.selectedHospitalList.sort((a, b) => Number(a[\"h_dist\"]) - Number(b[\"h_dist\"]));\r\n      let lastIndex = null;\r\n      let remArr = [];\r\n      temp.forEach((hospital, index) => {\r\n        if (hospital[\"h_dist\"] == \"\") {\r\n          lastIndex = index;\r\n        }\r\n      });\r\n\r\n      if (lastIndex != null) {\r\n        remArr = temp.splice(0, lastIndex + 1);\r\n      }\r\n      console.log(remArr);\r\n      temp = temp.concat(remArr);\r\n\r\n      this.props.setSelectedlList(temp);\r\n    } else {\r\n      this.props.setSelectedlList(this.props.selectedHospitalList.sort((a, b) => b[\"c_bed\"] - a[\"c_bed\"]));\r\n    }\r\n  };\r\n  handleSwitchChange = (val) => {\r\n    this.sortOptions = val;\r\n  };\r\n\r\n  handleOpenFilter = () => {\r\n    this.setState({\r\n      openFilteralert: true,\r\n    });\r\n  };\r\n  handleCloseAlert = (el) => {\r\n    this.setState({\r\n      openFilteralert: false,\r\n    });\r\n    if (el) {\r\n      this.sortData();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='sortDiv'>\r\n        <Button variant='contained' color='primary' onClick={() => this.handleOpenFilter()}>\r\n          Manage View\r\n        </Button>\r\n        <SortModal open={this.state.openFilteralert} onClose={(el) => this.handleCloseAlert(el)} initialVal={this.sortOptions} handleRadioChange={(val) => this.handleSwitchChange(val)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSelectedlList: (selectedHospitalList) => dispatch(setSelectedHospitalList(selectedHospitalList)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortDisplay);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HostiptalZoneCountDisplay = ({ selectedHospitalZoneTags }) => {\r\n  return selectedHospitalZoneTags != null ? selectedHospitalZoneTags.length : null;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n});\r\nexport default connect(mapStateToProps)(HostiptalZoneCountDisplay);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport FindInPageIcon from \"@material-ui/icons/FindInPage\";\r\nimport \"./../HospitalItem/HospitalItem.style.scss\";\r\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\r\nimport * as geolib from \"geolib\";\r\nimport PriorityHighIcon from \"@material-ui/icons/PriorityHigh\";\r\nimport { customSort } from \"./../../../../Utils/Sort.component\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#1a355c\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: \"#639ab626\",\r\n    },\r\n  },\r\n}))(TableRow);\r\nconst useStyles = makeStyles({\r\n  table: {},\r\n  root: {\r\n    borderRadius: \"205px\",\r\n    background: \"#e9e2e2\",\r\n    boxShadow: \"3px 3px 7px #c6c0c0,  -3px -3px 7px #ffffff\",\r\n    color: \"#1a355c9e\",\r\n    margin: \"0 5px 2px 0\",\r\n  },\r\n});\r\nconst formatter = new Intl.NumberFormat(\"en-US\", {\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\nconst HospitalItem = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return props.userCords != null ? (\r\n    <TableContainer component={Paper} id='hospitalDetailTable'>\r\n      <Table className={classes.table} aria-label='customized table'>\r\n        <TableHead>\r\n          <TableRow style={{ backgroundColor: \"red\", color: \"white\" }}>\r\n            <StyledTableCell>Covid19 Hospital({props.selectedHospitalList.length})</StyledTableCell>\r\n            <StyledTableCell align='right'>Area</StyledTableCell>\r\n            <StyledTableCell align='right'>Vacant Beds*</StyledTableCell>\r\n            <StyledTableCell align='right'></StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {props.selectedHospitalList.map((el) => (\r\n            <StyledTableRow key={el[\"h_name\"]}>\r\n              <StyledTableCell component='th' scope='row'>\r\n                <div style={{ textDecoration: \"underline\" }} onClick={() => props.onClick(el[\"h_name\"], el[\"h_zone\"], el[\"c_bed\"], el[\"h_dist\"])}>\r\n                  <strong> {el[\"h_name\"]}</strong>\r\n                </div>\r\n                <div className='distanceIndicator'>\r\n                  {el[\"h_loc\"] != \"\" ? (\r\n                    <span className='distanceData'>\r\n                      <DirectionsRunIcon />\r\n                    </span>\r\n                  ) : (\r\n                    <span className='errorData'>\r\n                      <PriorityHighIcon />\r\n                    </span>\r\n                  )}\r\n                  <span>{el[\"h_loc\"] != \"\" ? (el[\"h_dist\"] = formatter.format(geolib.getPreciseDistance({ latitude: props.userCords[0], longitude: props.userCords[1] }, { latitude: el[\"h_loc\"][\"lat\"], longitude: el[\"h_loc\"][\"lng\"] }) / 1000)) : \"\"}</span>\r\n                  {el[\"h_loc\"] != \"\" ? <span>Km away*</span> : <span>Data not known</span>}\r\n                </div>\r\n              </StyledTableCell>\r\n              <StyledTableCell align='right'>{el[\"h_zone\"]}</StyledTableCell>\r\n              <StyledTableCell align='right'>\r\n                <div className='displayFlex'>\r\n                  {el[\"c_bed\"] > 2 ? (\r\n                    <div className='icon-green'>\r\n                      <i></i>\r\n                    </div>\r\n                  ) : (\r\n                    <div className='icon-orange'>\r\n                      <i></i>\r\n                    </div>\r\n                  )}\r\n\r\n                  <strong>{el[\"c_bed\"]}</strong>\r\n                </div>\r\n              </StyledTableCell>\r\n              <StyledTableCell align='right'>\r\n                <Fab classes={{ root: classes.root }} size='small' color='primary' aria-label='add' onClick={() => props.onClick(el[\"h_name\"], el[\"h_zone\"], el[\"c_bed\"], el[\"h_dist\"])}>\r\n                  <FindInPageIcon fontSize='small' />\r\n                </Fab>\r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      {props.selectedHospitalList.length == 0 ? <div className='noResultFoundcontainer'>No hospitals found.</div> : <span></span>}\r\n    </TableContainer>\r\n  ) : null;\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  userCords: state.userCords.userCords,\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n});\r\nexport default connect(mapStateToProps)(HospitalItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport GoogleCredentials from \"./../../../Utils/GoogleCredentials\";\r\n\r\nconst iframe = \"<iframe   width='100%' height='300px' frameborder='0' style='border:0' src='https://www.google.com/maps/embed/v1/directions?key=\";\r\n\r\nconst GmapIframe = (props) => {\r\n  return <div className='iframe-container' dangerouslySetInnerHTML={{ __html: iframe ? iframe + GoogleCredentials.apiKey + \"&origin=\" + props.userCords[0] + \",\" + props.userCords[1] + \"&destination=\" + props.hospitalCord[0] + \",\" + props.hospitalCord[1] + \"&zoom=11&avoid=tolls|highways' allowfullscreen></iframe>\" : \"\" }} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userCords: state.userCords.userCords,\r\n});\r\nexport default connect(mapStateToProps)(GmapIframe);\r\n","import React from \"react\";\r\nimport \"./../HospitalDetailsModal/HospitalModalDetailTemplate.style.scss\";\r\nimport GoogleMaps from \"./../../Components/Common/MapsDisplay/google-maps.component\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport AirlineSeatIndividualSuiteIcon from \"@material-ui/icons/AirlineSeatIndividualSuite\";\r\nimport PhoneInTalkIcon from \"@material-ui/icons/PhoneInTalk\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport HotelIcon from \"@material-ui/icons/Hotel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { green, pink } from \"@material-ui/core/colors\";\r\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\r\nimport CommuteIcon from \"@material-ui/icons/Commute\";\r\nimport DirectionsWalkIcon from \"@material-ui/icons/DirectionsWalk\";\r\nimport GmapIframe from \"./RoadDirectionHospital/gmapIframe.component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  smallGreen: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n    color: \"#fff\",\r\n    backgroundColor: green[500],\r\n  },\r\n}));\r\nexport const HospitalModalDetailTemplate = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      {props.data != undefined ? (\r\n        <div className='ribbon'>\r\n          <span>\r\n            <StarIcon fontSize='small' />\r\n            {props.data.rating}\r\n          </span>\r\n        </div>\r\n      ) : null}\r\n      <Paper elevation={3}>\r\n        <div className='hosp_detailContainer'>\r\n          <div className='covidInfoBody'>\r\n            <div>\r\n              <Avatar variant='rounded' className={classes.smallGreen}>\r\n                <HotelIcon fontSize='small' />\r\n              </Avatar>\r\n            </div>\r\n            <div className='displayData displayFlex'>\r\n              <Typography>\r\n                <span className='covidNumberLabel'>{props.c_bed}</span>\r\n              </Typography>\r\n\r\n              <Typography color='textSecondary'> vacant COVID-19 beds *</Typography>\r\n            </div>\r\n          </div>\r\n          <Typography component='div' className='m_t_-5'>\r\n            <Box fontStyle='italic' m={1}>\r\n              <div className='disclaimerCovid'>*data displayed as per WB Government</div>\r\n            </Box>\r\n          </Typography>\r\n          <div className='hospInfoBody'>\r\n            {props.data != undefined ? (\r\n              <div className='displayFlex '>\r\n                <div>\r\n                  <BusinessIcon fontSize='small' />\r\n                </div>\r\n                <div className='displayData'>{props.data.formatted_address}</div>\r\n              </div>\r\n            ) : null}\r\n\r\n            {props.data != undefined ? (\r\n              <div className='displayFlex '>\r\n                <div>\r\n                  <PhoneInTalkIcon fontSize='small' />\r\n                </div>\r\n                <div className='displayData'>\r\n                  <a href='tel:{props.data.formatted_phone_number}'>{props.data.formatted_phone_number} </a> / <a href='tel:{props.data.international_phone_number}'> {props.data.international_phone_number}</a>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {props.data != undefined ? (\r\n              <div className='displayFlex '>\r\n                <div>\r\n                  <LanguageIcon fontSize='small' />\r\n                </div>\r\n                <div className='displayData'>{props.data.website ? <a href='{props.data.website}'>{props.data.website} </a> : \"Not Known\"}</div>\r\n              </div>\r\n            ) : null}\r\n            {props.data != undefined ? (\r\n              <div className='mapcontainerHospital'>\r\n                {/* <GoogleMaps draggable={false} currentLat={props.data.geometry.location.lat} currentLong={props.data.geometry.location.lng}></GoogleMaps> */}\r\n                <GmapIframe hospitalCord={[props.data.geometry.location.lat, props.data.geometry.location.lng]} />\r\n              </div>\r\n            ) : null}\r\n            {props.h_dist != \"\" ? (\r\n              <div className='displayFlex m_tb_5'>\r\n                <div className='displayFlex'>\r\n                  <CommuteIcon />\r\n                  <DirectionsWalkIcon fontSize='small' />\r\n                </div>\r\n                {/* <div className='displayData'>Tentatively {props.h_dist} Km away from you</div> */}\r\n                <div className='displayData'>Tentative road-map shown, does not display present traffic conditions.Zoom in to check detils.</div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n      <div className='dividerCont'>\r\n        <Divider />\r\n      </div>\r\n      {props.data != undefined && props.data.reviews != undefined ? (\r\n        <div>\r\n          <div className='displayFlex m_tb_10'>\r\n            <div>\r\n              <RateReviewIcon fontSize='small' />\r\n            </div>\r\n            <div className='displayData fontBold'>User Reviews</div>\r\n          </div>\r\n          <div className='reviewContainer'>\r\n            {props.data.reviews.map((rv, index) => (\r\n              <Card key={index} className='m_b_6 cardReviews'>\r\n                <CardHeader avatar={<Avatar src={rv.profile_photo_url}></Avatar>} title={rv.author_name} subheader={rv.relative_time_description} />\r\n                <CardContent>\r\n                  <Typography variant='body2' color='textSecondary' component='p'>\r\n                    {rv.text}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport \"./../HospitalListModal/HospitalListModal.style.scss\";\r\n\r\nexport default function HospitalListModal(props) {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen={fullScreen} open={props.open} onClose={props.handleClose} aria-labelledby='responsive-dialog-title'>\r\n        <div className='hospitalImageContainer'>\r\n          <div className='hosp_headerTitleContainer'>{props.headerTitle}</div>\r\n        </div>\r\n\r\n        <DialogContent>{props.body}</DialogContent>\r\n        <DialogActions>\r\n          <Button style={{ margin: \"10px 20px 10px 0\" }} autoFocus onClick={() => props.onClose()} variant='contained' color='primary'>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nexport default function BackDropCustom(props) {\r\n  return props.open == true ? (\r\n    <Dialog open={props.open} onClose={props.handleAlertClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\r\n      <DialogContent>\r\n        <CircularProgress></CircularProgress>\r\n      </DialogContent>\r\n    </Dialog>\r\n  ) : null;\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBuRtnSpkl16_gayi7CkRj3xh98BNzWGKM\",\r\n  authDomain: \"cv19ht.firebaseapp.com\",\r\n  databaseURL: \"https://cv19ht.firebaseio.com\",\r\n  projectId: \"cv19ht\",\r\n  storageBucket: \"cv19ht.appspot.com\",\r\n  messagingSenderId: \"848826688923\",\r\n  appId: \"1:848826688923:web:2f264f379c627668fb2d3e\",\r\n  measurementId: \"G-JLY08JDRW4\",\r\n};\r\n\r\nexport const createHospitalProfile = async (h_name, h_data) => {\r\n  const hospRef = firestore.doc(`hospitals/${h_name}`);\r\n\r\n  const snapShot = await hospRef.get();\r\n\r\n  //console.log(firestore.doc(\"hospitals/abc\"));\r\n  if (!snapShot.exists && (h_data != null || h_data != undefined || h_data != \"\" || h_data != {})) {\r\n    try {\r\n      await hospRef.set({\r\n        ...h_data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  return hospRef;\r\n};\r\n\r\nexport const getHospitalProfileAll = async () => {\r\n  const snapshot = await firebase.firestore().collection(\"hospitals\").get();\r\n  const collection = {};\r\n  snapshot.forEach((doc) => {\r\n    collection[doc.id] = doc.data();\r\n  });\r\n  return collection;\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./../ErrorModal/ErrorModal.style.scss\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const ErrorModal = ({ open, onclose, body }) => {\r\n  return (\r\n    <Dialog\r\n      BackdropProps={{\r\n        style: {\r\n          background: \"#b0c1cf\",\r\n          opacity: \"0.97\",\r\n        },\r\n      }}\r\n      PaperProps={{\r\n        style: {\r\n          borderRadius: \"5px\",\r\n          height: \"400px\",\r\n          width: \"400px\",\r\n          backgroundColor: \"#b0c1cf\",\r\n\r\n          boxShadow: \"6px 6px 12px #96a4b0,-6px -6px 12px #cadeee\",\r\n        },\r\n      }}\r\n      onClose={onclose}\r\n      aria-labelledby='simple-dialog-title'\r\n      open={open}\r\n    >\r\n      <DialogContent>\r\n        <div className='ErrorBody'>\r\n          <div className='ErrorHeader'>\r\n            <div className='contentdiv'>\r\n              <NewReleasesIcon fontSize='large' />\r\n            </div>\r\n            <div className='contentdiv'>\r\n              <BuildIcon fontSize='large' />\r\n            </div>\r\n            <div className='contentdiv textHeader'> OOPS !</div>\r\n          </div>\r\n          <div className='ErrorDesc'>{body}</div>\r\n          <div className='ErrorAction'>\r\n            <div>\r\n              <Button variant='contained' color='primary' onClick={() => onclose(true)}>\r\n                Okay\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","export const setRawHospitalData = (rawHospitalData) => ({\r\n  type: \"SET_RAW_HOSPITAL_DATA\",\r\n  payload: rawHospitalData,\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nimport \"./../HospitalListDisplay/HospitalDisplay.style.scss\";\r\n\r\nimport { CommunicatorFetch } from \"./../../../Utils/Communicator/Communicator.component\";\r\nimport ApiUrls from \"./../../../Utils/ApiUrls.data\";\r\n\r\nimport HospitalItem from \"./HospitalItem/HospitalItem.component\";\r\nimport { HospitalModalDetailTemplate } from \"./../../../Modals/HospitalDetailsModal/HospitalModalDetailTemplate.component\";\r\nimport HospitalListModal from \"./HospitalListModal/HospitalListModal.component\";\r\nimport BackDropCustom from \"./../../../Utils/BackDropCustom/BackDropCustom.component\";\r\nimport { createHospitalProfile, getHospitalProfileAll } from \"./../../../firebase/firebase.util\";\r\nimport { ErrorModal } from \"./../../../Modals/ErrorModal/ErrorModal.component\";\r\n\r\nimport { setRawHospitalData } from \"./../../../redux/totalHospitalDetails/rawHospitalData.action\";\r\nimport { setSelectedHospitalList } from \"./../../../redux/selectedHospital/selectedHospital.action\";\r\n\r\nimport { customSort } from \"./../../../Utils/Sort.component\";\r\n\r\nclass HospitalListDisplay extends React.Component {\r\n  proxyNeedFlagFirstCall = false;\r\n  proxyNeedFlagSecondCall = false;\r\n  googleFetchTryCountFirstCall = 0;\r\n  googleFetchTryCountSecondCall = 0;\r\n\r\n  completeHospitalData = [];\r\n  errorBodyMessage = \"\";\r\n  modalContent = {\r\n    body: \"\",\r\n    headerTitle: \"\",\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      openZoneBackDrop: false,\r\n      openModal: false,\r\n      viewErrorModal: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.completeHospitalData != null) {\r\n      this.completeHospitalData = this.props.completeHospitalData;\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.completeHospitalData != null) {\r\n      this.completeHospitalData = this.props.completeHospitalData;\r\n    }\r\n  }\r\n\r\n  createHospitalDetailModayBody = (data, c_bed, h_dist) => {\r\n    let tempHtml;\r\n    if (typeof data == \"string\") {\r\n      tempHtml = <HospitalModalDetailTemplate c_bed={c_bed} h_dist={h_dist} />;\r\n      this.modalContent.headerTitle = data;\r\n    } else {\r\n      tempHtml = <HospitalModalDetailTemplate data={data} c_bed={c_bed} h_dist={h_dist} />;\r\n      this.modalContent.headerTitle = data[\"name\"];\r\n    }\r\n\r\n    this.modalContent.body = tempHtml;\r\n  };\r\n  handleOpenModal = () => {\r\n    this.setState({ openModal: true, openZoneBackDrop: false });\r\n  };\r\n  handleHospitalDetailsPre = (h_name, h_zone, c_bed, h_dist) => {\r\n    this.setState(\r\n      {\r\n        openZoneBackDrop: true,\r\n      },\r\n      () => this.handleHospitalDetails(h_name, h_zone, c_bed, h_dist)\r\n    );\r\n  };\r\n\r\n  handleHospitalDetails = (h_name, h_zone, c_bed, h_dist) => {\r\n    if (this.completeHospitalData[h_name]) {\r\n      this.createHospitalDetailModayBody(this.completeHospitalData[h_name], c_bed, h_dist);\r\n      this.handleOpenModal();\r\n    } /* else if(){\r\n           // For satellite cases\r\n    }  */ else {\r\n      let temp_hname;\r\n\r\n      if (h_name.split(\"\").includes(\"[\")) {\r\n        temp_hname = h_name.split(\"[\")[0];\r\n      }\r\n      if (h_name.split(\"\").includes(\"{\")) {\r\n        temp_hname = h_name.split(\"{\")[0];\r\n      } else {\r\n        temp_hname = h_name;\r\n      }\r\n      let searchText = \"\" + temp_hname + \" Hospital Medical,\" + h_zone + \",West Bengal,India\";\r\n      let params = searchText + \"&inputtype=textquery&fields=place_id\";\r\n      let firstCall;\r\n\r\n      if (this.proxyNeedFlagFirstCall) {\r\n        firstCall = CommunicatorFetch(ApiUrls.getPlaceDetails, params, \"proxyNeeded\");\r\n      } else {\r\n        firstCall = CommunicatorFetch(ApiUrls.getPlaceDetails, params);\r\n      }\r\n\r\n      firstCall\r\n        .then(\r\n          (data) => {\r\n            if (data[\"candidates\"].length != 0 && data[\"status\"] == \"OK\") {\r\n              let place_id = data[\"candidates\"][0][\"place_id\"];\r\n              let prms = place_id + \"&fields=name,geometry,photos,rating,adr_address,business_status,formatted_address,formatted_phone_number,international_phone_number,opening_hours,website,price_level,rating,review,user_ratings_total\";\r\n              return prms;\r\n              //return CommunicatorFetch(ApiUrls.getHospitalCompleteDetails, prms);\r\n            } else {\r\n              return \"\";\r\n            }\r\n          },\r\n          (error) => {\r\n            //handle error scenerio for first call\r\n            ++this.googleFetchTryCountFirstCall;\r\n            if (this.googleFetchTryCountFirstCall == 1) {\r\n              this.proxyNeedFlagFirstCall = true;\r\n              this.handleHospitalDetails(h_name, h_zone, c_bed, h_dist);\r\n            }\r\n            if (this.googleFetchTryCountFirstCall > 1) {\r\n              this.googleFetchTryCountFirstCall = 0;\r\n              this.proxyNeedFlagFirstCall = false;\r\n\r\n              console.log(\"HospitalZoneComponent+ First call====p_id-=====ERROR !!!!!!\");\r\n              this.errorBodyMessage = \"It seems Google API failed to retrieve details for \" + h_name + \".Either there is no details data available for this particular hospital over internet or Google failed to retrieve data at the moment.Please try again in sometime.\";\r\n              this.setState({\r\n                openZoneBackDrop: false,\r\n                viewErrorModal: true,\r\n              });\r\n            }\r\n          }\r\n        )\r\n        .then((prms) => (this.proxyNeedFlagSecondCall ? CommunicatorFetch(ApiUrls.getHospitalCompleteDetails, prms, \"proxyNeeded\") : CommunicatorFetch(ApiUrls.getHospitalCompleteDetails, prms)))\r\n        .then(\r\n          (data) => {\r\n            if (data != \"\") {\r\n              //get the new data\r\n              if (data[\"status\"] == \"OK\") {\r\n                // this.completeHospitalData[h_name] = data[\"result\"];\r\n\r\n                createHospitalProfile(h_name, data[\"result\"]);\r\n                //getHospitalProfileAll().then((data) => this.props.setRawHospitalData(data));\r\n                this.completeHospitalData[h_name] = data[\"result\"];\r\n                this.props.setRawHospitalData(this.completeHospitalData);\r\n                // this.props.setRawHospitalData(getHospitalProfileAll());\r\n                //UPDATE h_dist\r\n                this.props.selectedHospitalList[this.props.selectedHospitalList.findIndex((el) => el.h_name == h_name)][\"h_loc\"] = data[\"result\"][\"geometry\"][\"location\"];\r\n                this.props.setSelectedlList(customSort(this.props.selectedHospitalList));\r\n                //Call function to form body\r\n                this.createHospitalDetailModayBody(this.completeHospitalData[h_name], c_bed, h_dist);\r\n                this.handleOpenModal();\r\n              } else {\r\n                this.createHospitalDetailModayBody(h_name, c_bed, h_dist);\r\n                this.handleOpenModal();\r\n              }\r\n            } else {\r\n              this.createHospitalDetailModayBody(h_name, c_bed, h_dist);\r\n              this.handleOpenModal();\r\n            }\r\n          },\r\n          (error) => {\r\n            // handle error scenerio for second call\r\n            ++this.googleFetchTryCountSecondCall;\r\n            if (this.googleFetchTryCountSecondCall == 1) {\r\n              this.proxyNeedFlagSecondCall = true;\r\n              //this.handleHospitalDetails(h_name, h_zone, c_bed, h_dist);\r\n            }\r\n\r\n            if (this.googleFetchTryCountSecondCall > 1) {\r\n              this.googleFetchTryCountSecondCall = 0;\r\n              this.proxyNeedFlagSecondCall = false;\r\n\r\n              console.log(\"HospitalZoneComponent+ Second call====details-=====ERROR !!!!!!\");\r\n              if (!this.state.viewErrorModal) {\r\n                this.errorBodyMessage = \"It seems Google API failed to retrieve details for \" + h_name + \".Either there is no details data available for this particular hospital over internet or Google failed to retrieve data at the moment.Please try again in sometime.\";\r\n                this.setState({\r\n                  openZoneBackDrop: false,\r\n                  viewErrorModal: true,\r\n                });\r\n              }\r\n            }\r\n          }\r\n        );\r\n    }\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({ openModal: false });\r\n    this.modalContent.headerTitle = \"\";\r\n    this.modalContent.body = \"\";\r\n  };\r\n  handleErrorClose = () => {\r\n    this.setState({\r\n      viewErrorModal: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.props.selectedHospitalList != null ? (\r\n      <CardMedia>\r\n        <div className='hospitalListHoldContainer'>\r\n          <HospitalItem onClick={(h_name, h_zone, c_bed, h_dist) => this.handleHospitalDetailsPre(h_name, h_zone, c_bed, h_dist)} />\r\n        </div>\r\n        <div className='disclaimerHospital'>\r\n          <div>* Data displayed is as per WB Government website</div>\r\n          <div>* Distances shown are tentative and may not be exactly accurate</div>\r\n        </div>\r\n        <HospitalListModal open={this.state.openModal} onClose={this.handleCloseModal} headerTitle={this.modalContent.headerTitle} body={this.modalContent.body} />\r\n        <BackDropCustom open={this.state.openZoneBackDrop} />\r\n        <ErrorModal open={this.state.viewErrorModal} onclose={() => this.handleErrorClose()} body={this.errorBodyMessage} />\r\n      </CardMedia>\r\n    ) : null;\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setRawHospitalData: (rawHospitalData) => dispatch(setRawHospitalData(rawHospitalData)),\r\n  setSelectedlList: (selectedHospitalList) => dispatch(setSelectedHospitalList(selectedHospitalList)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n  completeHospitalData: state.rawHospitalData.rawHospitalData,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HospitalListDisplay);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./../Hospital/Hospital.style.scss\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\r\nimport DomainTwoToneIcon from \"@material-ui/icons/DomainTwoTone\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExposureIcon from \"@material-ui/icons/Exposure\";\r\n\r\nimport HospitalCountDisplay from \"./../Hospital/HospitalCountDisplay.component\";\r\nimport SearchBox from \"./../Hospital/SearchBox/SearchBox.component\";\r\nimport FilterDisplay from \"./FilterDisplay/FilterDisplay.component\";\r\nimport SortDisplay from \"./SortDisplay/SortDisplay.component\";\r\nimport TagsDisplay from \"./../Common/TagsDisplay/TagsDisplay.component\";\r\nimport HostiptalZoneCountDisplay from \"./HostiptalZoneCountDisplay.component\";\r\nimport HospitalListDisplay from \"./HospitalListDisplay/HospitalDisplay.component\";\r\nimport * as geolib from \"geolib\";\r\n\r\nimport { customSort, capitalletter } from \"./../../Utils/Sort.component\";\r\n\r\nimport { setSelectedHospitalList } from \"./../../redux/selectedHospital/selectedHospital.action\";\r\nimport { setSelectedHospitalZoneTags } from \"./../../redux/selectedHospital/selectedHospitalZoneTags.action\";\r\n\r\nclass Hospital extends React.Component {\r\n  loc_selectedHospitalCount = 0;\r\n  pendingChange = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loc_hospitalZoneTags: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n  componentDidUpdate() {\r\n    if (this.props.locationTags != null && this.props.hospitalDetails != null && this.props.userCords != null && this.props.searchText == null) {\r\n      this.prepareSelectedZoneHospitalList();\r\n    } else if (this.props.locationTags != null && this.props.hospitalDetails != null && this.props.userCords != null && this.props.searchText != null) {\r\n      this.pendingChange = true; //********** IMPLEMENT LATER */\r\n    }\r\n  }\r\n\r\n  prepareSelectedZoneHospitalList = () => {\r\n    let tempHptlList = [];\r\n    let hospitalZoneTags = [];\r\n\r\n    this.props.locationTags.forEach((elem) => {\r\n      if (this.props.hospitalDetails[capitalletter(elem)]) {\r\n        this.props.hospitalDetails[capitalletter(elem)].forEach((el) => {\r\n          if (el[\"h_loc\"][\"lat\"] != undefined || el[\"h_loc\"][\"lng\"] != undefined) {\r\n            el[\"h_dist\"] = Number(geolib.getPreciseDistance({ latitude: this.props.userCords[0], longitude: this.props.userCords[1] }, { latitude: el[\"h_loc\"][\"lat\"], longitude: el[\"h_loc\"][\"lng\"] }) / 1000);\r\n          }\r\n          // console.log(el[\"h_dist\"]);\r\n          tempHptlList.push(el);\r\n        });\r\n        hospitalZoneTags.push(capitalletter(elem));\r\n      }\r\n    });\r\n    //By default Show Kolkata zone- if nothing matches\r\n    if (hospitalZoneTags.length == 0) {\r\n      this.props.hospitalDetails[\"Kolkata\"].forEach((elem) => {\r\n        tempHptlList.push(elem);\r\n      });\r\n      hospitalZoneTags.push(\"Kolkata\");\r\n    }\r\n\r\n    this.props.setSelectedlList(customSort(tempHptlList));\r\n    this.props.setSelectedHospitalZoneTags(hospitalZoneTags);\r\n    this.loc_selectedHospitalCount = tempHptlList.length;\r\n    this.pendingChange = false;\r\n  };\r\n\r\n  render() {\r\n    return this.props.locationTags != null ? (\r\n      <Paper elevation={3} className='transparentBorder' id='containerHospitalList'>\r\n        <div className='hospitalTitleContainer'>\r\n          <div className='hospitalIconholder transparentBorder'>\r\n            <DomainTwoToneIcon fontSize='large' color='primary'></DomainTwoToneIcon>\r\n          </div>\r\n          <div className='hospitalTitleHolderContainer'>\r\n            <div className='hospitalAvatar'>\r\n              <LocalHospitalIcon color='secondary' />\r\n            </div>\r\n            <HospitalCountDisplay />\r\n          </div>\r\n        </div>\r\n        <SearchBox />\r\n        <div className='customButtonGroup'>\r\n          <Paper variant='outlined' square>\r\n            {this.props.searchText == null ? (\r\n              <div className='btnCol'>\r\n                <FilterDisplay />\r\n                <SortDisplay />\r\n              </div>\r\n            ) : null}\r\n            {this.props.searchText == null ? (\r\n              <div>\r\n                <div className='tagHeaderTitle'>\r\n                  <Typography color='textSecondary'>\r\n                    <ExposureIcon fontSize='small' />\r\n                  </Typography>\r\n                  <Typography color='textSecondary'>\r\n                    Selected Areas / Zones (<HostiptalZoneCountDisplay />)\r\n                  </Typography>\r\n                </div>\r\n                <div>\r\n                  <TagsDisplay tagtype='hospitalTag' />\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </Paper>\r\n        </div>\r\n        <HospitalListDisplay />\r\n      </Paper>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSelectedlList: (selectedHospitalList) => dispatch(setSelectedHospitalList(selectedHospitalList)),\r\n  setSelectedHospitalZoneTags: (selectedZoneTags) => dispatch(setSelectedHospitalZoneTags(selectedZoneTags)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  hospitalDetails: state.totalHospitalDetails.totalHospitalDetails,\r\n  locationTags: state.locationTags.locationTags,\r\n  searchText: state.searchText.searchText,\r\n  userCords: state.userCords.userCords,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Hospital);\r\n","import React, { useState } from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { Header } from \"./../../Components/Header/Header.component\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"./../AddressDetailModal/LocationOptionInput.style.scss\";\r\n\r\nexport default class LocationOptionInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      locality: \"\",\r\n      district: \"\",\r\n      pin: \"\",\r\n      state: \"West Bengal\",\r\n      country: \"India\",\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({ [nam]: val });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        BackdropProps={{\r\n          style: {\r\n            background: \"#495aa0cc\",\r\n          },\r\n        }}\r\n        fullScreen\r\n        open={this.props.open}\r\n        onClose={this.props.handleAlertClose}\r\n        aria-labelledby='Location prompt'\r\n        aria-describedby='Get user Location'\r\n      >\r\n        <Header />\r\n        <Container style={{ backgroundColor: \"#495aa0cc\" }}>\r\n          <div className='shadowCustom locBodyHolder'>\r\n            <Paper elevation={3}>\r\n              <div className='locPromptheader'>Provide Address Details</div>\r\n              <div className='locPromptbody'>\r\n                <div>We can trace your current location based on the address details you provide.</div>\r\n                <div className='textFieldContainer'>\r\n                  <TextField className='w_100' id='standard-multiline-static' name='locality' value={this.state.locality} onChange={(e) => this.handleInputChange(e)} label='Your locality' multiline rows={4} />\r\n                </div>\r\n                <div className='textFieldContainer'>\r\n                  <TextField className='w_100' id='standard-basic' name='district' value={this.state.district} onChange={(e) => this.handleInputChange(e)} label='District' />\r\n                </div>\r\n                <div className='textFieldContainer'>\r\n                  <TextField className='w_100' id='standard-basic' name='pin' value={this.state.pin} onChange={(e) => this.handleInputChange(e)} type='number' label='Pin Code' />\r\n                </div>\r\n                <div className='textFieldContainer'>\r\n                  <TextField\r\n                    className='w_100'\r\n                    id='standard-read-only-input'\r\n                    label='State'\r\n                    defaultValue='West Bengal'\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='textFieldContainer'>* Currently we are only supporting this application within West Bengal</div>\r\n                <div className='textFieldContainer'>\r\n                  <Button variant='contained' color='primary' onClick={() => this.props.onClose(this.state)}>\r\n                    Submit Location Details\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Paper>\r\n          </div>\r\n        </Container>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction='left' />;\r\n}\r\n\r\nconst SideAlert = (props) => {\r\n  const [state, setState] = React.useState({\r\n    vertical: \"top\",\r\n    horizontal: \"left\",\r\n  });\r\n  const { vertical, horizontal } = state;\r\n\r\n  return (\r\n    <Snackbar autoHideDuration={2000} key={Grow} TransitionComponent={TransitionLeft} anchorOrigin={{ vertical, horizontal }} open={props.open} onClose={props.handleAlertClose} message='I love snacks' key={vertical + horizontal}>\r\n      <SnackbarContent\r\n        style={{\r\n          backgroundColor: \"#000000eb\",\r\n          padding: \"0px 0 0 20px\",\r\n          borderRadius: \"15px\",\r\n          color: \"#c4fff4\",\r\n          border: \"3px solid #284065ba\",\r\n        }}\r\n        message={<span id='client-snackbar'>Updating your current location ..</span>}\r\n      />\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default SideAlert;\r\n","import React from \"react\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Fade from \"@material-ui/core/Fade\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Fab from \"@material-ui/core/Fab\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { BackDropDefault } from \"./Utils/BackDropDefault/BackDropOrg.component\";\n\nimport { connect } from \"react-redux\";\n\nimport { Header } from \"./Components/Header/Header.component\";\nimport { Footer } from \"./Components/Footer/Footer.component\";\nimport Location from \"./Components/Location/Location.component\";\nimport Hospital from \"./Components/Hospital/Hospital.component\";\n\nimport { CommunicatorFetch } from \"./Utils/Communicator/Communicator.component\";\nimport ApiUrls from \"./Utils/ApiUrls.data\";\n\nimport { ErrorModal } from \"./Modals/ErrorModal/ErrorModal.component\";\nimport WelcomeModal from \"./Modals/WelcomeModal/WelcomeModal.component\";\nimport LocationOptionInput from \"./Modals/AddressDetailModal/LocationOptionInput.component\";\n\nimport { setTotalHospitalDetails } from \"./redux/totalHospitalDetails/totalHospital.action\";\nimport { setAddressComponents } from \"./redux/userAddress/addressComponents.action\";\nimport { setFormattedAddress } from \"./redux/userAddress/formattedAddress.action\";\nimport { setUserCords } from \"./redux/userAddress/userCords.action\";\nimport { setRawHospitalData } from \"./redux/totalHospitalDetails/rawHospitalData.action\";\nimport { setLocationModal } from \"./redux/locationInput/locationInput.action\";\nimport { setCordChangeFlag } from \"./redux/userAddress/cordChangeFlag.action\";\n\nimport { dummyLoc } from \"./assets/dummyLoc\";\n\nimport { createHospitalProfile, getHospitalProfileAll } from \"./firebase/firebase.util\";\n\nimport SideAlert from \"./Utils/SideAlert/SideALert.component\";\n\nconst env = \"prod\"; // prod -  dev\n\nclass App extends React.Component {\n  geoLocationMove = null;\n  locChangeAlertCount = 0;\n  proxyNeedFlag = false;\n  googleFetchTryCount = 0;\n\n  errorBodyMessage = \"\";\n  hospitalList = [];\n  loc_locationCoordinates_lat = null;\n  loc_locationCoordinates_long = null;\n  loc_cordChangeFlag = null;\n  constructor() {\n    super();\n    this.state = {\n      openWelcomeAlert: false,\n      viewErrorModal: false,\n      openBackDrop: false,\n      snackBar: false,\n      alertBar: false,\n      snackBarMessage: \"\",\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"App mounted\");\n    this.setState(\n      {\n        openWelcomeAlert: true,\n        openPermissionDeniedAlert: false,\n      },\n      () => this.prepareHospitalData()\n    );\n    // createHospitalProfile();\n  }\n\n  componentWillUnmount() {\n    navigator.geolocation.clearWatch(this.geoLocationMove);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.showLocation != this.props.showLocation) {\n      this.handleCloseWelcomeAlert();\n    }\n    if (this.loc_cordChangeFlag != this.props.userCordChangeFlag) {\n      console.log(\"inside app update\");\n      this.loc_cordChangeFlag = !this.props.userCordChangeFlag;\n      this.getLocationWhenCordsChangedByUser();\n      this.props.setuserCordsFlag(this.loc_cordChangeFlag);\n    }\n    console.log(\"prevProps\" + prevProps);\n    console.log(\"CurrentProps\" + this.props);\n    if (prevProps.commuteFlag != this.props.commuteFlag) {\n      ++this.locChangeAlertCount;\n      console.log(\"locChangeAlertCount====================================\" + this.locChangeAlertCount);\n      if (this.props.commuteFlag != undefined && !this.props.commuteFlag && this.geoLocationMove != null) {\n        navigator.geolocation.clearWatch(this.geoLocationMove);\n      }\n      this.getLocationTrack();\n    }\n  }\n\n  prepareHospitalData = () => {\n    CommunicatorFetch(ApiUrls.getHospitalCodes)\n      .then((data) => {\n        let tempArr = data.filter((elem) => Object.keys(elem).length >= 4).filter((el) => el[\"vacant\"] != 0 && typeof el[\"vacant\"] !== \"string\");\n        this.hospitalList = Object.assign([], tempArr);\n      })\n      .then(() => getHospitalProfileAll())\n      .then((data) => {\n        this.arrangeHospitalKeyMap(data);\n      });\n  };\n\n  arrangeHospitalKeyMap(data) {\n    let hospitalDetailsData = data;\n    let tempDup = {};\n    let tempMap = {};\n    for (let i = 0, j = this.hospitalList.length - 1; i <= this.hospitalList.length / 2, j >= this.hospitalList.length / 2; i++, j--) {\n      if (tempMap[this.hospitalList[i][\"district\"]]) {\n        if (tempMap[this.hospitalList[i][\"district\"]].find((el) => el[\"name\"] == this.hospitalList[i][\"name\"]) == undefined) {\n          tempMap[this.hospitalList[i][\"district\"]].push({\n            h_name: this.hospitalList[i][\"name\"],\n            c_bed: this.hospitalList[i][\"vacant\"],\n            h_zone: this.hospitalList[i][\"district\"],\n            h_loc: hospitalDetailsData[this.hospitalList[i][\"name\"]] ? (hospitalDetailsData[this.hospitalList[i][\"name\"]][\"geometry\"] ? hospitalDetailsData[this.hospitalList[i][\"name\"]][\"geometry\"][\"location\"] : \"\") : \"\",\n            h_dist: \"\",\n          });\n        }\n      } else {\n        tempMap[this.hospitalList[i][\"district\"]] = [\n          {\n            h_name: this.hospitalList[i][\"name\"],\n            c_bed: this.hospitalList[i][\"vacant\"],\n            h_zone: this.hospitalList[i][\"district\"],\n            h_loc: hospitalDetailsData[this.hospitalList[i][\"name\"]] ? (hospitalDetailsData[this.hospitalList[i][\"name\"]][\"geometry\"] ? hospitalDetailsData[this.hospitalList[i][\"name\"]][\"geometry\"][\"location\"] : \"\") : \"\",\n            h_dist: \"\",\n          },\n        ];\n      }\n\n      if (tempMap[this.hospitalList[j][\"district\"]]) {\n        if (tempMap[this.hospitalList[j][\"district\"]].find((el) => el[\"name\"] == this.hospitalList[j][\"name\"]) == undefined) {\n          tempMap[this.hospitalList[j][\"district\"]].push({\n            h_name: this.hospitalList[j][\"name\"],\n            c_bed: this.hospitalList[j][\"vacant\"],\n            h_zone: this.hospitalList[j][\"district\"],\n            h_loc: hospitalDetailsData[this.hospitalList[j][\"name\"]] ? (hospitalDetailsData[this.hospitalList[j][\"name\"]][\"geometry\"] ? hospitalDetailsData[this.hospitalList[j][\"name\"]][\"geometry\"][\"location\"] : \"\") : \"\",\n            h_dist: \"\",\n          });\n        }\n      } else {\n        tempMap[this.hospitalList[j][\"district\"]] = [\n          {\n            h_name: this.hospitalList[j][\"name\"],\n            c_bed: this.hospitalList[j][\"vacant\"],\n            h_zone: this.hospitalList[j][\"district\"],\n            h_loc: hospitalDetailsData[this.hospitalList[j][\"name\"]] ? (hospitalDetailsData[this.hospitalList[j][\"name\"]][\"geometry\"] ? hospitalDetailsData[this.hospitalList[j][\"name\"]][\"geometry\"][\"location\"] : \"\") : \"\",\n            h_dist: \"\",\n          },\n        ];\n      }\n    }\n    //Fix for 24-parganas\n    tempMap[\"North 24 Parganas\"] = Object.assign([], tempMap[\"N-24 Pgs\"].concat(tempMap[\"North 24 Pgs\"]));\n    delete tempMap[\"N-24 Pgs\"];\n    delete tempMap[\"North 24 Pgs\"];\n    tempMap[\"North 24 Parganas\"].forEach((elm) => (elm[\"h_zone\"] = \"North 24 Parganas\"));\n\n    this.props.setTotalHospitalDetails(tempMap);\n    this.props.setRawHospitalData(data);\n  }\n\n  getLocationWhenCordsChangedByUser = () => {\n    this.setState(\n      {\n        openBackDrop: true,\n      },\n      () => this.getFormattedAddress(this.props.userCords[0], this.props.userCords[1])\n    );\n  };\n\n  getLocationTrack = () => {\n    if (navigator.geolocation) {\n      if (this.props.commuteFlag) {\n        /* if (this.geoLocationStatic != null) {\n          navigator.geolocation.clearWatch(this.geoLocationStatic);\n        } */\n\n        this.geoLocationMove = navigator.geolocation.watchPosition(\n          //watchPosition(  // need to implement getPosition logic with timeout for movement\n          (pos) => {\n            if (this.loc_locationCoordinates_lat != pos.coords.latitude && this.loc_locationCoordinates_long != pos.coords.longitude) {\n              this.setState({\n                alertBar: true,\n              });\n              console.log(pos.coords.latitude);\n              console.log(pos.coords.longitude);\n              this.getFormattedAddress(pos.coords.latitude, pos.coords.longitude);\n            } else {\n              this.setState({\n                openBackDrop: false,\n              });\n            }\n          },\n          (error) => {\n            //ifgeolocation failed\n            if (error.message == \"Timeout expired\") {\n              this.handleBackDropClose();\n              this.errorBodyMessage = \"Geo location timed out\";\n              this.setState(\n                {\n                  viewErrorModal: true,\n                },\n                () => this.getLocationTrack()\n              );\n\n              //temporary for DEV\n              //this.getFormattedAddress(22.5815353, 88.466984);\n            } else {\n              //show pop up if denied\n              this.handleBackDropClose();\n              this.setState({\n                openPermissionDeniedAlert: true,\n              });\n\n              this.props.setLocationModal(true);\n            }\n          },\n          {\n            timeout: 10000,\n            maximumAge: 10000,\n            enableHighAccuracy: true,\n          }\n        );\n      } else {\n        /* if (this.geoLocationMove != null) {\n          navigator.geolocation.clearWatch(this.geoLocationMove);\n        } */\n        navigator.geolocation.getCurrentPosition(\n          //watchPosition(  // need to implement getPosition logic with timeout for movement\n          (pos) => {\n            if (this.loc_locationCoordinates_lat != pos.coords.latitude && this.loc_locationCoordinates_long != pos.coords.longitude) {\n              if (this.locChangeAlertCount > 1) {\n                this.setState({\n                  alertBar: true,\n                });\n              }\n\n              console.log(pos.coords.latitude);\n              console.log(pos.coords.longitude);\n              this.getFormattedAddress(pos.coords.latitude, pos.coords.longitude);\n            } else {\n              this.setState({\n                openBackDrop: false,\n              });\n            }\n          },\n          (error) => {\n            //ifgeolocation failed\n            if (error.message == \"Timeout expired\") {\n              this.handleBackDropClose();\n              this.errorBodyMessage = \"Geo location timed out\";\n              this.setState(\n                {\n                  viewErrorModal: true,\n                },\n                () => this.getLocationTrack()\n              );\n\n              //temporary for DEV\n              //this.getFormattedAddress(22.5815353, 88.466984);\n            } else {\n              //show pop up if denied\n              this.handleBackDropClose();\n              this.setState({\n                openPermissionDeniedAlert: true,\n              });\n\n              this.props.setLocationModal(true);\n            }\n          }\n        );\n      }\n    }\n  };\n\n  getFormattedAddress = (lat, long) => {\n    this.loc_locationCoordinates_lat = lat; //for local check\n    this.loc_locationCoordinates_long = long; //for local check\n    CommunicatorFetch(ApiUrls.getUserCurrentLocation, lat + \",\" + long).then(\n      (data) => {\n        if (data.results.length != 0) {\n          this.props.setFormattedAddress(data.results[0].formatted_address);\n          this.props.setUserCords([data.results[0].geometry.location.lat, data.results[0].geometry.location.lng]);\n          this.props.setAddressComponents(data.results[0].address_components);\n\n          this.setState({\n            openBackDrop: false,\n          });\n        } else {\n          // Google denied Map, hence need to show proper error messages\n          if (env == \"prod\") {\n            this.errorBodyMessage = \"Well, it seems Google MAP API is denied at the moment. This is something unusual. Please refresh the page or try again in sometime.\";\n            this.setState(\n              {\n                openBackDrop: false,\n                viewErrorModal: true,\n              },\n              () => this.props.setUserCords([lat, long])\n            );\n          }\n          //current implementation for DEV purposes start\n          else if (env == \"dev\") {\n            let data = dummyLoc;\n            this.props.setFormattedAddress(data.results[0].formatted_address);\n\n            this.props.setAddressComponents(data.results[0].address_components);\n            this.props.setUserCords([data.results[0].geometry.location.lat, data.results[0].geometry.location.lng]);\n            this.setState({\n              openBackDrop: false,\n            });\n          }\n\n          //current implementation for DEV purposes end\n        }\n      },\n      (error) => {\n        // Google Web api failed, hence need to show proper error messages\n        if (env == \"prod\") {\n          this.errorBodyMessage = \"Well, it seems Google MAP API failed at the moment. This is something unusual. Please refresh the page or try again in sometime.\";\n          this.setState(\n            {\n              openBackDrop: false,\n              viewErrorModal: true,\n            }\n            //() => this.getFormattedAddress(lat, long)\n          );\n        }\n        //current implementation for DEV purposesstart\n        else if (env == \"dev\") {\n          let data = dummyLoc;\n          this.props.setFormattedAddress(data.results[0].formatted_address);\n          this.props.setUserCords([data.results[0].geometry.location.lat, data.results[0].geometry.location.lng]);\n          this.props.setAddressComponents(data.results[0].address_components);\n\n          this.setState({\n            openBackDrop: false,\n          });\n        }\n\n        //current implementation for DEV purposes end\n      }\n    );\n  };\n\n  TransitionDown = (props) => {\n    return <Slide {...props} direction='down' />;\n  };\n\n  searchGoogleForUserDetails = (el) => {\n    let searchText = \"\" + el.locality + \",\" + el.district + \",\" + el.pin + \",West Bengal,India\";\n    let params = searchText + \"&inputtype=textquery&fields=formatted_address,geometry\";\n    let googleFetchCall;\n    if (this.proxyNeedFlag) {\n      googleFetchCall = CommunicatorFetch(ApiUrls.getPlaceDetails, params, \"proxyNeeded\");\n    } else {\n      googleFetchCall = CommunicatorFetch(ApiUrls.getPlaceDetails, params);\n    }\n\n    googleFetchCall.then(\n      (data) => {\n        if (data[\"candidates\"].length != 0) {\n          this.props.setUserCords([data[\"candidates\"][0].geometry.location.lat, data[\"candidates\"][0].geometry.location.lng]);\n\n          //make custom address componnets\n          let address_components = [];\n          let tempAddr = data[\"candidates\"][0][\"formatted_address\"].split(\",\");\n          tempAddr.pop();\n\n          tempAddr = tempAddr.forEach((elem) => {\n            address_components.push({\n              long_name: elem.trim(),\n              short_name: elem.trim(),\n              types: [\"political\", \"sublocality\", \"sublocality_level_1\"],\n            });\n          });\n\n          this.props.setFormattedAddress(data[\"candidates\"][0][\"formatted_address\"]);\n          this.props.setAddressComponents(address_components);\n\n          this.setState({\n            openBackDrop: false,\n          });\n        } else {\n          //show pop up for google denial\n          ++this.googleFetchTryCount;\n          if (this.googleFetchTryCount == 1) {\n            this.proxyNeedFlag = true;\n            this.searchGoogleForUserDetails(el);\n          }\n\n          if (this.googleFetchTryCount > 1) {\n            this.googleFetchTryCount = 0;\n            this.proxyNeedFlag = false;\n\n            //custom create address_format\n\n            let address_components = [];\n            let tempAddr = el.locality.split(\" \");\n            tempAddr.push(el.district);\n            tempAddr = tempAddr.forEach((elem) => {\n              address_components.push({\n                long_name: elem.trim(),\n                short_name: elem.trim(),\n                types: [\"political\", \"sublocality\", \"sublocality_level_1\"],\n              });\n            });\n            let tmmpAddr = el.locality + \",\" + el.district + \", pin -\" + el.pin;\n\n            this.props.setUserCords([22.5726, 88.3639]);\n            this.props.setFormattedAddress(tmmpAddr);\n            this.props.setAddressComponents(address_components);\n\n            this.setState({\n              openBackDrop: false,\n              snackBar: true,\n              snackBarMessage: \"The location obtained seems a non-valid address or a place outside West Bengal.Since currently we are supporting only within West Bengal, hence your default area is set as Kolkata.\",\n            });\n          }\n        }\n      },\n      (error) => {\n        //show pop up for google denial\n        ++this.googleFetchTryCount;\n        if (this.googleFetchTryCount == 1) {\n          this.proxyNeedFlag = true;\n          this.searchGoogleForUserDetails(el);\n        }\n        if (this.googleFetchTryCount > 1) {\n          this.googleFetchTryCount = 0;\n          this.proxyNeedFlag = false;\n\n          //custom create address_format\n          let address_components = [];\n          let tempAddr = el.locality.split(\" \");\n          tempAddr.push(el.district);\n          tempAddr = tempAddr.forEach((elem) => {\n            address_components.push({\n              long_name: elem.trim(),\n              short_name: elem.trim(),\n              types: [\"political\", \"sublocality\", \"sublocality_level_1\"],\n            });\n          });\n\n          let tmmpAddr = el.locality + \",\" + el.district + \", pin -\" + el.pin;\n\n          this.props.setUserCords([22.5726, 88.3639]);\n          this.props.setFormattedAddress(tmmpAddr);\n          this.props.setAddressComponents(address_components);\n\n          this.setState({\n            openBackDrop: false,\n            snackBar: true,\n            snackBarMessage: \"The location obtained seems a non-valid address or a place outside West Bengal.Since currently we are supporting only within West Bengal, hence your default area is set as Kolkata.\",\n          });\n        }\n      }\n    );\n  };\n\n  handleErrorClose = () => {\n    this.setState(\n      {\n        viewErrorModal: false,\n      },\n      () => window.location.reload()\n    );\n  };\n  handleCloseWelcomeAlert = (el) => {\n    this.setState(\n      {\n        openWelcomeAlert: false,\n        openBackDrop: true,\n      },\n\n      () => this.getLocationTrack()\n    );\n  };\n\n  handleBackDropClose = () => {\n    this.setState({\n      openBackDrop: false,\n    });\n  };\n  handleCloseLocationOptionAlert = (el) => {\n    this.props.setLocationModal(false);\n    this.setState(\n      {\n        openBackDrop: true,\n      },\n      () => {\n        if (el.locality == \"\" && el.district == \"\" && el.pin == \"\") {\n          this.getLocationTrack();\n        } else {\n          this.searchGoogleForUserDetails(el);\n        }\n      }\n    );\n  };\n\n  handleCloseSnackBar = () => {\n    this.setState({\n      snackBar: false,\n    });\n  };\n  handleAlertClose = () => {\n    this.setState({\n      alertBar: false,\n    });\n  };\n  render() {\n    console.log(\"App Component rendered\");\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Header />\n        <Container maxWidth='md' className='containerApp'>\n          <Location />\n          <Hospital />\n          <BackDropDefault open={this.state.openBackDrop} />\n          <Snackbar\n            open={this.state.snackBar}\n            autoHideDuration={10000}\n            TransitionComponent={this.TransitionDown}\n            message={this.state.snackBarMessage}\n            key={Fade}\n            action={\n              <React.Fragment>\n                <IconButton size='small' aria-label='close' color='inherit' onClick={() => this.handleCloseSnackBar()}>\n                  <CloseIcon fontSize='small' />\n                </IconButton>\n              </React.Fragment>\n            }\n          />\n          <SideAlert open={this.state.alertBar} handleAlertClose={() => this.handleAlertClose()} />\n        </Container>\n\n        {!this.state.openBackDrop ? <Footer /> : null}\n        {/*  <WelcomeModal open={this.state.openWelcomeAlert} onClose={(el) => this.handleCloseWelcomeAlert(el)} /> */}\n        <LocationOptionInput open={this.props.locationModal} onClose={(el) => this.handleCloseLocationOptionAlert(el)} />\n        <ErrorModal open={this.state.viewErrorModal} onclose={() => this.handleErrorClose()} body={this.errorBodyMessage} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locationModal: state.locationModal.locationModalOpen,\n  userCords: state.userCords.userCords,\n  userCordChangeFlag: state.userCordChangeFlag.cordChangeFlag,\n  commuteFlag: state.commmuteFlag.commuteFlag,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setTotalHospitalDetails: (hospitalDetails) => dispatch(setTotalHospitalDetails(hospitalDetails)),\n  setAddressComponents: (addressComponents) => dispatch(setAddressComponents(addressComponents)),\n  setFormattedAddress: (formattedAddress) => dispatch(setFormattedAddress(formattedAddress)),\n  setUserCords: (userCords) => dispatch(setUserCords(userCords)),\n  setRawHospitalData: (rawHospitalData) => dispatch(setRawHospitalData(rawHospitalData)),\n  setLocationModal: (locationModal) => dispatch(setLocationModal(locationModal)),\n  setuserCordsFlag: (flag) => dispatch(setCordChangeFlag(flag)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const setTotalHospitalDetails = (totalHospitalDetails) => ({\r\n  type: \"SET_TOTAL_HOSPITAL_DETAIL\",\r\n  payload: totalHospitalDetails,\r\n});\r\n","export const setAddressComponents = (addressComponents) => ({\r\n  type: \"SET_ADDRESS_COMPONENTS\",\r\n  payload: addressComponents,\r\n});\r\n","export const setFormattedAddress = (formatedAddress) => ({\r\n  type: \"SET_FORMATTED_ADDRESS\",\r\n  payload: formatedAddress,\r\n});\r\n","import React from \"react\";\r\nimport WelcomeModal from \"./Modals/WelcomeModal/WelcomeModal.component\";\r\nimport App from \"./App\";\r\n\r\nclass Bootbase extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      openWelcomeAlert: false,\r\n      enableAppModule: false,\r\n      showLocation: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      enableAppModule: true,\r\n      openWelcomeAlert: true,\r\n    });\r\n  }\r\n\r\n  handleCloseWelcomeAlert = (el) => {\r\n    this.setState({\r\n      showLocation: true,\r\n      openWelcomeAlert: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.enableAppModule ? <App showLocation={this.state.showLocation} /> : null}\r\n        <WelcomeModal open={this.state.openWelcomeAlert} onClose={(el) => this.handleCloseWelcomeAlert(el)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Bootbase;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const INITIAL_STATE = {\r\n  selectedHospital: null,\r\n};\r\n\r\nconst selectedHospitalReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SELECTED_HOSPITAL_LIST\": {\r\n      return {\r\n        ...state,\r\n        selectedHospital: Object.assign([], action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default selectedHospitalReducer;\r\n","const INITIAL_STATE = {\r\n  totalHospitalDetails: null,\r\n};\r\n\r\nconst totalHospitalDetailReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_TOTAL_HOSPITAL_DETAIL\": {\r\n      return {\r\n        ...state,\r\n        totalHospitalDetails: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default totalHospitalDetailReducer;\r\n","const INITIAL_STATE = {\r\n  addressComponents: null,\r\n};\r\n\r\nconst addressComponentsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_ADDRESS_COMPONENTS\": {\r\n      return {\r\n        ...state,\r\n        addressComponents: Object.assign([], action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default addressComponentsReducer;\r\n","const INITIAL_STATE = {\r\n  formattedAddress: null,\r\n};\r\n\r\nconst formattedAddressReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_FORMATTED_ADDRESS\": {\r\n      return {\r\n        ...state,\r\n        formattedAddress: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default formattedAddressReducer;\r\n","const INITIAL_STATE = {\r\n  locationTags: null,\r\n};\r\n\r\nconst locationTagsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_LOCATION_TAGS\": {\r\n      return {\r\n        ...state,\r\n        locationTags: Object.assign([], action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default locationTagsReducer;\r\n","const INITIAL_STATE = {\r\n  userCords: null,\r\n};\r\n\r\nconst userCordsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER_CORDS\": {\r\n      return {\r\n        ...state,\r\n        userCords: Object.assign([], action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userCordsReducer;\r\n","const INITIAL_STATE = {\r\n  selectedHospitalZoneTags: null,\r\n};\r\n\r\nconst selectedHospitalZoneTagsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SELECTED_HOSPITAL_ZONE_TAGS\": {\r\n      return {\r\n        ...state,\r\n        selectedHospitalZoneTags: Object.assign([], action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default selectedHospitalZoneTagsReducer;\r\n","const INITIAL_STATE = {\r\n  rawHospitalData: null,\r\n};\r\n\r\nconst rawHospitalDataReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_RAW_HOSPITAL_DATA\": {\r\n      return {\r\n        ...state,\r\n        rawHospitalData: Object.assign({}, action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rawHospitalDataReducer;\r\n","const INITIAL_STATE = {\r\n  searchText: null,\r\n};\r\n\r\nconst searchReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SEARCH_TEXT\": {\r\n      return {\r\n        ...state,\r\n        searchText: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","const INITIAL_STATE = {\r\n  locationModalOpen: false,\r\n};\r\n\r\nconst locationInputReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_LOCATION_MODAL\": {\r\n      return {\r\n        ...state,\r\n        locationModalOpen: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default locationInputReducer;\r\n","const INITIAL_STATE = {\r\n  cordChangeFlag: null,\r\n};\r\n\r\nconst cordChangeFlagReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_CORD_CHANGE\": {\r\n      return {\r\n        ...state,\r\n        cordChangeFlag: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cordChangeFlagReducer;\r\n","const INITIAL_STATE = {\r\n  commuteFlag: false,\r\n};\r\n\r\nconst commuteFlagReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_COMMUTE_FLAG\": {\r\n      return {\r\n        ...state,\r\n        commuteFlag: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default commuteFlagReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport selectedHospitalReducer from \"./selectedHospital/selectedHospital.reducer\";\r\nimport totalHospitalDetailReducer from \"./totalHospitalDetails/totalHospital.reducer\";\r\nimport addressComponentsReducer from \"./userAddress/addressComponents.reducer\";\r\nimport formattedAddressReducer from \"./userAddress/formattedAddress.reducer\";\r\nimport locationTagsReducer from \"./userAddress/locationTags.reducer\";\r\nimport userCordsReducer from \"./userAddress/userCords.reducer\";\r\nimport selectedHospitalZoneTagsReducer from \"./selectedHospital/selectedHospitalZoneTags.reducer\";\r\nimport rawHospitalDataReducer from \"./totalHospitalDetails/rawHospitalData.reducer\";\r\nimport searchReducer from \"./search/search.reducer\";\r\nimport locationInputReducer from \"./locationInput/locationInput.reducer\";\r\nimport cordChangeFlagReducer from \"./userAddress/cordChangeFlag.reducer\";\r\nimport commuteFlagReducer from \"./userAddress/commuteFlag.reducer\";\r\n\r\nexport default combineReducers({\r\n  selectedHospitalList: selectedHospitalReducer,\r\n  totalHospitalDetails: totalHospitalDetailReducer,\r\n  addressComponents: addressComponentsReducer,\r\n  formattedAddress: formattedAddressReducer,\r\n  locationTags: locationTagsReducer,\r\n  userCords: userCordsReducer,\r\n  selectedHospitalZoneTags: selectedHospitalZoneTagsReducer,\r\n  rawHospitalData: rawHospitalDataReducer,\r\n  searchText: searchReducer,\r\n  locationModal: locationInputReducer,\r\n  userCordChangeFlag: cordChangeFlagReducer,\r\n  commmuteFlag: commuteFlagReducer,\r\n});\r\n","import { creatStore, applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\n\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n//import App from \"./App\";\nimport Bootbase from \"./BootBase\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <App /> */}\n      <Bootbase />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}