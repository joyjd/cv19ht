{"version":3,"sources":["Modals/WelcomeModal/WelcomeModal.component.jsx","Utils/BackDropDefault/BackDropOrg.component.jsx","Components/ContactMe/ContactMe.component.jsx","Components/Header/Header.component.jsx","Components/Footer/Footer.component.jsx","Components/Location/AddressDisplay/AddressDisplay.component.jsx","Utils/GoogleCredentials.js","redux/userAddress/userCords.action.js","redux/userAddress/cordChangeFlag.action.js","Components/Common/MapsDisplay/google-maps.component.jsx","Components/Common/MapsDisplay/MapsDisplay.component.jsx","Components/Common/TagsDisplay/TagsDisplay.component.jsx","redux/locationInput/locationInput.action.js","Components/Ambulance/DisplayAmbulance/DisplayAmbulanceModal.component.jsx","Utils/Communicator/Communicator.component.js","Utils/ApiUrls.data.js","Components/Ambulance/DisplayCoronaDetails/DisplayCoronaModal.component.jsx","Components/Ambulance/Ambulance.component.jsx","Components/Location/SelectedHospitalSnapShot/SelectedHospitalSnapShot.component.jsx","Components/Location/Location.component.jsx","redux/userAddress/locationTags.action.js","Components/Hospital/HospitalCountDisplay.component.jsx","redux/selectedHospital/selectedHospital.action.js","redux/search/search.action.js","Utils/Sort.component.js","Components/Hospital/SearchBox/SearchBox.component.jsx","redux/selectedHospital/selectedHospitalZoneTags.action.js","Components/Hospital/FilterDisplay/FilterModal/FilterAreaTags.component.jsx","Components/Hospital/FilterDisplay/FilterDisplay.component.jsx","Components/Hospital/SortDisplay/SortModal/SortModal.component.jsx","Components/Hospital/SortDisplay/SortDisplay.component.jsx","Components/Hospital/HostiptalZoneCountDisplay.component.jsx","Components/Hospital/HospitalListDisplay/HospitalItem/HospitalItem.component.jsx","Modals/HospitalDetailsModal/RoadDirectionHospital/gmapIframe.component.jsx","Modals/HospitalDetailsModal/HospitalModalDetailTemplate.component.jsx","Components/Hospital/HospitalListDisplay/HospitalListModal/HospitalListModal.component.js","Utils/BackDropCustom/BackDropCustom.component.jsx","firebase/firebase.util.js","Modals/ErrorModal/ErrorModal.component.jsx","redux/totalHospitalDetails/rawHospitalData.action.js","Components/Hospital/HospitalListDisplay/HospitalDisplay.component.jsx","Components/Hospital/Hospital.component.jsx","Modals/AddressDetailModal/LocationOptionInput.component.jsx","App.js","redux/totalHospitalDetails/totalHospital.action.js","redux/userAddress/addressComponents.action.js","redux/userAddress/formattedAddress.action.js","BootBase.js","serviceWorker.js","redux/selectedHospital/selectedHospital.reducer.js","redux/totalHospitalDetails/totalHospital.reducer.js","redux/userAddress/addressComponents.reducer.js","redux/userAddress/formattedAddress.reducer.js","redux/userAddress/locationTags.reducer.js","redux/userAddress/userCords.reducer.js","redux/selectedHospital/selectedHospitalZoneTags.reducer.js","redux/totalHospitalDetails/rawHospitalData.reducer.js","redux/search/search.reducer.js","redux/locationInput/locationInput.reducer.js","redux/userAddress/cordChangeFlag.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["WelcomeModal","props","id","Dialog","fullWidth","open","style","backgroundColor","color","PaperProps","borderRadius","top","onClose","handleAlertClose","aria-labelledby","aria-describedby","DialogContent","paddingLeft","paddingRight","className","DialogActions","Button","onClick","variant","BackDropDefault","Backdrop","zIndex","opacity","CircularProgress","LinearProgress","ContactMe","handleSubmit","event","state","name","feedback","setState","errorMessage","sendFeedback","message_html","from_name","reply_to","email","closeModal","snkBar","handleChange","bind","type","this","target","value","templateId","variables","window","emailjs","send","then","res","catch","err","fullScreen","onclose","Container","maxWidth","padding","fontSize","onChange","e","placeholder","required","rows","cols","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","React","Component","Header","openContactMe","contactMe","closeContactMe","AppBar","position","display","justifyContent","Typography","gutterBottom","IconButton","aria-label","Footer","BottomNavigation","showLabels","connect","formattedAddress","GoogleCredentials","apiKey","setUserCords","userCords","payload","setCordChangeFlag","cordChangeFlag","containerStyle","width","height","GoogleMaps","onMarkerDragEnd","coord","draggable","latLng","lat","lng","setuserCordsFlag","key","Date","getTime","google","zoom","initialCenter","currentLat","currentLong","title","onDragend","t","map","dispatch","flag","GoogleApiWrapper","Paper","locationTags","selectedHospitalZoneTags","tagtype","elem","index","setLocationModal","locationModal","Iframe","dangerouslySetInnerHTML","__html","iframe","pin","addressComponents","Divider","length","CommunicatorFetch","urlName","params","proxyNeed","url","console","log","undefined","fetch","response","json","ApiUrls","getUserCurrentLocation","getPlaceDetails","getHospitalCompleteDetails","getCoronaUpdate","getHospitalCodes","getHospitalDetails","StyledTableCell","withStyles","theme","head","palette","common","white","body","TableCell","StyledTableRow","root","TableRow","useStyles","makeStyles","table","background","boxShadow","margin","DisplayCoronaDetails","classes","c_data","TableContainer","component","Table","TableHead","align","TableBody","Object","keys","el","Ambulance","totalData","getCoronaDetails","APiUrls","data","infected","recovered","dead","forEach","dst_name","deceased","error","handleScroll","scrollY","leftPosition","myRef","current","scrollTop","offsetTop","myRef2","left","ambulanceTravelNode","classList","add","remove","handleCloseAmbulanceModal","displayambulance","openAmbulanceModal","openCoronaModal","displayCorona","closeCoronaModal","createRef","addEventListener","ref","onScroll","SelectedHospitalSnapShot","nextProps","nextState","searchText","selectedHospitalList","JSON","stringify","loc","h_loc","h_name","selectedHospital","exclusiveKeywords","Location","renderCount","prepareLocationTags","finalTags","filter","dataElem","types","some","includes","setLocationTags","Set","handleOpenLocationModal","prevProps","prevState","elevation","fontWeight","letterSpacing","textTransform","size","setSelectedHospitalList","setSearchText","customSort","hospitalList","temp","sort","a","b","Number","lastIndex","remArr","hospital","splice","concat","capitalletter","str","i","x","split","toUpperCase","substr","join","SearchBox","org_selectedHospital","prepareSearchEngine","tempResult","hospitalDetails","push","completeHospitalData","searchEngine","getSearchResults","finalKeys","finalResult","ob","toLowerCase","hptl","hosp","setSelectedlList","preparePostSearchSelectedZoneHospitalList","tempHptlList","selectedHospitalLocationTags","handleSearchEngine","trim","TextField","label","totalHospitalDetails","rawHospitalData","search","setSelectedHospitalZoneTags","FilterTags","loc_selectedTags","loc_leftTags","updateLocateStates","selectedTags","leftTags","handleCancel","handleFilterChange","findIndex","handleDelete","prevprops","Chip","onDelete","deleteIcon","FilterDisplay","handleCloseAreaTags","opt","areaTagsOption","handleOpenAreaTags","selectedZoneTags","SortModal","useState","initialVal","setValue","useTheme","useMediaQuery","breakpoints","down","RadioGroup","handleRadioChange","FormControlLabel","control","Radio","SortDisplay","sortOptions","sortData","handleSwitchChange","val","handleOpenFilter","openFilteralert","handleCloseAlert","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","scope","textDecoration","format","geolib","latitude","longitude","Fab","hospitalCord","smallGreen","spacing","green","HospitalModalDetailTemplate","rating","Avatar","c_bed","Box","fontStyle","m","formatted_address","href","formatted_phone_number","international_phone_number","website","geometry","location","h_dist","reviews","rv","Card","CardHeader","avatar","src","profile_photo_url","author_name","subheader","relative_time_description","CardContent","text","HospitalListModal","handleClose","headerTitle","autoFocus","BackDropCustom","createHospitalProfile","h_data","hospRef","firestore","doc","get","exists","set","getHospitalProfileAll","firebase","collection","snapshot","initializeApp","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ErrorModal","BackdropProps","setRawHospitalData","HospitalListDisplay","proxyNeedFlagFirstCall","proxyNeedFlagSecondCall","googleFetchTryCountFirstCall","googleFetchTryCountSecondCall","errorBodyMessage","modalContent","createHospitalDetailModayBody","tempHtml","handleOpenModal","openModal","openZoneBackDrop","handleHospitalDetailsPre","h_zone","handleHospitalDetails","viewErrorModal","prms","handleCloseModal","handleErrorClose","CardMedia","Hospital","loc_selectedHospitalCount","pendingChange","prepareSelectedZoneHospitalList","hospitalZoneTags","loc_hospitalZoneTags","square","LocationOptionInput","handleInputChange","nam","locality","district","country","multiline","defaultValue","InputProps","readOnly","App","proxyNeedFlag","googleFetchTryCount","loc_locationCoordinates_lat","loc_locationCoordinates_long","loc_cordChangeFlag","prepareHospitalData","tempArr","assign","arrangeHospitalKeyMap","getLocationWhenCordsChangedByUser","openBackDrop","getFormattedAddress","getLocationTrack","navigator","geolocation","getCurrentPosition","pos","coords","handleBackDropClose","openPermissionDeniedAlert","long","results","setFormattedAddress","setAddressComponents","address_components","TransitionDown","Slide","direction","searchGoogleForUserDetails","tempAddr","pop","long_name","short_name","tmmpAddr","snackBar","snackBarMessage","reload","handleCloseWelcomeAlert","openWelcomeAlert","handleCloseLocationOptionAlert","handleCloseSnackBar","showLocation","userCordChangeFlag","hospitalDetailsData","tempMap","j","find","elm","setTotalHospitalDetails","Fragment","CssBaseline","TransitionComponent","Fade","action","locationModalOpen","Bootbase","enableAppModule","Boolean","hostname","match","INITIAL_STATE","selectedHospitalReducer","totalHospitalDetailReducer","addressComponentsReducer","formattedAddressReducer","locationTagsReducer","userCordsReducer","selectedHospitalZoneTagsReducer","rawHospitalDataReducer","searchReducer","locationInputReducer","cordChangeFlagReducer","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56d13f0e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./../WelcomeModal/WelcomeModal.style.scss\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function WelcomeModal(props) {\r\n  return (\r\n    <div id='welcomeDialogue'>\r\n      <Dialog\r\n        fullWidth={true}\r\n        open={props.open}\r\n        style={{\r\n          backgroundColor: \"#5264ca\",\r\n          color: \"white\",\r\n        }}\r\n        PaperProps={{\r\n          style: {\r\n            borderRadius: \"5px\",\r\n            top: \"30px\",\r\n          },\r\n        }}\r\n        onClose={props.handleAlertClose}\r\n        aria-labelledby='alert-dialog-title'\r\n        aria-describedby='alert-dialog-description'\r\n      >\r\n        <DialogContent style={{ backgroundColor: \"#3b87ff\", paddingLeft: \"5px\", paddingRight: \"5px\" }} id='welcomeContent'>\r\n          <div className='headerImageContainer'>\r\n            <div className='headerImageHolder'></div>\r\n            <div className='animatorTest'>\r\n              <div className='headerImageFiller'>\r\n                <div className='headerImageFillerInner'></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='welcomeNote'> Hello !</div>\r\n          </div>\r\n          <div className='welcomeContent'>\r\n            <div className='welcomeBodyContent'>\r\n              <div className='div_0'>\r\n                <strong>Lets Stand Strong Together. </strong>\r\n              </div>\r\n              <div className='div_1'>\r\n                <strong>\r\n                  <span className='NameHolder'>COVID19 HospitalTracker</span>\r\n                </strong>\r\n                is a mobile-friendly web app designed specifically to help you tackle the tough times of COVID19.\r\n                <br />\r\n                <br />\r\n                This web-app helps you in tracking hospitals providing care for COVID19 patients based on your location.\r\n              </div>\r\n              <br />\r\n              <div className='div_2'> To aid you in the best way,enable permission to access your device location when prompted.</div>\r\n              Stay safe.\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions style={{ backgroundColor: \"#3b87ff\" }}>\r\n          <div className='btn_Container'>\r\n            <Button onClick={() => props.onClose(true)} color='primary' variant='contained'>\r\n              Proceed\r\n            </Button>\r\n          </div>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nexport const BackDropDefault = ({ open }) => {\r\n  return open ? (\r\n    <Backdrop open style={{ backgroundColor: \"#183259\", zIndex: \"1\", opacity: \"0.95\" }}>\r\n      <div className='loadTrackerWelcome'>\r\n        <div className='loaderContainer'>\r\n          <CircularProgress />\r\n        </div>\r\n        <div className='loaderTextContainer'>Please wait while we try to trace your current location..</div>\r\n        <LinearProgress />\r\n      </div>\r\n    </Backdrop>\r\n  ) : null;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport \"./../ContactMe/ContactMe.style.scss\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nexport default class ContactMe extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { feedback: \"\", name: \"\", email: \"joydas1611@gmail.com\", errorMessage: \"\", snkBar: false };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(event, type) {\r\n    if (type == \"feedbackDesc\") {\r\n      this.setState({ feedback: event.target.value });\r\n    } else {\r\n      this.setState({ name: event.target.value });\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    const templateId = \"template_lddOxOX0\";\r\n    if (this.state.name != \"\" && this.state.feedback != \"\") {\r\n      this.setState(\r\n        {\r\n          errorMessage: \"\",\r\n        },\r\n        () => this.sendFeedback(templateId, { message_html: this.state.feedback, from_name: this.state.name, reply_to: this.state.email })\r\n      );\r\n    } else if (this.state.name == \"\") {\r\n      this.setState({\r\n        errorMessage: \"Opps ! You missed out your name.\",\r\n      });\r\n    } else if (this.state.feedback == \"\") {\r\n      this.setState({\r\n        errorMessage: \"Please dont send me blank messages !\",\r\n      });\r\n    }\r\n  };\r\n  sendFeedback(templateId, variables) {\r\n    window.emailjs\r\n      .send(\"gmail\", templateId, variables)\r\n      .then((res) => {\r\n        this.setState({\r\n          errorMessage: \"\",\r\n          feedback: \"\",\r\n          name: \"\",\r\n          snkBar: true,\r\n        });\r\n      })\r\n      // Handle errors here however you like, or use a React error boundary\r\n      .catch((err) =>\r\n        this.setState({\r\n          errorMessage: \"Message sending failed.Please try again in sometime.\",\r\n        })\r\n      );\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState(\r\n      {\r\n        snkBar: false,\r\n        errorMessage: \"\",\r\n      },\r\n      () => this.props.onClose()\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog fullScreen open={this.props.open} onClose={this.props.onclose} aria-labelledby='Contact Me' aria-describedby='About Me'>\r\n          <div\r\n            className='bod_Skeleton'\r\n            style={{\r\n              backgroundColor: \"##ebecf0\",\r\n            }}\r\n          >\r\n            <DialogContent\r\n              style={{\r\n                backgroundColor: \"##ebecf0\",\r\n              }}\r\n            >\r\n              <Container maxWidth='xs' style={{ padding: \"0\" }}>\r\n                <div onClick={() => this.closeModal()}>\r\n                  <CloseIcon fontSize='large' />\r\n                </div>\r\n                <div className='bod_Container'>\r\n                  <div className='bod_ImageHolder'>\r\n                    <div className='div_Welcome'>\r\n                      <h2>Insights</h2>\r\n                    </div>\r\n                    <div className='div_avatar'>\r\n                      <div className='div_Avatar_ImgContainer'>\r\n                        <div className='avt_inner'></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='bod_FormHolder'>\r\n                    <div className='desContainer'>\r\n                      Hi! I am <strong>Joy</strong> and I develop web applications and websites as part of my livelihood. COVID19 HospitalTracker is a pet-project of mine and is intended as a giveaway to the community during tough times.\r\n                      <br />\r\n                      If you find it useful, drop a message to show your love and appreciation ! <br />\r\n                      <br />\r\n                      Cheers !\r\n                    </div>\r\n                    <div className='formContainer'>\r\n                      <label>\r\n                        <input id='userName' name='userName' onChange={(e) => this.handleChange(e, \"userName\")} type='text' placeholder='Your Name' required />\r\n                      </label>\r\n                      <label>\r\n                        <textarea id='feedbackDesc' name='feedbackDesc' onChange={(e) => this.handleChange(e, \"feedbackDesc\")} required value={this.state.feedback} placeholder='Your Message To Me...' rows='4' cols='35' />\r\n                      </label>\r\n                    </div>\r\n                    {this.state.errorMessage != \"\" ? <div className='errorHolder'>{this.state.errorMessage}</div> : null}\r\n                  </div>\r\n                  <div className='bod_ActionHolder'>\r\n                    <div className='btnContactMe' onClick={this.handleSubmit}>\r\n                      Send Message\r\n                    </div>\r\n                    <div className='btnContactMe' onClick={() => this.closeModal()}>\r\n                      No, maybe later\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Container>\r\n            </DialogContent>\r\n          </div>\r\n        </Dialog>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={this.state.snkBar}\r\n          autoHideDuration={2000}\r\n          message='Message delivered succesfully!'\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport ContactMe from \"./../ContactMe/ContactMe.component\";\r\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport \"./../Header/Header.style.scss\";\r\n\r\nexport class Header extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      contactMe: false,\r\n    };\r\n  }\r\n\r\n  openContactMe = () => {\r\n    this.setState({\r\n      contactMe: true,\r\n    });\r\n  };\r\n\r\n  closeContactMe = () => {\r\n    this.setState({\r\n      contactMe: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar position='static' className='Header'>\r\n          <Container maxWidth='md' style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div id='back-to-top-anchor'>\r\n              <Typography variant='h6' gutterBottom>\r\n                <span className='logoHolderText2 '>COVID19</span>\r\n                <span className='logoHolderText'>HospitalTracker</span>\r\n              </Typography>\r\n            </div>\r\n            <div onClick={() => this.openContactMe()}>\r\n              <IconButton aria-label='delete' style={{ padding: \"5px 0\", color: \"#00fff9\" }}>\r\n                <ContactMailIcon />\r\n              </IconButton>\r\n            </div>\r\n          </Container>\r\n        </AppBar>\r\n        <ContactMe open={this.state.contactMe} onClose={() => this.closeContactMe()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport \"./../Footer/Footer.style.scss\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\n\r\nimport ContactMe from \"./../ContactMe/ContactMe.component\";\r\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport class Footer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      contactMe: false,\r\n    };\r\n  }\r\n\r\n  openContactMe = () => {\r\n    this.setState({\r\n      contactMe: true,\r\n    });\r\n  };\r\n\r\n  closeContactMe = () => {\r\n    this.setState({\r\n      contactMe: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BottomNavigation showLabels className='Footer'>\r\n          <div className='cpDiv'>\r\n            <div>&copy; Copyright 2020, COVID19HospitalTracker.</div>\r\n            <div>All rights reserved.</div>\r\n          </div>\r\n          <div className='authorAvatar' onClick={() => this.openContactMe()}>\r\n            <IconButton aria-label='delete' style={{ padding: \"5px 0\", color: \"#00fff9\" }}>\r\n              <ContactMailIcon />\r\n            </IconButton>\r\n          </div>\r\n        </BottomNavigation>\r\n        <ContactMe open={this.state.contactMe} onClose={() => this.closeContactMe()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport PersonPinIcon from \"@material-ui/icons/PersonPin\";\r\n\r\nimport \"./../AddressDisplay/AddressDisplay.style.scss\";\r\n\r\nconst AddressDisplay = ({ formattedAddress }) => {\r\n  return (\r\n    <div>\r\n      <div className='locationTitleContainer'>\r\n        <div className='locationIconholder'>\r\n          <LocationOnIcon fontSize='large' color='primary'></LocationOnIcon>\r\n        </div>\r\n        <div className='locationDesc'>\r\n          <div>\r\n            <PersonPinIcon />\r\n          </div>\r\n          <div> Your current location :</div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className='AddressContainer'>\r\n          <div className='addressHolder'>\r\n            <address>{formattedAddress}</address>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  formattedAddress: state.formattedAddress.formattedAddress,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddressDisplay);\r\n","const GoogleCredentials = {\r\n  apiKey: \"AIzaSyArulgFkLD1tIDxd0ia5YDtjMd53J8Zuwc\",\r\n};\r\n\r\nexport default GoogleCredentials;\r\n\r\n/*\r\ndev use - AIzaSyAyesbQMyKVVbBgKVi2g6VX7mop2z96jBo\r\nprod use - AIzaSyArulgFkLD1tIDxd0ia5YDtjMd53J8Zuwc\r\n*/\r\n","export const setUserCords = (userCords) => ({\r\n  type: \"SET_USER_CORDS\",\r\n  payload: userCords,\r\n});\r\n","export const setCordChangeFlag = (cordChangeFlag) => ({\r\n  type: \"SET_CORD_CHANGE\",\r\n  payload: cordChangeFlag,\r\n});\r\n","import React from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport GoogleCredentials from \"./../../../Utils/GoogleCredentials\";\r\nimport \"./../MapsDisplay/google-maps.style.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setUserCords } from \"./../../../redux/userAddress/userCords.action\";\r\nimport { setCordChangeFlag } from \"./../../../redux/userAddress/cordChangeFlag.action\";\r\n\r\nconst containerStyle = {\r\n  position: \"relative\",\r\n  width: \"inherit\",\r\n  height: \"inherit\",\r\n};\r\n\r\nclass GoogleMaps extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  onMarkerDragEnd = (coord) => {\r\n    if (this.props.draggable) {\r\n      const { latLng } = coord;\r\n      const lat = latLng.lat();\r\n      const lng = latLng.lng();\r\n      this.props.setUserCords([lat, lng]);\r\n      this.props.setuserCordsFlag(true);\r\n    }\r\n\r\n    //console.log(lat + \",\" + lng);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className='mapHolder'>\r\n        <Map\r\n          key={new Date().getTime()}\r\n          google={this.props.google}\r\n          zoom={14}\r\n          containerStyle={containerStyle}\r\n          initialCenter={{\r\n            lat: this.props.currentLat,\r\n            lng: this.props.currentLong,\r\n          }}\r\n        >\r\n          <Marker title='Your current location' position={{ lat: this.props.currentLat, lng: this.props.currentLong }} name={\"Your position\"} id={1} draggable={this.props.draggable} onDragend={(t, map, coord) => this.onMarkerDragEnd(coord)}></Marker>\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setUserCords: (userCords) => dispatch(setUserCords(userCords)),\r\n  setuserCordsFlag: (flag) => dispatch(setCordChangeFlag(flag)),\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(\r\n  GoogleApiWrapper({\r\n    apiKey: GoogleCredentials.apiKey,\r\n  })(GoogleMaps)\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"./../MapsDisplay/MapsDisplay.style.scss\";\r\n\r\nimport GoogleMaps from \"./google-maps.component\";\r\n\r\nconst MapsDisplay = ({ userCords }) => {\r\n  return userCords != null ? (\r\n    <div className='mapcontainer'>\r\n      <Paper variant='outlined' className='shadowCustom'>\r\n        <div className='mapcontainer'>\r\n          <GoogleMaps currentLat={userCords[0]} currentLong={userCords[1]} draggable={true}></GoogleMaps>\r\n          <div className='instruction'>Drag the Locator to change your present location.</div>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userCords: state.userCords.userCords,\r\n});\r\n\r\nexport default connect(mapStateToProps)(MapsDisplay);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./../TagsDisplay/TagsDisplay.style.scss\";\r\n\r\nconst TagsDisplay = (props) => {\r\n  return props.locationTags != null && props.selectedHospitalZoneTags != null ? (\r\n    props.tagtype == \"userTag\" ? (\r\n      <div className='staticTagHolderContainer'>\r\n        {props.locationTags.map((elem, index) => (\r\n          <div key={index} className='staticKeyTags'>\r\n            {elem}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    ) : (\r\n      <div className='staticTagHolderContainer'>\r\n        {props.selectedHospitalZoneTags.map((elem, index) => (\r\n          <div key={index} className='staticKeyTags'>\r\n            {elem}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  ) : null;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  locationTags: state.locationTags.locationTags,\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n});\r\n\r\nexport default connect(mapStateToProps)(TagsDisplay);\r\n","export const setLocationModal = (locationModal) => ({\r\n  type: \"SET_LOCATION_MODAL\",\r\n  payload: locationModal,\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Header } from \"./../../../Components/Header/Header.component\";\r\nimport \"./../DisplayAmbulance/DisplayAmbulanceModal.style.scss\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport GoogleCredentials from \"./../../../Utils/GoogleCredentials\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst iframe = \"<iframe width='100%' height='450px' frameborder='0' style='border:0' src='https://www.google.com/maps/embed/v1/search?key=\";\r\n\r\nconst Iframe = (props) => {\r\n  //props.iframe = props.iframe + props.pin + \"' allowfullscreen></iframe>\";\r\n  return <div className='iframe-container' dangerouslySetInnerHTML={{ __html: props.iframe ? props.iframe + GoogleCredentials.apiKey + \"&center=\" + props.userCords[0] + \",\" + props.userCords[1] + \"&zoom=11&q=health+ambulance+service+medical+near+\" + props.pin + \"' allowfullscreen></iframe>\" : \"\" }} />;\r\n};\r\n\r\nconst DisplayAmbulance = (props) => {\r\n  return (\r\n    <Dialog fullScreen open={props.open} onClose={props.onclose} aria-labelledby='Display Ambulances' aria-describedby='Display Ambulances'>\r\n      <Header />\r\n      <div className='filterTagsHeader'>Check Ambulance Services Near You</div>\r\n      <div className='filterTagsBodySortAmbulance'>\r\n        <div className='SortTitleDesc'>View available ambulance services near you.We strongly suggest to call and book an appointment.</div>\r\n        <div className='dividerHolder'>\r\n          <Divider />\r\n        </div>\r\n        <div className='iframeContainer'>\r\n          <Iframe iframe={iframe} pin={props.addressComponents[props.addressComponents.length - 1][\"long_name\"]} userCords={props.userCords} />\r\n        </div>\r\n        <div className='actionHolder'>\r\n          <Button variant='contained' color='primary' onClick={() => props.onclose()} color='primary'>\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  addressComponents: state.addressComponents.addressComponents,\r\n  userCords: state.userCords.userCords,\r\n});\r\nexport default connect(mapStateToProps)(DisplayAmbulance);\r\n","import React from \"react\";\r\nimport GoogleCredentials from \"./../GoogleCredentials\";\r\n\r\nconst apiKey = \"&key=\" + GoogleCredentials.apiKey;\r\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\nexport const CommunicatorFetch = (urlName, params, proxyNeed) => {\r\n  console.log(\"Communication fetched==\" + urlName);\r\n  let url;\r\n  if (params !== undefined) {\r\n    if (proxyNeed != undefined) {\r\n      url = proxyurl + urlName + params + apiKey;\r\n    } else {\r\n      url = urlName + params + apiKey;\r\n    }\r\n  } else {\r\n    url = urlName;\r\n  }\r\n  //url =  url;\r\n  return fetch(url).then((response) => response.json());\r\n};\r\n","const ApiUrls = {\r\n  getUserCurrentLocation: \"https://maps.googleapis.com/maps/api/geocode/json?latlng=\",\r\n  getPlaceDetails: \"https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input=\",\r\n  getHospitalCompleteDetails: \"https://maps.googleapis.com/maps/api/place/details/json?place_id=\",\r\n  getCoronaUpdate: \"https://api.covid19india.org/state_district_wise.json\",\r\n  getHospitalCodes: \"https://joyjd.github.io/cv19api/hospitalCodes.json\",\r\n  getHospitalDetails: \"https://joyjd.github.io/cv19api/hospitalDetails.json\",\r\n};\r\n\r\nexport default ApiUrls;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Header } from \"./../../../Components/Header/Header.component\";\r\nimport \"./../DisplayAmbulance/DisplayAmbulanceModal.style.scss\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport \"./../DisplayCoronaDetails/DisplayCoronaModal.style.scss\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#1a355c\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: \"#639ab626\",\r\n    },\r\n  },\r\n}))(TableRow);\r\nconst useStyles = makeStyles({\r\n  table: {},\r\n  root: {\r\n    borderRadius: \"205px\",\r\n    background: \"#e9e2e2\",\r\n    boxShadow: \"3px 3px 7px #c6c0c0,  -3px -3px 7px #ffffff\",\r\n    color: \"#1a355c9e\",\r\n    margin: \"0 5px 2px 0\",\r\n  },\r\n});\r\n\r\nconst DisplayCoronaDetails = (props) => {\r\n  const classes = useStyles();\r\n  return props.c_data != null ? (\r\n    <Dialog fullScreen open={props.open} onClose={props.onclose} aria-labelledby='Display Corona Details' aria-describedby='Display Corona Details'>\r\n      <Header />\r\n      <div className='filterTagsHeader'>View COVID19 Information</div>\r\n      <div className='filterTagsBodyCoronaTable'>\r\n        <div className='SortTitleDesc'>District-wise data of COVID19 pandemic in West Bengal.</div>\r\n        <div className='dividerHolder'>\r\n          <Divider />\r\n        </div>\r\n        <div>\r\n          <TableContainer component={Paper} id='hospitalDetailTable'>\r\n            <Table className={classes.table} aria-label='customized table'>\r\n              <TableHead>\r\n                <TableRow style={{ backgroundColor: \"red\", color: \"white\" }}>\r\n                  <StyledTableCell>District</StyledTableCell>\r\n                  <StyledTableCell align='right'>Infected</StyledTableCell>\r\n                  <StyledTableCell align='right'>Active</StyledTableCell>\r\n                  <StyledTableCell align='right'>Recovered</StyledTableCell>\r\n                  <StyledTableCell align='right'>Dead</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {Object.keys(props.c_data).map((el, index) => (\r\n                  <StyledTableRow key={index}>\r\n                    <StyledTableCell align='right'>{el}</StyledTableCell>\r\n                    <StyledTableCell align='right'>{props.c_data[el][\"confirmed\"]}</StyledTableCell>\r\n                    <StyledTableCell align='right'>{props.c_data[el][\"active\"]}</StyledTableCell>\r\n                    <StyledTableCell align='right'>{props.c_data[el][\"recovered\"]}</StyledTableCell>\r\n                    <StyledTableCell align='right'>{props.c_data[el][\"deceased\"]}</StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n\r\n        <div className='actionHolder'>\r\n          <Button variant='contained' color='primary' onClick={() => props.onClose()} color='primary'>\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  ) : null;\r\n};\r\n\r\nexport default DisplayCoronaDetails;\r\n","import React from \"react\";\r\n\r\nimport \"./../Ambulance/Ambulance.style.scss\";\r\n\r\nimport DisplayAmbulance from \"./DisplayAmbulance/DisplayAmbulanceModal.component\";\r\n\r\nimport { CommunicatorFetch } from \"./../../Utils/Communicator/Communicator.component\";\r\nimport APiUrls from \"./../../Utils/ApiUrls.data\";\r\n\r\nimport DisplayCoronaDetails from \"./DisplayCoronaDetails/DisplayCoronaModal.component\";\r\n\r\nclass Ambulance extends React.Component {\r\n  totalData = null;\r\n  constructor() {\r\n    super();\r\n    this.myRef = React.createRef();\r\n    this.myRef2 = React.createRef();\r\n    this.state = {\r\n      infected: 0,\r\n      recovered: 0,\r\n      deceased: 0,\r\n      displayambulance: false,\r\n      displayCorona: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n    this.getCoronaDetails();\r\n  }\r\n\r\n  getCoronaDetails = () => {\r\n    CommunicatorFetch(APiUrls.getCoronaUpdate).then(\r\n      (data) => {\r\n        console.log(data);\r\n        this.totalData = data[\"West Bengal\"][\"districtData\"];\r\n        let infected = 0;\r\n        let recovered = 0;\r\n        let dead = 0;\r\n        Object.keys(this.totalData).forEach((dst_name) => {\r\n          infected += this.totalData[dst_name][\"confirmed\"];\r\n          recovered += this.totalData[dst_name][\"recovered\"];\r\n          dead += this.totalData[dst_name][\"deceased\"];\r\n        });\r\n        this.setState({\r\n          infected: infected,\r\n          recovered: recovered,\r\n          deceased: dead,\r\n        });\r\n      },\r\n      (error) => {}\r\n    );\r\n  };\r\n  handleScroll = () => {\r\n    const scrollY = window.scrollY;\r\n    const scrollTop = this.myRef.current.scrollTop;\r\n    const offsetTop = this.myRef.current.offsetTop;\r\n    let leftPosition = scrollY - offsetTop;\r\n    leftPosition = leftPosition + 250;\r\n    //console.log(leftPosition);\r\n    this.myRef2.current.style.left = leftPosition + \"px\";\r\n    //this.myRef2.current.style.transition = \"left 1s\";\r\n\r\n    if (this.ambulanceTravelNode != null && this.ambulanceTravelNode > leftPosition) {\r\n      this.myRef2.current.classList.add(\"displayAmb2\");\r\n      this.myRef2.current.classList.remove(\"displayAmb1\");\r\n    } else if (this.ambulanceTravelNode != null && leftPosition < 0) {\r\n      this.myRef2.current.classList.remove(\"displayAmb2\");\r\n      this.myRef2.current.classList.add(\"displayAmb1\");\r\n    }\r\n    this.ambulanceTravelNode = leftPosition;\r\n  };\r\n\r\n  handleCloseAmbulanceModal = () => {\r\n    this.setState({\r\n      displayambulance: false,\r\n    });\r\n  };\r\n  openAmbulanceModal = () => {\r\n    this.setState({\r\n      displayambulance: true,\r\n    });\r\n  };\r\n\r\n  openCoronaModal = () => {\r\n    this.setState({\r\n      displayCorona: true,\r\n    });\r\n  };\r\n\r\n  closeCoronaModal = () => {\r\n    this.setState({\r\n      displayCorona: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='amb' ref={this.myRef} onScroll={this.handleScroll}>\r\n          <div className='bg-move displayAmb1' ref={this.myRef2}>\r\n            <div className='coronaDataHolderTitle '>COVID19 Updates(WB)</div>\r\n\r\n            <div className='dataHolder'>\r\n              <div>\r\n                <div className='dataDiv'>Infected</div>\r\n                <div>{this.state.infected}</div>\r\n              </div>\r\n              <div>\r\n                <div className='dataDiv'>Recovered</div>\r\n                <div>{this.state.recovered}</div>\r\n              </div>\r\n              <div>\r\n                <div className='dataDiv'>Death</div>\r\n                <div>{this.state.deceased}</div>\r\n              </div>\r\n            </div>\r\n            <div className='coronaDetailsPromptHolder' onClick={() => this.openCoronaModal()}>\r\n              <mark>\r\n                <em>View District-wise</em>\r\n              </mark>\r\n            </div>\r\n            {/*  <div className='coronaDetailsPromptHolder'>\r\n              <div onClick={() => this.openCoronaModal()}>\r\n                <em>View District-wise</em>\r\n              </div>\r\n            </div>\r\n            <div className='ambulancePromptHolder'>\r\n              <label onClick={() => this.openAmbulanceModal()}>Find Ambulances</label>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        <div className='ambLight light--flash'></div>\r\n        <div className='ambulanceContainer' onClick={() => this.openAmbulanceModal()}>\r\n          <div className='ambulancePromptHolder'>Find Ambulances Near You</div>\r\n        </div>\r\n\r\n        <DisplayAmbulance onclose={() => this.handleCloseAmbulanceModal()} open={this.state.displayambulance} />\r\n        <DisplayCoronaDetails c_data={this.totalData} open={this.state.displayCorona} onClose={() => this.closeCoronaModal()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ambulance;\r\n","import React from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport GoogleCredentials from \"./../../../Utils/GoogleCredentials\";\r\nimport \"./../SelectedHospitalSnapShot/SelectedHospitalSnapShot.style.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst containerStyle = {\r\n  position: \"relative\",\r\n  width: \"inherit\",\r\n  height: \"inherit\",\r\n};\r\n\r\nclass SelectedHospitalSnapShot extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.props.searchText != null) {\r\n      return false;\r\n    } else if (nextProps.selectedHospitalList == this.props.selectedHospitalList) {\r\n      return false;\r\n    } else {\r\n      if (JSON.stringify(nextProps.selectedHospitalZoneTags) == JSON.stringify(this.props.selectedHospitalZoneTags)) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.selectedHospitalList != null ? (\r\n      <div className='mapHolderHospitalSnapshot'>\r\n        <Map\r\n          key={new Date().getTime()}\r\n          google={this.props.google}\r\n          zoom={10}\r\n          containerStyle={containerStyle}\r\n          initialCenter={{\r\n            lat: this.props.userCords[0],\r\n            lng: this.props.userCords[1],\r\n          }}\r\n        >\r\n          {this.props.selectedHospitalList.map((loc, index) => (\r\n            <Marker key={index} position={{ lat: loc.h_loc.lat, lng: loc.h_loc.lng }} name={loc.h_name} id={1}></Marker>\r\n          ))}\r\n        </Map>\r\n        <div className='instructionSnapShot'>\r\n          <strong>{this.props.selectedHospitalList.length} Hospitals </strong> found at your selected Areas/Zones.\r\n          <br />\r\n          Scroll down to view the detailed list of hospitals.\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userCords: state.userCords.userCords,\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n  searchText: state.searchText.searchText,\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n});\r\n\r\nexport default connect(mapStateToProps)(\r\n  GoogleApiWrapper({\r\n    apiKey: GoogleCredentials.apiKey,\r\n  })(SelectedHospitalSnapShot)\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./../Location/Location.style.scss\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport AddressDisplay from \"./AddressDisplay/AddressDisplay.component\";\r\nimport MapsDisplay from \"./../Common/MapsDisplay/MapsDisplay.component\";\r\nimport TagsDisplay from \"./../Common/TagsDisplay/TagsDisplay.component\";\r\nimport { setLocationTags } from \"./../../redux/userAddress/locationTags.action\";\r\nimport { setLocationModal } from \"./../../redux/locationInput/locationInput.action\";\r\nimport Ambulance from \"./../Ambulance/Ambulance.component\";\r\nimport SelectedHospitalSnapShot from \"./SelectedHospitalSnapShot/SelectedHospitalSnapShot.component\";\r\n\r\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\r\nconst exclusiveKeywords = [\"country\"];\r\n\r\nclass Location extends React.Component {\r\n  renderCount = 0;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.addressComponents != null) {\r\n      this.prepareLocationTags();\r\n    }\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    // console.log(\"getDerivedStateFromProps executed\");\r\n    return null;\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    // console.log(\"shouldComponentUpdate executed\");\r\n    return true;\r\n  }\r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    // console.log(\"getSnapshotBeforeUpdate executed\");\r\n    return null;\r\n  }\r\n\r\n  prepareLocationTags = () => {\r\n    let finalTags = this.props.addressComponents.filter((dataElem) => {\r\n      return !dataElem.types.some((el) => exclusiveKeywords.includes(el));\r\n    });\r\n\r\n    this.props.setLocationTags([...new Set(finalTags.map((el) => el[\"long_name\"]).filter((el) => el !== \"West Bengal\"))]);\r\n  };\r\n\r\n  handleOpenLocationModal = () => {\r\n    this.props.setLocationModal(true);\r\n  };\r\n\r\n  render() {\r\n    return this.props.addressComponents != null ? (\r\n      <div>\r\n        <div className='locationCardContainer'>\r\n          <Paper elevation={3} className='transparentBorder'>\r\n            <AddressDisplay />\r\n            <MapsDisplay />\r\n            <div className='addressInputHolder'>\r\n              <div className='addressInputIconHolder'>\r\n                <BorderColorIcon fontSize='small' />\r\n              </div>\r\n              <Button\r\n                style={{\r\n                  fontWeight: \"500\",\r\n                  letterSpacing: \"0\",\r\n                  textTransform: \"none\",\r\n                }}\r\n                size='small'\r\n                onClick={() => this.handleOpenLocationModal()}\r\n              >\r\n                Not Correct? Type your current address\r\n              </Button>\r\n            </div>\r\n\r\n            <TagsDisplay tagtype='userTag' />\r\n            <SelectedHospitalSnapShot />\r\n          </Paper>\r\n        </div>\r\n        <Ambulance />\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setLocationTags: (locationTags) => dispatch(setLocationTags(locationTags)),\r\n  setLocationModal: (locationModal) => dispatch(setLocationModal(locationModal)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  addressComponents: state.addressComponents.addressComponents,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Location);\r\n","export const setLocationTags = (locationTags) => ({\r\n  type: \"SET_LOCATION_TAGS\",\r\n  payload: locationTags,\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HospitalCountDisplay = ({ selectedHospitalList, searchText }) => {\r\n  return selectedHospitalList != null ? (\r\n    <div>\r\n      <div>Hospitals Found ({selectedHospitalList.length})*</div>\r\n      {searchText == null ? <div className='listNature'>* based on your current location areas</div> : <div className='listNature'>* based on Search Results</div>}\r\n    </div>\r\n  ) : null;\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n  searchText: state.searchText.searchText,\r\n});\r\nexport default connect(mapStateToProps)(HospitalCountDisplay);\r\n","export const setSelectedHospitalList = (selectedHospitalList) => ({\r\n  type: \"SET_SELECTED_HOSPITAL_LIST\",\r\n  payload: selectedHospitalList,\r\n});\r\n","export const setSearchText = (searchText) => ({\r\n  type: \"SET_SEARCH_TEXT\",\r\n  payload: searchText,\r\n});\r\n","export const customSort = (hospitalList) => {\r\n  let temp = hospitalList.sort((a, b) => Number(a[\"h_dist\"]) - Number(b[\"h_dist\"]));\r\n  let lastIndex = null;\r\n  let remArr = [];\r\n  temp.forEach((hospital, index) => {\r\n    if (hospital[\"h_dist\"] == \"\") {\r\n      lastIndex = index;\r\n    }\r\n  });\r\n\r\n  if (lastIndex != null) {\r\n    remArr = temp.splice(0, lastIndex + 1);\r\n  }\r\n  //console.log(remArr);\r\n  temp = temp.concat(remArr);\r\n\r\n  return temp;\r\n};\r\n\r\nexport const capitalletter = (str) => {\r\n  str = str.split(\" \");\r\n\r\n  for (let i = 0, x = str.length; i < x; i++) {\r\n    str[i] = str[i][0].toUpperCase() + str[i].substr(1);\r\n  }\r\n\r\n  return str.join(\" \");\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setSelectedHospitalList } from \"./../../../redux/selectedHospital/selectedHospital.action\";\r\nimport { setSearchText } from \"./../../../redux/search/search.action\";\r\n\r\nimport \"./../SearchBox/SearchBox.style.scss\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { customSort } from \"./../../../Utils/Sort.component\";\r\n\r\nclass SearchBox extends React.Component {\r\n  org_selectedHospital = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchEngine: null,\r\n      searchText: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.hospitalDetails != null) {\r\n      this.prepareSearchEngine();\r\n    }\r\n  }\r\n\r\n  prepareSearchEngine = () => {\r\n    let tempResult = [];\r\n\r\n    Object.keys(this.props.hospitalDetails).forEach((elem) => {\r\n      this.props.hospitalDetails[elem].forEach((el) => {\r\n        //prepare entire list\r\n        this.org_selectedHospital.push(el);\r\n\r\n        //lookup in detailslist\r\n        if (this.props.completeHospitalData[el[\"h_name\"]]) {\r\n          if (this.props.completeHospitalData[el[\"h_name\"]][\"name\"] != el[\"h_name\"]) {\r\n            tempResult.push({\r\n              [el[\"h_name\"]]: [el[\"h_name\"], this.props.completeHospitalData[el[\"h_name\"]][\"name\"]],\r\n            });\r\n          } else {\r\n            tempResult.push({\r\n              [el[\"h_name\"]]: [el[\"h_name\"]],\r\n            });\r\n          }\r\n        } else {\r\n          tempResult.push({\r\n            [el[\"h_name\"]]: [el[\"h_name\"]],\r\n          });\r\n        }\r\n      });\r\n    });\r\n    this.setState({\r\n      searchEngine: tempResult,\r\n    });\r\n    //console.log(tempResult);\r\n  };\r\n\r\n  getSearchResults = () => {\r\n    let finalKeys = [];\r\n    let finalResult = [];\r\n    let res = this.state.searchEngine.filter((ob) => {\r\n      return ob[Object.keys(ob)[0]].filter((e) => e.toLowerCase().includes(this.state.searchText.toLowerCase())).length != 0;\r\n    });\r\n\r\n    res.forEach((el) => finalKeys.push(Object.keys(el)[0]));\r\n    finalKeys.forEach((hptl) => {\r\n      finalResult.push(this.org_selectedHospital.filter((hosp) => hosp.h_name.includes(hptl))[0]);\r\n    });\r\n    finalResult = [...new Set(finalResult)];\r\n    /* this.setState({\r\n      selectedHospitalList: finalResult,\r\n    }); */\r\n    this.props.setSelectedlList(customSort(finalResult));\r\n  };\r\n\r\n  preparePostSearchSelectedZoneHospitalList = () => {\r\n    let tempHptlList = [];\r\n    this.props.selectedHospitalLocationTags.forEach((elem) => {\r\n      if (this.props.hospitalDetails[elem]) {\r\n        this.props.hospitalDetails[elem].forEach((el) => tempHptlList.push(el));\r\n      }\r\n    });\r\n    this.props.setSelectedlList(customSort(tempHptlList));\r\n    /* this.setState({\r\n      selectedHospitalList: tempHptlList,\r\n    }); */\r\n  };\r\n\r\n  handleSearchEngine = (el) => {\r\n    if (el.target.value.trim() != \"\") {\r\n      this.props.setSearchText(el.target.value);\r\n      this.setState({ searchText: el.target.value }, () => this.getSearchResults());\r\n    } else {\r\n      this.props.setSearchText(null);\r\n      this.setState(\r\n        {\r\n          searchText: \"\",\r\n        },\r\n        () => this.preparePostSearchSelectedZoneHospitalList()\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='displayFlex searchBoxHospitalContainer shadowCustom'>\r\n        <div className='searchIconHolder'>\r\n          <SearchIcon />\r\n        </div>\r\n        <div className='w_100'>\r\n          <TextField type='search' id='outlined-textarea' value={this.state.searchText} className='w_100' label='Search Hospitals By Name' placeholder='Find any COVID19 hospital ..' variant='filled' onChange={(el) => this.handleSearchEngine(el)} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSelectedlList: (selectedHospitalList) => dispatch(setSelectedHospitalList(selectedHospitalList)),\r\n  setSearchText: (search) => dispatch(setSearchText(search)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  hospitalDetails: state.totalHospitalDetails.totalHospitalDetails,\r\n  selectedHospitalLocationTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n  completeHospitalData: state.rawHospitalData.rawHospitalData,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBox);\r\n","export const setSelectedHospitalZoneTags = (selectedHospitalZoneTags) => ({\r\n  type: \"SET_SELECTED_HOSPITAL_ZONE_TAGS\",\r\n  payload: selectedHospitalZoneTags,\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./../FilterModal/FilterAreaTags.style.scss\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Header } from \"./../../../Header/Header.component\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\n\r\nclass FilterTags extends React.Component {\r\n  loc_selectedTags = null;\r\n  loc_leftTags = null;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedTags: [],\r\n      leftTags: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.selectedHospitalZoneTags != null && this.props.hospitalDetails != null) {\r\n      this.setState({\r\n        selectedTags: this.props.selectedHospitalZoneTags,\r\n        leftTags: Object.keys(this.props.hospitalDetails).filter((el) => !this.props.selectedHospitalZoneTags.includes(el)),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevprops) {\r\n    if (prevprops.selectedHospitalZoneTags != this.props.selectedHospitalZoneTags) {\r\n      console.log(this.props.selectedHospitalZoneTags);\r\n      console.log(this.state.selectedTags);\r\n\r\n      this.loc_selectedTags = this.props.selectedHospitalZoneTags;\r\n      this.loc_leftTags = Object.keys(this.props.hospitalDetails).filter((el) => !this.props.selectedHospitalZoneTags.includes(el));\r\n      if (this.loc_selectedTags != this.state.selectedTags) {\r\n        this.updateLocateStates();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateLocateStates = () => {\r\n    this.setState({\r\n      selectedTags: this.loc_selectedTags,\r\n      leftTags: this.loc_leftTags,\r\n    });\r\n  };\r\n  handleCancel = () => {\r\n    this.setState(\r\n      {\r\n        selectedTags: this.props.selectedHospitalZoneTags,\r\n        leftTags: Object.keys(this.props.hospitalDetails).filter((el) => !this.props.selectedHospitalZoneTags.includes(el)),\r\n      },\r\n      () => this.props.onClose(\"\", \"cancel\")\r\n    );\r\n  };\r\n\r\n  handleFilterChange = (type, el) => {\r\n    if (type == \"del\") {\r\n      let temp = this.state.selectedTags;\r\n      temp.splice(\r\n        temp.findIndex((e) => e == el),\r\n        1\r\n      );\r\n\r\n      this.setState({\r\n        selectedTags: temp,\r\n        leftTags: this.state.leftTags.concat(el),\r\n      });\r\n    } else {\r\n      let temp = this.state.leftTags;\r\n      temp.splice(\r\n        temp.findIndex((e) => e == el),\r\n        1\r\n      );\r\n      this.setState({\r\n        selectedTags: this.state.selectedTags.concat(el),\r\n        leftTags: temp,\r\n      });\r\n    }\r\n  };\r\n  handleDelete = (type, el) => this.handleFilterChange(type, el);\r\n\r\n  render() {\r\n    return this.props.open ? (\r\n      <Dialog fullScreen open={this.props.open} onClose={this.props.onclose} aria-labelledby='Select Hospital Zones' aria-describedby='Option to select Hospital Area Tags'>\r\n        <Header />\r\n        <div className='filterTagsHeader'>Select Areas/ Zones</div>\r\n        <div className='filterTagsBody'>\r\n          <div>You can select areas/zones to view COVID19 treatment providing hospitals of that area.</div>\r\n          <div className='dividerHolder'>\r\n            <Divider />\r\n          </div>\r\n          <div className='displayFlex headerTagLineDesc'>\r\n            <div>\r\n              <LocalOfferIcon fontSize='small' />\r\n            </div>\r\n            <div>\r\n              Selected {this.state.selectedTags.length} out of {this.state.selectedTags.length + this.state.leftTags.length} Areas/Zones.\r\n            </div>\r\n          </div>\r\n          <div className='chipsHolder'>\r\n            {this.state.selectedTags.sort().map((el, index) => {\r\n              return (\r\n                <div key={index} className='chipsKey'>\r\n                  <Chip key={index} size='small' label={el} color='primary' onClick={() => this.handleFilterChange(\"del\", el)} onDelete={() => this.handleDelete(\"del\", el)} deleteIcon={<DoneIcon />} />\r\n                </div>\r\n              );\r\n            })}\r\n            {this.state.leftTags.sort().map((el, index) => {\r\n              return (\r\n                <div key={index} className='chipsKey'>\r\n                  <Chip key={index} size='small' label={el} color='default' onClick={() => this.handleFilterChange(\"add\", el)} onDelete={() => this.handleDelete(\"add\", el)} deleteIcon={<AddIcon />} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className='dividerHolder displayEqual'>\r\n            <Button variant='contained' color='primary' onClick={() => this.handleCancel()}>\r\n              Cancel\r\n            </Button>\r\n            <Button variant='contained' color='primary' onClick={() => this.props.onClose(this.state.selectedTags, \"\")}>\r\n              Apply Selection\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n  hospitalDetails: state.totalHospitalDetails.totalHospitalDetails,\r\n});\r\nexport default connect(mapStateToProps)(FilterTags);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./../FilterDisplay/FilterDisplay.style.scss\";\r\n\r\nimport { setSelectedHospitalList } from \"./../../../redux/selectedHospital/selectedHospital.action\";\r\nimport { setSearchText } from \"./../../../redux/search/search.action\";\r\nimport { setSelectedHospitalZoneTags } from \"./../../../redux/selectedHospital/selectedHospitalZoneTags.action\";\r\nimport { customSort } from \"./../../../Utils/Sort.component\";\r\nimport FilterTags from \"./FilterModal/FilterAreaTags.component\";\r\n\r\nclass FilterDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      areaTagsOption: false,\r\n    };\r\n  }\r\n\r\n  handleCloseAreaTags = (el, opt) => {\r\n    if (opt == \"\") {\r\n      let temp = [];\r\n      el.forEach((e) => {\r\n        if (this.props.hospitalDetails[e]) {\r\n          temp = temp.concat(this.props.hospitalDetails[e]);\r\n        }\r\n      });\r\n\r\n      this.props.setSelectedlList(customSort(temp));\r\n      this.props.setSelectedHospitalZoneTags(el);\r\n    }\r\n    this.setState(\r\n      {\r\n        areaTagsOption: false,\r\n      },\r\n      () => this.props.setSearchText(null)\r\n    );\r\n  };\r\n\r\n  handleOpenAreaTags = () => {\r\n    this.setState({\r\n      areaTagsOption: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.props.selectedHospitalZoneTags != null && this.props.hospitalDetails != null ? (\r\n      <div className='filterDiv'>\r\n        <Button variant='contained' color='primary' onClick={() => this.handleOpenAreaTags()}>\r\n          Filter by Area / Zones\r\n        </Button>\r\n        <FilterTags open={this.state.areaTagsOption} onClose={(el, opt) => this.handleCloseAreaTags(el, opt)} />\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n  hospitalDetails: state.totalHospitalDetails.totalHospitalDetails,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSelectedlList: (selectedHospitalList) => dispatch(setSelectedHospitalList(selectedHospitalList)),\r\n  setSearchText: (search) => dispatch(setSearchText(search)),\r\n  setSelectedHospitalZoneTags: (selectedZoneTags) => dispatch(setSelectedHospitalZoneTags(selectedZoneTags)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterDisplay);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Header } from \"./../../../Header/Header.component\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport \"./../SortModal/SortModal.style.scss\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default function SortModal(props) {\r\n  const [value, setValue] = React.useState(props.initialVal == \"\" ? \"isChecked_op_hospital\" : props.initialVal);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    props.handleRadioChange(event.target.value);\r\n  };\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  return (\r\n    <Dialog fullScreen={fullScreen} open={props.open} onClose={props.onclose} aria-labelledby='Sort Hospitals' aria-describedby='Option to sort Hospitals'>\r\n      <Header />\r\n      <div className='filterTagsHeader'>Sort Hospitals</div>\r\n      <div className='filterTagsBodySort'>\r\n        <div className='SortTitleDesc'>You can sort list of hospitals according to your view</div>\r\n        <div className='dividerHolder'>\r\n          <Divider />\r\n        </div>\r\n        <div className='displayFlex headerTagLineDesc'></div>\r\n        <div className='chipsHolder'>\r\n          <RadioGroup aria-label='gender' name='gender1' value={value} onChange={handleChange}>\r\n            <FormControlLabel value='isChecked_op_bed' control={<Radio color='primary' />} label='More vacancy of COVID beds' />\r\n            <FormControlLabel value='isChecked_op_hospital' control={<Radio color='primary' />} label='Hospitals nearer to your current location' />\r\n          </RadioGroup>\r\n        </div>\r\n        <div className='dividerHolder displayEqual'>\r\n          <Button variant='contained' color='primary' onClick={() => props.onClose(false)} color='primary'>\r\n            Cancel\r\n          </Button>\r\n          <Button variant='contained' color='primary' onClick={() => props.onClose(true)} color='primary' autoFocus>\r\n            Sort\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./../SortDisplay/SortDisplay.style.scss\";\r\n\r\nimport { setSelectedHospitalList } from \"./../../../redux/selectedHospital/selectedHospital.action\";\r\n\r\nimport SortModal from \"./SortModal/SortModal.component\";\r\n\r\nclass SortDisplay extends React.Component {\r\n  sortOptions = \"\";\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openFilteralert: false,\r\n    };\r\n  }\r\n\r\n  sortData = () => {\r\n    if (this.sortOptions == \"isChecked_op_hospital\") {\r\n      let temp = this.props.selectedHospitalList.sort((a, b) => Number(a[\"h_dist\"]) - Number(b[\"h_dist\"]));\r\n      let lastIndex = null;\r\n      let remArr = [];\r\n      temp.forEach((hospital, index) => {\r\n        if (hospital[\"h_dist\"] == \"\") {\r\n          lastIndex = index;\r\n        }\r\n      });\r\n\r\n      if (lastIndex != null) {\r\n        remArr = temp.splice(0, lastIndex + 1);\r\n      }\r\n      console.log(remArr);\r\n      temp = temp.concat(remArr);\r\n\r\n      this.props.setSelectedlList(temp);\r\n    } else {\r\n      this.props.setSelectedlList(this.props.selectedHospitalList.sort((a, b) => b[\"c_bed\"] - a[\"c_bed\"]));\r\n    }\r\n  };\r\n  handleSwitchChange = (val) => {\r\n    this.sortOptions = val;\r\n  };\r\n\r\n  handleOpenFilter = () => {\r\n    this.setState({\r\n      openFilteralert: true,\r\n    });\r\n  };\r\n  handleCloseAlert = (el) => {\r\n    this.setState({\r\n      openFilteralert: false,\r\n    });\r\n    if (el) {\r\n      this.sortData();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='sortDiv'>\r\n        <Button variant='contained' color='primary' onClick={() => this.handleOpenFilter()}>\r\n          Manage View\r\n        </Button>\r\n        <SortModal open={this.state.openFilteralert} onClose={(el) => this.handleCloseAlert(el)} initialVal={this.sortOptions} handleRadioChange={(val) => this.handleSwitchChange(val)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSelectedlList: (selectedHospitalList) => dispatch(setSelectedHospitalList(selectedHospitalList)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortDisplay);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HostiptalZoneCountDisplay = ({ selectedHospitalZoneTags }) => {\r\n  return selectedHospitalZoneTags != null ? selectedHospitalZoneTags.length : null;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalZoneTags: state.selectedHospitalZoneTags.selectedHospitalZoneTags,\r\n});\r\nexport default connect(mapStateToProps)(HostiptalZoneCountDisplay);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport FindInPageIcon from \"@material-ui/icons/FindInPage\";\r\nimport \"./../HospitalItem/HospitalItem.style.scss\";\r\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\r\nimport * as geolib from \"geolib\";\r\nimport PriorityHighIcon from \"@material-ui/icons/PriorityHigh\";\r\nimport { customSort } from \"./../../../../Utils/Sort.component\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#1a355c\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: \"#639ab626\",\r\n    },\r\n  },\r\n}))(TableRow);\r\nconst useStyles = makeStyles({\r\n  table: {},\r\n  root: {\r\n    borderRadius: \"205px\",\r\n    background: \"#e9e2e2\",\r\n    boxShadow: \"3px 3px 7px #c6c0c0,  -3px -3px 7px #ffffff\",\r\n    color: \"#1a355c9e\",\r\n    margin: \"0 5px 2px 0\",\r\n  },\r\n});\r\nconst formatter = new Intl.NumberFormat(\"en-US\", {\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\nconst HospitalItem = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return props.userCords != null ? (\r\n    <TableContainer component={Paper} id='hospitalDetailTable'>\r\n      <Table className={classes.table} aria-label='customized table'>\r\n        <TableHead>\r\n          <TableRow style={{ backgroundColor: \"red\", color: \"white\" }}>\r\n            <StyledTableCell>Covid19 Hospital({props.selectedHospitalList.length})</StyledTableCell>\r\n            <StyledTableCell align='right'>Area</StyledTableCell>\r\n            <StyledTableCell align='right'>Vacant Beds*</StyledTableCell>\r\n            <StyledTableCell align='right'></StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {props.selectedHospitalList.map((el) => (\r\n            <StyledTableRow key={el[\"h_name\"]}>\r\n              <StyledTableCell component='th' scope='row'>\r\n                <div style={{ textDecoration: \"underline\" }} onClick={() => props.onClick(el[\"h_name\"], el[\"h_zone\"], el[\"c_bed\"], el[\"h_dist\"])}>\r\n                  <strong> {el[\"h_name\"]}</strong>\r\n                </div>\r\n                <div className='distanceIndicator'>\r\n                  {el[\"h_loc\"] != \"\" ? (\r\n                    <span className='distanceData'>\r\n                      <DirectionsRunIcon />\r\n                    </span>\r\n                  ) : (\r\n                    <span className='errorData'>\r\n                      <PriorityHighIcon />\r\n                    </span>\r\n                  )}\r\n                  <span>{el[\"h_loc\"] != \"\" ? (el[\"h_dist\"] = formatter.format(geolib.getPreciseDistance({ latitude: props.userCords[0], longitude: props.userCords[1] }, { latitude: el[\"h_loc\"][\"lat\"], longitude: el[\"h_loc\"][\"lng\"] }) / 1000)) : \"\"}</span>\r\n                  {el[\"h_loc\"] != \"\" ? <span>Km away*</span> : <span>Data not known</span>}\r\n                </div>\r\n              </StyledTableCell>\r\n              <StyledTableCell align='right'>{el[\"h_zone\"]}</StyledTableCell>\r\n              <StyledTableCell align='right'>\r\n                <div className='displayFlex'>\r\n                  {el[\"c_bed\"] > 2 ? (\r\n                    <div className='icon-green'>\r\n                      <i></i>\r\n                    </div>\r\n                  ) : (\r\n                    <div className='icon-orange'>\r\n                      <i></i>\r\n                    </div>\r\n                  )}\r\n\r\n                  <strong>{el[\"c_bed\"]}</strong>\r\n                </div>\r\n              </StyledTableCell>\r\n              <StyledTableCell align='right'>\r\n                <Fab classes={{ root: classes.root }} size='small' color='primary' aria-label='add' onClick={() => props.onClick(el[\"h_name\"], el[\"h_zone\"], el[\"c_bed\"], el[\"h_dist\"])}>\r\n                  <FindInPageIcon fontSize='small' />\r\n                </Fab>\r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      {props.selectedHospitalList.length == 0 ? <div className='noResultFoundcontainer'>No hospitals found.</div> : <span></span>}\r\n    </TableContainer>\r\n  ) : null;\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  userCords: state.userCords.userCords,\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n});\r\nexport default connect(mapStateToProps)(HospitalItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport GoogleCredentials from \"./../../../Utils/GoogleCredentials\";\r\n\r\nconst iframe = \"<iframe   width='100%' height='300px' frameborder='0' style='border:0' src='https://www.google.com/maps/embed/v1/directions?key=\";\r\n\r\nconst GmapIframe = (props) => {\r\n  return <div className='iframe-container' dangerouslySetInnerHTML={{ __html: iframe ? iframe + GoogleCredentials.apiKey + \"&origin=\" + props.userCords[0] + \",\" + props.userCords[1] + \"&destination=\" + props.hospitalCord[0] + \",\" + props.hospitalCord[1] + \"&zoom=11&avoid=tolls|highways' allowfullscreen></iframe>\" : \"\" }} />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userCords: state.userCords.userCords,\r\n});\r\nexport default connect(mapStateToProps)(GmapIframe);\r\n","import React from \"react\";\r\nimport \"./../HospitalDetailsModal/HospitalModalDetailTemplate.style.scss\";\r\nimport GoogleMaps from \"./../../Components/Common/MapsDisplay/google-maps.component\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport AirlineSeatIndividualSuiteIcon from \"@material-ui/icons/AirlineSeatIndividualSuite\";\r\nimport PhoneInTalkIcon from \"@material-ui/icons/PhoneInTalk\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport HotelIcon from \"@material-ui/icons/Hotel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { green, pink } from \"@material-ui/core/colors\";\r\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\r\nimport CommuteIcon from \"@material-ui/icons/Commute\";\r\nimport DirectionsWalkIcon from \"@material-ui/icons/DirectionsWalk\";\r\nimport GmapIframe from \"./RoadDirectionHospital/gmapIframe.component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  smallGreen: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n    color: \"#fff\",\r\n    backgroundColor: green[500],\r\n  },\r\n}));\r\nexport const HospitalModalDetailTemplate = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      {props.data != undefined ? (\r\n        <div className='ribbon'>\r\n          <span>\r\n            <StarIcon fontSize='small' />\r\n            {props.data.rating}\r\n          </span>\r\n        </div>\r\n      ) : null}\r\n      <Paper elevation={3}>\r\n        <div className='hosp_detailContainer'>\r\n          <div className='covidInfoBody'>\r\n            <div>\r\n              <Avatar variant='rounded' className={classes.smallGreen}>\r\n                <HotelIcon fontSize='small' />\r\n              </Avatar>\r\n            </div>\r\n            <div className='displayData displayFlex'>\r\n              <Typography>\r\n                <span className='covidNumberLabel'>{props.c_bed}</span>\r\n              </Typography>\r\n\r\n              <Typography color='textSecondary'> vacant COVID-19 beds *</Typography>\r\n            </div>\r\n          </div>\r\n          <Typography component='div' className='m_t_-5'>\r\n            <Box fontStyle='italic' m={1}>\r\n              <div className='disclaimerCovid'>*data displayed as per WB Government</div>\r\n            </Box>\r\n          </Typography>\r\n          <div className='hospInfoBody'>\r\n            {props.data != undefined ? (\r\n              <div className='displayFlex '>\r\n                <div>\r\n                  <BusinessIcon fontSize='small' />\r\n                </div>\r\n                <div className='displayData'>{props.data.formatted_address}</div>\r\n              </div>\r\n            ) : null}\r\n\r\n            {props.data != undefined ? (\r\n              <div className='displayFlex '>\r\n                <div>\r\n                  <PhoneInTalkIcon fontSize='small' />\r\n                </div>\r\n                <div className='displayData'>\r\n                  <a href='tel:{props.data.formatted_phone_number}'>{props.data.formatted_phone_number} </a> / <a href='tel:{props.data.international_phone_number}'> {props.data.international_phone_number}</a>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {props.data != undefined ? (\r\n              <div className='displayFlex '>\r\n                <div>\r\n                  <LanguageIcon fontSize='small' />\r\n                </div>\r\n                <div className='displayData'>{props.data.website ? <a href='{props.data.website}'>{props.data.website} </a> : \"Not Known\"}</div>\r\n              </div>\r\n            ) : null}\r\n            {props.data != undefined ? (\r\n              <div className='mapcontainerHospital'>\r\n                {/* <GoogleMaps draggable={false} currentLat={props.data.geometry.location.lat} currentLong={props.data.geometry.location.lng}></GoogleMaps> */}\r\n                <GmapIframe hospitalCord={[props.data.geometry.location.lat, props.data.geometry.location.lng]} />\r\n              </div>\r\n            ) : null}\r\n            {props.h_dist != \"\" ? (\r\n              <div className='displayFlex m_tb_5'>\r\n                <div className='displayFlex'>\r\n                  <CommuteIcon />\r\n                  <DirectionsWalkIcon fontSize='small' />\r\n                </div>\r\n                {/* <div className='displayData'>Tentatively {props.h_dist} Km away from you</div> */}\r\n                <div className='displayData'>Tentative road-map shown, does not display present traffic conditions.Zoom in to check detils.</div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n      <div className='dividerCont'>\r\n        <Divider />\r\n      </div>\r\n      {props.data != undefined && props.data.reviews != undefined ? (\r\n        <div>\r\n          <div className='displayFlex m_tb_10'>\r\n            <div>\r\n              <RateReviewIcon fontSize='small' />\r\n            </div>\r\n            <div className='displayData fontBold'>User Reviews</div>\r\n          </div>\r\n          <div className='reviewContainer'>\r\n            {props.data.reviews.map((rv, index) => (\r\n              <Card key={index} className='m_b_6 cardReviews'>\r\n                <CardHeader avatar={<Avatar src={rv.profile_photo_url}></Avatar>} title={rv.author_name} subheader={rv.relative_time_description} />\r\n                <CardContent>\r\n                  <Typography variant='body2' color='textSecondary' component='p'>\r\n                    {rv.text}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport \"./../HospitalListModal/HospitalListModal.style.scss\";\r\n\r\nexport default function HospitalListModal(props) {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen={fullScreen} open={props.open} onClose={props.handleClose} aria-labelledby='responsive-dialog-title'>\r\n        <div className='hospitalImageContainer'>\r\n          <div className='hosp_headerTitleContainer'>{props.headerTitle}</div>\r\n        </div>\r\n\r\n        <DialogContent>{props.body}</DialogContent>\r\n        <DialogActions>\r\n          <Button style={{ margin: \"10px 20px 10px 0\" }} autoFocus onClick={() => props.onClose()} variant='contained' color='primary'>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nexport default function BackDropCustom(props) {\r\n  return props.open == true ? (\r\n    <Dialog open={props.open} onClose={props.handleAlertClose} aria-labelledby='alert-dialog-title' aria-describedby='alert-dialog-description'>\r\n      <DialogContent>\r\n        <CircularProgress></CircularProgress>\r\n      </DialogContent>\r\n    </Dialog>\r\n  ) : null;\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBuRtnSpkl16_gayi7CkRj3xh98BNzWGKM\",\r\n  authDomain: \"cv19ht.firebaseapp.com\",\r\n  databaseURL: \"https://cv19ht.firebaseio.com\",\r\n  projectId: \"cv19ht\",\r\n  storageBucket: \"cv19ht.appspot.com\",\r\n  messagingSenderId: \"848826688923\",\r\n  appId: \"1:848826688923:web:2f264f379c627668fb2d3e\",\r\n  measurementId: \"G-JLY08JDRW4\",\r\n};\r\n\r\nexport const createHospitalProfile = async (h_name, h_data) => {\r\n  const hospRef = firestore.doc(`hospitals/${h_name}`);\r\n\r\n  const snapShot = await hospRef.get();\r\n\r\n  //console.log(firestore.doc(\"hospitals/abc\"));\r\n  if (!snapShot.exists && (h_data != null || h_data != undefined || h_data != \"\" || h_data != {})) {\r\n    try {\r\n      await hospRef.set({\r\n        ...h_data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  return hospRef;\r\n};\r\n\r\nexport const getHospitalProfileAll = async () => {\r\n  const snapshot = await firebase.firestore().collection(\"hospitals\").get();\r\n  const collection = {};\r\n  snapshot.forEach((doc) => {\r\n    collection[doc.id] = doc.data();\r\n  });\r\n  return collection;\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./../ErrorModal/ErrorModal.style.scss\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport NewReleasesIcon from \"@material-ui/icons/NewReleases\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const ErrorModal = ({ open, onclose, body }) => {\r\n  return (\r\n    <Dialog\r\n      BackdropProps={{\r\n        style: {\r\n          background: \"#b0c1cf\",\r\n          opacity: \"0.97\",\r\n        },\r\n      }}\r\n      PaperProps={{\r\n        style: {\r\n          borderRadius: \"5px\",\r\n          height: \"400px\",\r\n          width: \"400px\",\r\n          backgroundColor: \"#b0c1cf\",\r\n\r\n          boxShadow: \"6px 6px 12px #96a4b0,-6px -6px 12px #cadeee\",\r\n        },\r\n      }}\r\n      onClose={onclose}\r\n      aria-labelledby='simple-dialog-title'\r\n      open={open}\r\n    >\r\n      <DialogContent>\r\n        <div className='ErrorBody'>\r\n          <div className='ErrorHeader'>\r\n            <div className='contentdiv'>\r\n              <NewReleasesIcon fontSize='large' />\r\n            </div>\r\n            <div className='contentdiv'>\r\n              <BuildIcon fontSize='large' />\r\n            </div>\r\n            <div className='contentdiv textHeader'> OOPS !</div>\r\n          </div>\r\n          <div className='ErrorDesc'>{body}</div>\r\n          <div className='ErrorAction'>\r\n            <div>\r\n              <Button variant='contained' color='primary' onClick={() => onclose(true)}>\r\n                Okay\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","export const setRawHospitalData = (rawHospitalData) => ({\r\n  type: \"SET_RAW_HOSPITAL_DATA\",\r\n  payload: rawHospitalData,\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nimport \"./../HospitalListDisplay/HospitalDisplay.style.scss\";\r\n\r\nimport { CommunicatorFetch } from \"./../../../Utils/Communicator/Communicator.component\";\r\nimport ApiUrls from \"./../../../Utils/ApiUrls.data\";\r\n\r\nimport HospitalItem from \"./HospitalItem/HospitalItem.component\";\r\nimport { HospitalModalDetailTemplate } from \"./../../../Modals/HospitalDetailsModal/HospitalModalDetailTemplate.component\";\r\nimport HospitalListModal from \"./HospitalListModal/HospitalListModal.component\";\r\nimport BackDropCustom from \"./../../../Utils/BackDropCustom/BackDropCustom.component\";\r\nimport { createHospitalProfile, getHospitalProfileAll } from \"./../../../firebase/firebase.util\";\r\nimport { ErrorModal } from \"./../../../Modals/ErrorModal/ErrorModal.component\";\r\n\r\nimport { setRawHospitalData } from \"./../../../redux/totalHospitalDetails/rawHospitalData.action\";\r\nimport { setSelectedHospitalList } from \"./../../../redux/selectedHospital/selectedHospital.action\";\r\n\r\nimport { customSort } from \"./../../../Utils/Sort.component\";\r\n\r\nclass HospitalListDisplay extends React.Component {\r\n  proxyNeedFlagFirstCall = false;\r\n  proxyNeedFlagSecondCall = false;\r\n  googleFetchTryCountFirstCall = 0;\r\n  googleFetchTryCountSecondCall = 0;\r\n\r\n  completeHospitalData = [];\r\n  errorBodyMessage = \"\";\r\n  modalContent = {\r\n    body: \"\",\r\n    headerTitle: \"\",\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      openZoneBackDrop: false,\r\n      openModal: false,\r\n      viewErrorModal: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.completeHospitalData != null) {\r\n      this.completeHospitalData = this.props.completeHospitalData;\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.completeHospitalData != null) {\r\n      this.completeHospitalData = this.props.completeHospitalData;\r\n    }\r\n  }\r\n\r\n  createHospitalDetailModayBody = (data, c_bed, h_dist) => {\r\n    let tempHtml;\r\n    if (typeof data == \"string\") {\r\n      tempHtml = <HospitalModalDetailTemplate c_bed={c_bed} h_dist={h_dist} />;\r\n      this.modalContent.headerTitle = data;\r\n    } else {\r\n      tempHtml = <HospitalModalDetailTemplate data={data} c_bed={c_bed} h_dist={h_dist} />;\r\n      this.modalContent.headerTitle = data[\"name\"];\r\n    }\r\n\r\n    this.modalContent.body = tempHtml;\r\n  };\r\n  handleOpenModal = () => {\r\n    this.setState({ openModal: true, openZoneBackDrop: false });\r\n  };\r\n  handleHospitalDetailsPre = (h_name, h_zone, c_bed, h_dist) => {\r\n    this.setState(\r\n      {\r\n        openZoneBackDrop: true,\r\n      },\r\n      () => this.handleHospitalDetails(h_name, h_zone, c_bed, h_dist)\r\n    );\r\n  };\r\n\r\n  handleHospitalDetails = (h_name, h_zone, c_bed, h_dist) => {\r\n    if (this.completeHospitalData[h_name]) {\r\n      this.createHospitalDetailModayBody(this.completeHospitalData[h_name], c_bed, h_dist);\r\n      this.handleOpenModal();\r\n    } /* else if(){\r\n           // For satellite cases\r\n    }  */ else {\r\n      let temp_hname;\r\n\r\n      if (h_name.split(\"\").includes(\"[\")) {\r\n        temp_hname = h_name.split(\"[\")[0];\r\n      }\r\n      if (h_name.split(\"\").includes(\"{\")) {\r\n        temp_hname = h_name.split(\"{\")[0];\r\n      } else {\r\n        temp_hname = h_name;\r\n      }\r\n      let searchText = \"\" + temp_hname + \" Hospital Medical,\" + h_zone + \",West Bengal,India\";\r\n      let params = searchText + \"&inputtype=textquery&fields=place_id\";\r\n      let firstCall;\r\n\r\n      if (this.proxyNeedFlagFirstCall) {\r\n        firstCall = CommunicatorFetch(ApiUrls.getPlaceDetails, params, \"proxyNeeded\");\r\n      } else {\r\n        firstCall = CommunicatorFetch(ApiUrls.getPlaceDetails, params);\r\n      }\r\n\r\n      firstCall\r\n        .then(\r\n          (data) => {\r\n            if (data[\"candidates\"].length != 0 && data[\"status\"] == \"OK\") {\r\n              let place_id = data[\"candidates\"][0][\"place_id\"];\r\n              let prms = place_id + \"&fields=name,geometry,photos,rating,adr_address,business_status,formatted_address,formatted_phone_number,international_phone_number,opening_hours,website,price_level,rating,review,user_ratings_total\";\r\n              return prms;\r\n              //return CommunicatorFetch(ApiUrls.getHospitalCompleteDetails, prms);\r\n            } else {\r\n              return \"\";\r\n            }\r\n          },\r\n          (error) => {\r\n            //handle error scenerio for first call\r\n            ++this.googleFetchTryCountFirstCall;\r\n            if (this.googleFetchTryCountFirstCall == 1) {\r\n              this.proxyNeedFlagFirstCall = true;\r\n              this.handleHospitalDetails(h_name, h_zone, c_bed, h_dist);\r\n            }\r\n            if (this.googleFetchTryCountFirstCall > 1) {\r\n              this.googleFetchTryCountFirstCall = 0;\r\n              this.proxyNeedFlagFirstCall = false;\r\n\r\n              console.log(\"HospitalZoneComponent+ First call====p_id-=====ERROR !!!!!!\");\r\n              this.errorBodyMessage = \"It seems Google API failed to retrieve details for \" + h_name + \".Either there is no details data available for this particular hospital over internet or Google failed to retrieve data at the moment.Please try again in sometime.\";\r\n              this.setState({\r\n                openZoneBackDrop: false,\r\n                viewErrorModal: true,\r\n              });\r\n            }\r\n          }\r\n        )\r\n        .then((prms) => (this.proxyNeedFlagSecondCall ? CommunicatorFetch(ApiUrls.getHospitalCompleteDetails, prms, \"proxyNeeded\") : CommunicatorFetch(ApiUrls.getHospitalCompleteDetails, prms)))\r\n        .then(\r\n          (data) => {\r\n            if (data != \"\") {\r\n              //get the new data\r\n              if (data[\"status\"] == \"OK\") {\r\n                // this.completeHospitalData[h_name] = data[\"result\"];\r\n\r\n                createHospitalProfile(h_name, data[\"result\"]);\r\n                //getHospitalProfileAll().then((data) => this.props.setRawHospitalData(data));\r\n                this.completeHospitalData[h_name] = data[\"result\"];\r\n                this.props.setRawHospitalData(this.completeHospitalData);\r\n                // this.props.setRawHospitalData(getHospitalProfileAll());\r\n                //UPDATE h_dist\r\n                this.props.selectedHospitalList[this.props.selectedHospitalList.findIndex((el) => el.h_name == h_name)][\"h_loc\"] = data[\"result\"][\"geometry\"][\"location\"];\r\n                this.props.setSelectedlList(customSort(this.props.selectedHospitalList));\r\n                //Call function to form body\r\n                this.createHospitalDetailModayBody(this.completeHospitalData[h_name], c_bed, h_dist);\r\n                this.handleOpenModal();\r\n              } else {\r\n                this.createHospitalDetailModayBody(h_name, c_bed, h_dist);\r\n                this.handleOpenModal();\r\n              }\r\n            } else {\r\n              this.createHospitalDetailModayBody(h_name, c_bed, h_dist);\r\n              this.handleOpenModal();\r\n            }\r\n          },\r\n          (error) => {\r\n            // handle error scenerio for second call\r\n            ++this.googleFetchTryCountSecondCall;\r\n            if (this.googleFetchTryCountSecondCall == 1) {\r\n              this.proxyNeedFlagSecondCall = true;\r\n              //this.handleHospitalDetails(h_name, h_zone, c_bed, h_dist);\r\n            }\r\n\r\n            if (this.googleFetchTryCountSecondCall > 1) {\r\n              this.googleFetchTryCountSecondCall = 0;\r\n              this.proxyNeedFlagSecondCall = false;\r\n\r\n              console.log(\"HospitalZoneComponent+ Second call====details-=====ERROR !!!!!!\");\r\n              if (!this.state.viewErrorModal) {\r\n                this.errorBodyMessage = \"It seems Google API failed to retrieve details for \" + h_name + \".Either there is no details data available for this particular hospital over internet or Google failed to retrieve data at the moment.Please try again in sometime.\";\r\n                this.setState({\r\n                  openZoneBackDrop: false,\r\n                  viewErrorModal: true,\r\n                });\r\n              }\r\n            }\r\n          }\r\n        );\r\n    }\r\n  };\r\n\r\n  handleCloseModal = () => {\r\n    this.setState({ openModal: false });\r\n    this.modalContent.headerTitle = \"\";\r\n    this.modalContent.body = \"\";\r\n  };\r\n  handleErrorClose = () => {\r\n    this.setState({\r\n      viewErrorModal: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return this.props.selectedHospitalList != null ? (\r\n      <CardMedia>\r\n        <div className='hospitalListHoldContainer'>\r\n          <HospitalItem onClick={(h_name, h_zone, c_bed, h_dist) => this.handleHospitalDetailsPre(h_name, h_zone, c_bed, h_dist)} />\r\n        </div>\r\n        <div className='disclaimerHospital'>\r\n          <div>* Data displayed is as per WB Government website</div>\r\n          <div>* Distances shown are tentative and may not be exactly accurate</div>\r\n        </div>\r\n        <HospitalListModal open={this.state.openModal} onClose={this.handleCloseModal} headerTitle={this.modalContent.headerTitle} body={this.modalContent.body} />\r\n        <BackDropCustom open={this.state.openZoneBackDrop} />\r\n        <ErrorModal open={this.state.viewErrorModal} onclose={() => this.handleErrorClose()} body={this.errorBodyMessage} />\r\n      </CardMedia>\r\n    ) : null;\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setRawHospitalData: (rawHospitalData) => dispatch(setRawHospitalData(rawHospitalData)),\r\n  setSelectedlList: (selectedHospitalList) => dispatch(setSelectedHospitalList(selectedHospitalList)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedHospitalList: state.selectedHospitalList.selectedHospital,\r\n  completeHospitalData: state.rawHospitalData.rawHospitalData,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HospitalListDisplay);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./../Hospital/Hospital.style.scss\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\r\nimport DomainTwoToneIcon from \"@material-ui/icons/DomainTwoTone\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExposureIcon from \"@material-ui/icons/Exposure\";\r\n\r\nimport HospitalCountDisplay from \"./../Hospital/HospitalCountDisplay.component\";\r\nimport SearchBox from \"./../Hospital/SearchBox/SearchBox.component\";\r\nimport FilterDisplay from \"./FilterDisplay/FilterDisplay.component\";\r\nimport SortDisplay from \"./SortDisplay/SortDisplay.component\";\r\nimport TagsDisplay from \"./../Common/TagsDisplay/TagsDisplay.component\";\r\nimport HostiptalZoneCountDisplay from \"./HostiptalZoneCountDisplay.component\";\r\nimport HospitalListDisplay from \"./HospitalListDisplay/HospitalDisplay.component\";\r\nimport * as geolib from \"geolib\";\r\n\r\nimport { customSort, capitalletter } from \"./../../Utils/Sort.component\";\r\n\r\nimport { setSelectedHospitalList } from \"./../../redux/selectedHospital/selectedHospital.action\";\r\nimport { setSelectedHospitalZoneTags } from \"./../../redux/selectedHospital/selectedHospitalZoneTags.action\";\r\n\r\nclass Hospital extends React.Component {\r\n  loc_selectedHospitalCount = 0;\r\n  pendingChange = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loc_hospitalZoneTags: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n  componentDidUpdate() {\r\n    if (this.props.locationTags != null && this.props.hospitalDetails != null && this.props.userCords != null && this.props.searchText == null) {\r\n      this.prepareSelectedZoneHospitalList();\r\n    } else if (this.props.locationTags != null && this.props.hospitalDetails != null && this.props.userCords != null && this.props.searchText != null) {\r\n      this.pendingChange = true; //********** IMPLEMENT LATER */\r\n    }\r\n  }\r\n\r\n  prepareSelectedZoneHospitalList = () => {\r\n    let tempHptlList = [];\r\n    let hospitalZoneTags = [];\r\n\r\n    this.props.locationTags.forEach((elem) => {\r\n      if (this.props.hospitalDetails[capitalletter(elem)]) {\r\n        this.props.hospitalDetails[capitalletter(elem)].forEach((el) => {\r\n          if (el[\"h_loc\"][\"lat\"] != undefined || el[\"h_loc\"][\"lng\"] != undefined) {\r\n            el[\"h_dist\"] = Number(geolib.getPreciseDistance({ latitude: this.props.userCords[0], longitude: this.props.userCords[1] }, { latitude: el[\"h_loc\"][\"lat\"], longitude: el[\"h_loc\"][\"lng\"] }) / 1000);\r\n          }\r\n          // console.log(el[\"h_dist\"]);\r\n          tempHptlList.push(el);\r\n        });\r\n        hospitalZoneTags.push(capitalletter(elem));\r\n      }\r\n    });\r\n    //By default Show Kolkata zone- if nothing matches\r\n    if (hospitalZoneTags.length == 0) {\r\n      this.props.hospitalDetails[\"Kolkata\"].forEach((elem) => {\r\n        tempHptlList.push(elem);\r\n      });\r\n      hospitalZoneTags.push(\"Kolkata\");\r\n    }\r\n\r\n    this.props.setSelectedlList(customSort(tempHptlList));\r\n    this.props.setSelectedHospitalZoneTags(hospitalZoneTags);\r\n    this.loc_selectedHospitalCount = tempHptlList.length;\r\n    this.pendingChange = false;\r\n  };\r\n\r\n  render() {\r\n    return this.props.locationTags != null ? (\r\n      <Paper elevation={3} className='transparentBorder' id='containerHospitalList'>\r\n        <div className='hospitalTitleContainer'>\r\n          <div className='hospitalIconholder transparentBorder'>\r\n            <DomainTwoToneIcon fontSize='large' color='primary'></DomainTwoToneIcon>\r\n          </div>\r\n          <div className='hospitalTitleHolderContainer'>\r\n            <div className='hospitalAvatar'>\r\n              <LocalHospitalIcon color='secondary' />\r\n            </div>\r\n            <HospitalCountDisplay />\r\n          </div>\r\n        </div>\r\n        <SearchBox />\r\n        <div className='customButtonGroup'>\r\n          <Paper variant='outlined' square>\r\n            {this.props.searchText == null ? (\r\n              <div className='btnCol'>\r\n                <FilterDisplay />\r\n                <SortDisplay />\r\n              </div>\r\n            ) : null}\r\n            {this.props.searchText == null ? (\r\n              <div>\r\n                <div className='tagHeaderTitle'>\r\n                  <Typography color='textSecondary'>\r\n                    <ExposureIcon fontSize='small' />\r\n                  </Typography>\r\n                  <Typography color='textSecondary'>\r\n                    Selected Areas / Zones (<HostiptalZoneCountDisplay />)\r\n                  </Typography>\r\n                </div>\r\n                <div>\r\n                  <TagsDisplay tagtype='hospitalTag' />\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </Paper>\r\n        </div>\r\n        <HospitalListDisplay />\r\n      </Paper>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSelectedlList: (selectedHospitalList) => dispatch(setSelectedHospitalList(selectedHospitalList)),\r\n  setSelectedHospitalZoneTags: (selectedZoneTags) => dispatch(setSelectedHospitalZoneTags(selectedZoneTags)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  hospitalDetails: state.totalHospitalDetails.totalHospitalDetails,\r\n  locationTags: state.locationTags.locationTags,\r\n  searchText: state.searchText.searchText,\r\n  userCords: state.userCords.userCords,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Hospital);\r\n","import React, { useState } from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { Header } from \"./../../Components/Header/Header.component\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"./../AddressDetailModal/LocationOptionInput.style.scss\";\r\n\r\nexport default class LocationOptionInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      locality: \"\",\r\n      district: \"\",\r\n      pin: \"\",\r\n      state: \"West Bengal\",\r\n      country: \"India\",\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({ [nam]: val });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        BackdropProps={{\r\n          style: {\r\n            background: \"#495aa0cc\",\r\n          },\r\n        }}\r\n        fullScreen\r\n        open={this.props.open}\r\n        onClose={this.props.handleAlertClose}\r\n        aria-labelledby='Location prompt'\r\n        aria-describedby='Get user Location'\r\n      >\r\n        <Header />\r\n        <Container style={{ backgroundColor: \"#495aa0cc\" }}>\r\n          <div className='shadowCustom locBodyHolder'>\r\n            <Paper elevation={3}>\r\n              <div className='locPromptheader'>Provide Address Details</div>\r\n              <div className='locPromptbody'>\r\n                <div>We can trace your current location based on the address details you provide.</div>\r\n                <div className='textFieldContainer'>\r\n                  <TextField className='w_100' id='standard-multiline-static' name='locality' value={this.state.locality} onChange={(e) => this.handleInputChange(e)} label='Your locality' multiline rows={4} />\r\n                </div>\r\n                <div className='textFieldContainer'>\r\n                  <TextField className='w_100' id='standard-basic' name='district' value={this.state.district} onChange={(e) => this.handleInputChange(e)} label='District' />\r\n                </div>\r\n                <div className='textFieldContainer'>\r\n                  <TextField className='w_100' id='standard-basic' name='pin' value={this.state.pin} onChange={(e) => this.handleInputChange(e)} type='number' label='Pin Code' />\r\n                </div>\r\n                <div className='textFieldContainer'>\r\n                  <TextField\r\n                    className='w_100'\r\n                    id='standard-read-only-input'\r\n                    label='State'\r\n                    defaultValue='West Bengal'\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='textFieldContainer'>* Currently we are only supporting this application within West Bengal</div>\r\n                <div className='textFieldContainer'>\r\n                  <Button variant='contained' color='primary' onClick={() => this.props.onClose(this.state)}>\r\n                    Submit Location Details\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Paper>\r\n          </div>\r\n        </Container>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Fade from \"@material-ui/core/Fade\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Fab from \"@material-ui/core/Fab\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { BackDropDefault } from \"./Utils/BackDropDefault/BackDropOrg.component\";\n\nimport { connect } from \"react-redux\";\n\nimport { Header } from \"./Components/Header/Header.component\";\nimport { Footer } from \"./Components/Footer/Footer.component\";\nimport Location from \"./Components/Location/Location.component\";\nimport Hospital from \"./Components/Hospital/Hospital.component\";\n\nimport { CommunicatorFetch } from \"./Utils/Communicator/Communicator.component\";\nimport ApiUrls from \"./Utils/ApiUrls.data\";\n\nimport { ErrorModal } from \"./Modals/ErrorModal/ErrorModal.component\";\nimport WelcomeModal from \"./Modals/WelcomeModal/WelcomeModal.component\";\nimport LocationOptionInput from \"./Modals/AddressDetailModal/LocationOptionInput.component\";\n\nimport { setTotalHospitalDetails } from \"./redux/totalHospitalDetails/totalHospital.action\";\nimport { setAddressComponents } from \"./redux/userAddress/addressComponents.action\";\nimport { setFormattedAddress } from \"./redux/userAddress/formattedAddress.action\";\nimport { setUserCords } from \"./redux/userAddress/userCords.action\";\nimport { setRawHospitalData } from \"./redux/totalHospitalDetails/rawHospitalData.action\";\nimport { setLocationModal } from \"./redux/locationInput/locationInput.action\";\nimport { setCordChangeFlag } from \"./redux/userAddress/cordChangeFlag.action\";\n\nimport { dummyLoc } from \"./assets/dummyLoc\";\n\nimport { createHospitalProfile, getHospitalProfileAll } from \"./firebase/firebase.util\";\n\nconst env = \"prod\"; // prod -  dev\n\nclass App extends React.Component {\n  proxyNeedFlag = false;\n  googleFetchTryCount = 0;\n\n  errorBodyMessage = \"\";\n  hospitalList = [];\n  loc_locationCoordinates_lat = null;\n  loc_locationCoordinates_long = null;\n  loc_cordChangeFlag = null;\n  constructor() {\n    super();\n    this.state = {\n      openWelcomeAlert: false,\n      viewErrorModal: false,\n      openBackDrop: false,\n      snackBar: false,\n      snackBarMessage: \"\",\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"App mounted\");\n    this.setState(\n      {\n        openWelcomeAlert: true,\n        openPermissionDeniedAlert: false,\n      },\n      () => this.prepareHospitalData()\n    );\n    // createHospitalProfile();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.showLocation != this.props.showLocation) {\n      this.handleCloseWelcomeAlert();\n    }\n    if (this.loc_cordChangeFlag != this.props.userCordChangeFlag) {\n      console.log(\"inside app update\");\n      this.loc_cordChangeFlag = !this.props.userCordChangeFlag;\n      this.getLocationWhenCordsChangedByUser();\n      this.props.setuserCordsFlag(this.loc_cordChangeFlag);\n    }\n  }\n\n  prepareHospitalData = () => {\n    CommunicatorFetch(ApiUrls.getHospitalCodes)\n      .then((data) => {\n        let tempArr = data.filter((elem) => Object.keys(elem).length >= 4).filter((el) => el[\"vacant\"] != 0 && typeof el[\"vacant\"] !== \"string\");\n        this.hospitalList = Object.assign([], tempArr);\n      })\n      .then(() => getHospitalProfileAll())\n      .then((data) => {\n        this.arrangeHospitalKeyMap(data);\n      });\n  };\n\n  arrangeHospitalKeyMap(data) {\n    let hospitalDetailsData = data;\n    let tempDup = {};\n    let tempMap = {};\n    for (let i = 0, j = this.hospitalList.length - 1; i <= this.hospitalList.length / 2, j >= this.hospitalList.length / 2; i++, j--) {\n      if (tempMap[this.hospitalList[i][\"district\"]]) {\n        if (tempMap[this.hospitalList[i][\"district\"]].find((el) => el[\"name\"] == this.hospitalList[i][\"name\"]) == undefined) {\n          tempMap[this.hospitalList[i][\"district\"]].push({\n            h_name: this.hospitalList[i][\"name\"],\n            c_bed: this.hospitalList[i][\"vacant\"],\n            h_zone: this.hospitalList[i][\"district\"],\n            h_loc: hospitalDetailsData[this.hospitalList[i][\"name\"]] ? (hospitalDetailsData[this.hospitalList[i][\"name\"]][\"geometry\"] ? hospitalDetailsData[this.hospitalList[i][\"name\"]][\"geometry\"][\"location\"] : \"\") : \"\",\n            h_dist: \"\",\n          });\n        }\n      } else {\n        tempMap[this.hospitalList[i][\"district\"]] = [\n          {\n            h_name: this.hospitalList[i][\"name\"],\n            c_bed: this.hospitalList[i][\"vacant\"],\n            h_zone: this.hospitalList[i][\"district\"],\n            h_loc: hospitalDetailsData[this.hospitalList[i][\"name\"]] ? (hospitalDetailsData[this.hospitalList[i][\"name\"]][\"geometry\"] ? hospitalDetailsData[this.hospitalList[i][\"name\"]][\"geometry\"][\"location\"] : \"\") : \"\",\n            h_dist: \"\",\n          },\n        ];\n      }\n\n      if (tempMap[this.hospitalList[j][\"district\"]]) {\n        if (tempMap[this.hospitalList[j][\"district\"]].find((el) => el[\"name\"] == this.hospitalList[j][\"name\"]) == undefined) {\n          tempMap[this.hospitalList[j][\"district\"]].push({\n            h_name: this.hospitalList[j][\"name\"],\n            c_bed: this.hospitalList[j][\"vacant\"],\n            h_zone: this.hospitalList[j][\"district\"],\n            h_loc: hospitalDetailsData[this.hospitalList[j][\"name\"]] ? (hospitalDetailsData[this.hospitalList[j][\"name\"]][\"geometry\"] ? hospitalDetailsData[this.hospitalList[j][\"name\"]][\"geometry\"][\"location\"] : \"\") : \"\",\n            h_dist: \"\",\n          });\n        }\n      } else {\n        tempMap[this.hospitalList[j][\"district\"]] = [\n          {\n            h_name: this.hospitalList[j][\"name\"],\n            c_bed: this.hospitalList[j][\"vacant\"],\n            h_zone: this.hospitalList[j][\"district\"],\n            h_loc: hospitalDetailsData[this.hospitalList[j][\"name\"]] ? (hospitalDetailsData[this.hospitalList[j][\"name\"]][\"geometry\"] ? hospitalDetailsData[this.hospitalList[j][\"name\"]][\"geometry\"][\"location\"] : \"\") : \"\",\n            h_dist: \"\",\n          },\n        ];\n      }\n    }\n    //Fix for 24-parganas\n    tempMap[\"North 24 Parganas\"] = Object.assign([], tempMap[\"N-24 Pgs\"].concat(tempMap[\"North 24 Pgs\"]));\n    delete tempMap[\"N-24 Pgs\"];\n    delete tempMap[\"North 24 Pgs\"];\n    tempMap[\"North 24 Parganas\"].forEach((elm) => (elm[\"h_zone\"] = \"North 24 Parganas\"));\n\n    this.props.setTotalHospitalDetails(tempMap);\n    this.props.setRawHospitalData(data);\n  }\n\n  getLocationWhenCordsChangedByUser = () => {\n    this.setState(\n      {\n        openBackDrop: true,\n      },\n      () => this.getFormattedAddress(this.props.userCords[0], this.props.userCords[1])\n    );\n  };\n\n  getLocationTrack = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        //watchPosition(  // need to implement getPosition logic with timeout for movement\n        (pos) => {\n          if (this.loc_locationCoordinates_lat != pos.coords.latitude && this.loc_locationCoordinates_long != pos.coords.longitude) {\n            console.log(pos.coords.latitude);\n            console.log(pos.coords.longitude);\n            this.getFormattedAddress(pos.coords.latitude, pos.coords.longitude);\n          } else {\n            this.setState({\n              openBackDrop: false,\n            });\n          }\n        },\n        (error) => {\n          //ifgeolocation failed\n          if (error.message == \"Timeout expired\") {\n            this.handleBackDropClose();\n            this.errorBodyMessage = \"Geo location timed out\";\n            this.setState(\n              {\n                viewErrorModal: true,\n              },\n              () => this.getLocationTrack()\n            );\n\n            //temporary for DEV\n            //this.getFormattedAddress(22.5815353, 88.466984);\n          } else {\n            //show pop up if denied\n            this.handleBackDropClose();\n            this.setState({\n              openPermissionDeniedAlert: true,\n            });\n\n            this.props.setLocationModal(true);\n          }\n        }\n      );\n    }\n  };\n\n  getFormattedAddress = (lat, long) => {\n    this.loc_locationCoordinates_lat = lat; //for local check\n    this.loc_locationCoordinates_long = long; //for local check\n    CommunicatorFetch(ApiUrls.getUserCurrentLocation, lat + \",\" + long).then(\n      (data) => {\n        if (data.results.length != 0) {\n          this.props.setFormattedAddress(data.results[0].formatted_address);\n          this.props.setUserCords([data.results[0].geometry.location.lat, data.results[0].geometry.location.lng]);\n          this.props.setAddressComponents(data.results[0].address_components);\n\n          this.setState({\n            openBackDrop: false,\n          });\n        } else {\n          // Google denied Map, hence need to show proper error messages\n          if (env == \"prod\") {\n            this.errorBodyMessage = \"Well, it seems Google MAP API is denied at the moment. This is something unusual. Please refresh the page or try again in sometime.\";\n            this.setState(\n              {\n                openBackDrop: false,\n                viewErrorModal: true,\n              },\n              () => this.props.setUserCords([lat, long])\n            );\n          }\n          //current implementation for DEV purposes start\n          else if (env == \"dev\") {\n            let data = dummyLoc;\n            this.props.setFormattedAddress(data.results[0].formatted_address);\n\n            this.props.setAddressComponents(data.results[0].address_components);\n            this.props.setUserCords([data.results[0].geometry.location.lat, data.results[0].geometry.location.lng]);\n            this.setState({\n              openBackDrop: false,\n            });\n          }\n\n          //current implementation for DEV purposes end\n        }\n      },\n      (error) => {\n        // Google Web api failed, hence need to show proper error messages\n        if (env == \"prod\") {\n          this.errorBodyMessage = \"Well, it seems Google MAP API failed at the moment. This is something unusual. Please refresh the page or try again in sometime.\";\n          this.setState(\n            {\n              openBackDrop: false,\n              viewErrorModal: true,\n            }\n            //() => this.getFormattedAddress(lat, long)\n          );\n        }\n        //current implementation for DEV purposesstart\n        else if (env == \"dev\") {\n          let data = dummyLoc;\n          this.props.setFormattedAddress(data.results[0].formatted_address);\n          this.props.setUserCords([data.results[0].geometry.location.lat, data.results[0].geometry.location.lng]);\n          this.props.setAddressComponents(data.results[0].address_components);\n\n          this.setState({\n            openBackDrop: false,\n          });\n        }\n\n        //current implementation for DEV purposes end\n      }\n    );\n  };\n\n  TransitionDown = (props) => {\n    return <Slide {...props} direction='down' />;\n  };\n\n  searchGoogleForUserDetails = (el) => {\n    let searchText = \"\" + el.locality + \",\" + el.district + \",\" + el.pin + \",West Bengal,India\";\n    let params = searchText + \"&inputtype=textquery&fields=formatted_address,geometry\";\n    let googleFetchCall;\n    if (this.proxyNeedFlag) {\n      googleFetchCall = CommunicatorFetch(ApiUrls.getPlaceDetails, params, \"proxyNeeded\");\n    } else {\n      googleFetchCall = CommunicatorFetch(ApiUrls.getPlaceDetails, params);\n    }\n\n    googleFetchCall.then(\n      (data) => {\n        if (data[\"candidates\"].length != 0) {\n          this.props.setUserCords([data[\"candidates\"][0].geometry.location.lat, data[\"candidates\"][0].geometry.location.lng]);\n\n          //make custom address componnets\n          let address_components = [];\n          let tempAddr = data[\"candidates\"][0][\"formatted_address\"].split(\",\");\n          tempAddr.pop();\n\n          tempAddr = tempAddr.forEach((elem) => {\n            address_components.push({\n              long_name: elem.trim(),\n              short_name: elem.trim(),\n              types: [\"political\", \"sublocality\", \"sublocality_level_1\"],\n            });\n          });\n\n          this.props.setFormattedAddress(data[\"candidates\"][0][\"formatted_address\"]);\n          this.props.setAddressComponents(address_components);\n\n          this.setState({\n            openBackDrop: false,\n          });\n        } else {\n          //show pop up for google denial\n          ++this.googleFetchTryCount;\n          if (this.googleFetchTryCount == 1) {\n            this.proxyNeedFlag = true;\n            this.searchGoogleForUserDetails(el);\n          }\n\n          if (this.googleFetchTryCount > 1) {\n            this.googleFetchTryCount = 0;\n            this.proxyNeedFlag = false;\n\n            //custom create address_format\n\n            let address_components = [];\n            let tempAddr = el.locality.split(\" \");\n            tempAddr.push(el.district);\n            tempAddr = tempAddr.forEach((elem) => {\n              address_components.push({\n                long_name: elem.trim(),\n                short_name: elem.trim(),\n                types: [\"political\", \"sublocality\", \"sublocality_level_1\"],\n              });\n            });\n            let tmmpAddr = el.locality + \",\" + el.district + \", pin -\" + el.pin;\n\n            this.props.setUserCords([22.5726, 88.3639]);\n            this.props.setFormattedAddress(tmmpAddr);\n            this.props.setAddressComponents(address_components);\n\n            this.setState({\n              openBackDrop: false,\n              snackBar: true,\n              snackBarMessage: \"The location obtained seems a non-valid address or a place outside West Bengal.Since currently we are supporting only within West Bengal, hence your default area is set as Kolkata.\",\n            });\n          }\n        }\n      },\n      (error) => {\n        //show pop up for google denial\n        ++this.googleFetchTryCount;\n        if (this.googleFetchTryCount == 1) {\n          this.proxyNeedFlag = true;\n          this.searchGoogleForUserDetails(el);\n        }\n        if (this.googleFetchTryCount > 1) {\n          this.googleFetchTryCount = 0;\n          this.proxyNeedFlag = false;\n\n          //custom create address_format\n          let address_components = [];\n          let tempAddr = el.locality.split(\" \");\n          tempAddr.push(el.district);\n          tempAddr = tempAddr.forEach((elem) => {\n            address_components.push({\n              long_name: elem.trim(),\n              short_name: elem.trim(),\n              types: [\"political\", \"sublocality\", \"sublocality_level_1\"],\n            });\n          });\n\n          let tmmpAddr = el.locality + \",\" + el.district + \", pin -\" + el.pin;\n\n          this.props.setUserCords([22.5726, 88.3639]);\n          this.props.setFormattedAddress(tmmpAddr);\n          this.props.setAddressComponents(address_components);\n\n          this.setState({\n            openBackDrop: false,\n            snackBar: true,\n            snackBarMessage: \"The location obtained seems a non-valid address or a place outside West Bengal.Since currently we are supporting only within West Bengal, hence your default area is set as Kolkata.\",\n          });\n        }\n      }\n    );\n  };\n\n  handleErrorClose = () => {\n    this.setState(\n      {\n        viewErrorModal: false,\n      },\n      () => window.location.reload()\n    );\n  };\n  handleCloseWelcomeAlert = (el) => {\n    this.setState(\n      {\n        openWelcomeAlert: false,\n        openBackDrop: true,\n      },\n\n      () => this.getLocationTrack()\n    );\n  };\n\n  handleBackDropClose = () => {\n    this.setState({\n      openBackDrop: false,\n    });\n  };\n  handleCloseLocationOptionAlert = (el) => {\n    this.props.setLocationModal(false);\n    this.setState(\n      {\n        openBackDrop: true,\n      },\n      () => {\n        if (el.locality == \"\" && el.district == \"\" && el.pin == \"\") {\n          this.getLocationTrack();\n        } else {\n          this.searchGoogleForUserDetails(el);\n        }\n      }\n    );\n  };\n\n  handleCloseSnackBar = () => {\n    this.setState({\n      snackBar: false,\n    });\n  };\n\n  render() {\n    console.log(\"App Component rendered\");\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Header />\n        <Container maxWidth='md' className='containerApp'>\n          <Location />\n          <Hospital />\n          <BackDropDefault open={this.state.openBackDrop} />\n          <Snackbar\n            open={this.state.snackBar}\n            autoHideDuration={10000}\n            TransitionComponent={this.TransitionDown}\n            message={this.state.snackBarMessage}\n            key={Fade}\n            action={\n              <React.Fragment>\n                <IconButton size='small' aria-label='close' color='inherit' onClick={() => this.handleCloseSnackBar()}>\n                  <CloseIcon fontSize='small' />\n                </IconButton>\n              </React.Fragment>\n            }\n          />\n        </Container>\n\n        {!this.state.openBackDrop ? <Footer /> : null}\n        {/*  <WelcomeModal open={this.state.openWelcomeAlert} onClose={(el) => this.handleCloseWelcomeAlert(el)} /> */}\n        <LocationOptionInput open={this.props.locationModal} onClose={(el) => this.handleCloseLocationOptionAlert(el)} />\n        <ErrorModal open={this.state.viewErrorModal} onclose={() => this.handleErrorClose()} body={this.errorBodyMessage} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locationModal: state.locationModal.locationModalOpen,\n  userCords: state.userCords.userCords,\n  userCordChangeFlag: state.userCordChangeFlag.cordChangeFlag,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setTotalHospitalDetails: (hospitalDetails) => dispatch(setTotalHospitalDetails(hospitalDetails)),\n  setAddressComponents: (addressComponents) => dispatch(setAddressComponents(addressComponents)),\n  setFormattedAddress: (formattedAddress) => dispatch(setFormattedAddress(formattedAddress)),\n  setUserCords: (userCords) => dispatch(setUserCords(userCords)),\n  setRawHospitalData: (rawHospitalData) => dispatch(setRawHospitalData(rawHospitalData)),\n  setLocationModal: (locationModal) => dispatch(setLocationModal(locationModal)),\n  setuserCordsFlag: (flag) => dispatch(setCordChangeFlag(flag)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const setTotalHospitalDetails = (totalHospitalDetails) => ({\r\n  type: \"SET_TOTAL_HOSPITAL_DETAIL\",\r\n  payload: totalHospitalDetails,\r\n});\r\n","export const setAddressComponents = (addressComponents) => ({\r\n  type: \"SET_ADDRESS_COMPONENTS\",\r\n  payload: addressComponents,\r\n});\r\n","export const setFormattedAddress = (formatedAddress) => ({\r\n  type: \"SET_FORMATTED_ADDRESS\",\r\n  payload: formatedAddress,\r\n});\r\n","import React from \"react\";\r\nimport WelcomeModal from \"./Modals/WelcomeModal/WelcomeModal.component\";\r\nimport App from \"./App\";\r\n\r\nclass Bootbase extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      openWelcomeAlert: false,\r\n      enableAppModule: false,\r\n      showLocation: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      enableAppModule: true,\r\n      openWelcomeAlert: true,\r\n    });\r\n  }\r\n\r\n  handleCloseWelcomeAlert = (el) => {\r\n    this.setState({\r\n      showLocation: true,\r\n      openWelcomeAlert: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.enableAppModule ? <App showLocation={this.state.showLocation} /> : null}\r\n        <WelcomeModal open={this.state.openWelcomeAlert} onClose={(el) => this.handleCloseWelcomeAlert(el)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Bootbase;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const INITIAL_STATE = {\r\n  selectedHospital: null,\r\n};\r\n\r\nconst selectedHospitalReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SELECTED_HOSPITAL_LIST\": {\r\n      return {\r\n        ...state,\r\n        selectedHospital: Object.assign([], action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default selectedHospitalReducer;\r\n","const INITIAL_STATE = {\r\n  totalHospitalDetails: null,\r\n};\r\n\r\nconst totalHospitalDetailReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_TOTAL_HOSPITAL_DETAIL\": {\r\n      return {\r\n        ...state,\r\n        totalHospitalDetails: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default totalHospitalDetailReducer;\r\n","const INITIAL_STATE = {\r\n  addressComponents: null,\r\n};\r\n\r\nconst addressComponentsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_ADDRESS_COMPONENTS\": {\r\n      return {\r\n        ...state,\r\n        addressComponents: Object.assign([], action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default addressComponentsReducer;\r\n","const INITIAL_STATE = {\r\n  formattedAddress: null,\r\n};\r\n\r\nconst formattedAddressReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_FORMATTED_ADDRESS\": {\r\n      return {\r\n        ...state,\r\n        formattedAddress: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default formattedAddressReducer;\r\n","const INITIAL_STATE = {\r\n  locationTags: null,\r\n};\r\n\r\nconst locationTagsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_LOCATION_TAGS\": {\r\n      return {\r\n        ...state,\r\n        locationTags: Object.assign([], action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default locationTagsReducer;\r\n","const INITIAL_STATE = {\r\n  userCords: null,\r\n};\r\n\r\nconst userCordsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER_CORDS\": {\r\n      return {\r\n        ...state,\r\n        userCords: Object.assign([], action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userCordsReducer;\r\n","const INITIAL_STATE = {\r\n  selectedHospitalZoneTags: null,\r\n};\r\n\r\nconst selectedHospitalZoneTagsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SELECTED_HOSPITAL_ZONE_TAGS\": {\r\n      return {\r\n        ...state,\r\n        selectedHospitalZoneTags: Object.assign([], action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default selectedHospitalZoneTagsReducer;\r\n","const INITIAL_STATE = {\r\n  rawHospitalData: null,\r\n};\r\n\r\nconst rawHospitalDataReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_RAW_HOSPITAL_DATA\": {\r\n      return {\r\n        ...state,\r\n        rawHospitalData: Object.assign({}, action.payload),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rawHospitalDataReducer;\r\n","const INITIAL_STATE = {\r\n  searchText: null,\r\n};\r\n\r\nconst searchReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_SEARCH_TEXT\": {\r\n      return {\r\n        ...state,\r\n        searchText: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","const INITIAL_STATE = {\r\n  locationModalOpen: false,\r\n};\r\n\r\nconst locationInputReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_LOCATION_MODAL\": {\r\n      return {\r\n        ...state,\r\n        locationModalOpen: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default locationInputReducer;\r\n","const INITIAL_STATE = {\r\n  cordChangeFlag: null,\r\n};\r\n\r\nconst cordChangeFlagReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_CORD_CHANGE\": {\r\n      return {\r\n        ...state,\r\n        cordChangeFlag: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cordChangeFlagReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport selectedHospitalReducer from \"./selectedHospital/selectedHospital.reducer\";\r\nimport totalHospitalDetailReducer from \"./totalHospitalDetails/totalHospital.reducer\";\r\nimport addressComponentsReducer from \"./userAddress/addressComponents.reducer\";\r\nimport formattedAddressReducer from \"./userAddress/formattedAddress.reducer\";\r\nimport locationTagsReducer from \"./userAddress/locationTags.reducer\";\r\nimport userCordsReducer from \"./userAddress/userCords.reducer\";\r\nimport selectedHospitalZoneTagsReducer from \"./selectedHospital/selectedHospitalZoneTags.reducer\";\r\nimport rawHospitalDataReducer from \"./totalHospitalDetails/rawHospitalData.reducer\";\r\nimport searchReducer from \"./search/search.reducer\";\r\nimport locationInputReducer from \"./locationInput/locationInput.reducer\";\r\nimport cordChangeFlagReducer from \"./userAddress/cordChangeFlag.reducer\";\r\n\r\nexport default combineReducers({\r\n  selectedHospitalList: selectedHospitalReducer,\r\n  totalHospitalDetails: totalHospitalDetailReducer,\r\n  addressComponents: addressComponentsReducer,\r\n  formattedAddress: formattedAddressReducer,\r\n  locationTags: locationTagsReducer,\r\n  userCords: userCordsReducer,\r\n  selectedHospitalZoneTags: selectedHospitalZoneTagsReducer,\r\n  rawHospitalData: rawHospitalDataReducer,\r\n  searchText: searchReducer,\r\n  locationModal: locationInputReducer,\r\n  userCordChangeFlag: cordChangeFlagReducer,\r\n});\r\n","import { creatStore, applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\n\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n//import App from \"./App\";\nimport Bootbase from \"./BootBase\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <App /> */}\n      <Bootbase />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}